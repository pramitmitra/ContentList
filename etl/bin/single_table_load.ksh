#! /bin/ksh
# Script generated by software licensed from Ab Initio.
# Use and disclosure are subject to Ab Initio confidentiality and license terms.
export AB_HOME;AB_HOME=${AB_HOME:-/usr/local/abinitio-V3-1-4}
export MPOWERHOME;MPOWERHOME="$AB_HOME"
export AB_COMPONENTS;AB_COMPONENTS="$AB_HOME"'/Projects/root/components'
export PATH
typeset _ab_uname=`uname`
case "$_ab_uname" in
Windows_* )
    PATH="$AB_HOME/bin;$PATH" ;;
CYGWIN_* )
    PATH="`cygpath "$AB_HOME"`/bin:/usr/local/bin:/usr/bin:/bin:$PATH" ;;
* )
    PATH="$AB_HOME/bin:$PATH" ;;
esac
unset ENV
export AB_REPORT;AB_REPORT=${AB_REPORT:-'monitor=300 processes scroll=true'}
unset GDE_EXECUTION

export AB_COMPATIBILITY;AB_COMPATIBILITY=3.1.4.4

# Deployed execution script for graph "single_table_load", compiled at Tuesday, August 26, 2014 12:25:58 using GDE version 3.0.3.1
export AB_JOB;AB_JOB=${AB_JOB_PREFIX:-""}single_table_load
# Begin Ab Initio shell utility functions

: ${_ab_uname:=$(uname)}

function __AB_INVOKE_PROJECT
{
  typeset _AB_PROJECT_KSH="$1" ; shift
  typeset _AB_PROJECT_DIR="$1" ; shift
  typeset _AB_DEFINE_OR_EXECUTE="$1" ; shift
  typeset _AB_START_OR_END="$1" ; shift
  # Check that the project exists:
  if [ ! -r "$_AB_PROJECT_KSH" ] ; then
    print -r -u2 Warning: Cannot find common sandbox script: "$_AB_PROJECT_KSH"
    if [ ! -z "${_AB_CALLING_PROJECT:=}" ] ; then
      print -r -u2 Please check the common sandbox settings for the calling project: "$_AB_CALLING_PROJECT"
    fi
  fi
  if [ $# -gt 0 ] ; then
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END"  "$@"
  else
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END" 
  fi;
}

function __AB_DOTIT
{
  if [ $# -gt 0 ] ; then
    .  "$@"
  fi
}

function __AB_QUOTEIT {
  typeset queue q qq qed lotsaqs s trail
  q="'"
  qq='"'
  if [ X"$1" = X"" ] ; then
    print $q$q
    return
  fi
  lotsaqs=${q}${qq}${q}${qq}${q}
  if [ ${#1} -ge 10000 ]; then
    print -r -- "$1" | sed "s/$q/$lotsaqs/g; 1s/^/$q/; \$s/\$/$q/"
  else
    queue=${1%$q}
    if [ X"$queue" != X"$1" ] ; then
      trail="${qq}${q}${qq}" 
    else 
      trail=""
    fi
    oldIFS="$IFS"
    IFS=$q
    set -- $queue
    IFS="$oldIFS"
    print -rn "$q$1"
    shift
    for s; do
      print -rn "$lotsaqs$s"
    done
    print -r $q$trail
  fi
}

function __AB_dirname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        typeset d='' p="$1"
        # Strip drive letter colon, if present, and put it into d.
        case $p in
        [A-Za-z]:* )
            d=${p%%:*}:
            p=${p#??}
            ;;
        esac
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*[/\\] )
                p=${p%[/\\]} ;;
            * )
                break ;;
            esac
        done
        if [[ "$p" = ?*[/\\]* ]] ; then
            print -r -- "$d${p%[/\\]*}"
        elif [[ "$p" = [/\\]* ]] ; then
            print "$d/"
        else
            print "$d." 
        fi
        ;;
    * ) # Unix
        typeset p="$1"
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*/ )
                p="${p%/}" ;;
            * )
                break ;;
            esac
        done
        case $p in
        ?*/* )
            print -r -- "${p%/*}" ;;
        /* )
            print / ;;
        * )
            print . ;;
        esac
        ;;
    esac
}

function __AB_concat_pathname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        # Does not handle all cases of concatenating partially absolute
        # pathnames, those with only one of a drive letter or an initial
        # separator.
        case $2 in
        [/\\]* | [A-Za-z]:* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | *[/\\] )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    * ) # Unix
        case $2 in
        /* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | */ )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    esac
}

function __AB_COND {
if [ X"$1" = X0  -o X"$1" = Xfalse -o X"$1" = XFalse -o X"$1" = XF -o X"$1" = Xf ] ; then
  print "0"
else
  print "1"
fi
}

# End Ab Initio shell utility functions
export AB_GRAPH_NAME;AB_GRAPH_NAME=single_table_load

# Host Setup Commands:
. /dw/etl/mstr_cfg/etlenv.setup
_AB_PROXY_DIR=single_table_load-ProxyDir-$$
rm -rf "${_AB_PROXY_DIR}"
mkdir "${_AB_PROXY_DIR}"
print -r -- "" > "${_AB_PROXY_DIR}"'/GDE-Parameters'
function __AB_CLEANUP_PROXY_FILES
{
   rm -rf "${_AB_PROXY_DIR}"
   rm -rf "${AB_EXTERNAL_PROXY_DIR}"
   return
}
trap '__AB_CLEANUP_PROXY_FILES' EXIT
# Work around pdksh bug: the EXIT handler is not executed upon a signal.
trap '_AB_status=$?; __AB_CLEANUP_PROXY_FILES; exit $_AB_status' HUP INT QUIT TERM
if [ $# -gt 0 -a X"$1" = X"-help" ]; then
print -r -- 'Usage: single_table_load.ksh <ETL_ID> <JOB_ENV> <INPUT_DML_FILENAME> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
exit 1
fi

# Command Line Processing
function _AB_PARSE_ARGUMENTS {
   unset ETL_ID
   unset JOB_ENV
   unset INPUT_DML_FILENAME
   unset UOW_FROM
   unset UOW_TO
   _ab_index_var=0
   if [ $# -gt 0 ]; then
      export ETL_ID;      ETL_ID="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export JOB_ENV;      JOB_ENV="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export INPUT_DML_FILENAME;      INPUT_DML_FILENAME="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   while [ $# -gt 0 ]; do
   _ab_kwd="${1}"
   let _ab_index_var=_ab_index_var+1
   shift
   case ${_ab_kwd} in
     -UOW_FROM )
      export UOW_FROM;      UOW_FROM="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -UOW_TO )
      export UOW_TO;      UOW_TO="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -CFG_DBC_PARAM )
      CFG_DBC_PARAM="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DB_NAME )
      DB_NAME="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DB_TYPE )
      DB_TYPE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -AB_IDB_ORACLE_CONFIG )
      AB_IDB_ORACLE_CONFIG="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -AB_IDB_MYSQL_CONFIG )
      AB_IDB_MYSQL_CONFIG="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -AB_IDB_MSSQL_CONFIG )
      AB_IDB_MSSQL_CONFIG="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -MSSQL_ODBC_NAME )
      export MSSQL_ODBC_NAME;      MSSQL_ODBC_NAME="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -MSSQL_USERNAME )
      export MSSQL_USERNAME;      MSSQL_USERNAME="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -MSSQL_PASSWORD )
      export MSSQL_PASSWORD;      MSSQL_PASSWORD="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DEFAULT_DB )
      export DEFAULT_DB;      DEFAULT_DB="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DB_SCHEMA )
      export DB_SCHEMA;      DB_SCHEMA="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -EXTRACT_PROCESS_TYPE )
      export EXTRACT_PROCESS_TYPE;      EXTRACT_PROCESS_TYPE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -PARALLEL_FILE_LOAD )
      export PARALLEL_FILE_LOAD;      PARALLEL_FILE_LOAD="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -PREPEND_FILENAME )
      export PREPEND_FILENAME;      PREPEND_FILENAME="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -RECORD_TERM )
      export RECORD_TERM;      RECORD_TERM="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -CNDTL_COMPRESSION )
      export CNDTL_COMPRESSION;      CNDTL_COMPRESSION="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -CNDTL_COMPRESSION_SFX )
      export CNDTL_COMPRESSION_SFX;      CNDTL_COMPRESSION_SFX="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -INPUT_FILE_FILE )
      export INPUT_FILE_FILE;      INPUT_FILE_FILE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -FLOAD_ERRLIMIT )
      export FLOAD_ERRLIMIT;      FLOAD_ERRLIMIT="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -FORCE_FLOAD )
      export FORCE_FLOAD;      FORCE_FLOAD="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -FLOAD_RECORD_COUNT )
      export FLOAD_RECORD_COUNT;      FLOAD_RECORD_COUNT="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -AB_IDB_COMMIT_TABLE_CLEANUP_DAYS )
      export AB_IDB_COMMIT_TABLE_CLEANUP_DAYS;      AB_IDB_COMMIT_TABLE_CLEANUP_DAYS="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -USE_MSSQL_TRUNC_LOAD )
      export USE_MSSQL_TRUNC_LOAD;      USE_MSSQL_TRUNC_LOAD="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -USE_MSSQL_BULK_APPEND )
      export USE_MSSQL_BULK_APPEND;      USE_MSSQL_BULK_APPEND="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -TD_MAX_DATA_SIZE )
      export TD_MAX_DATA_SIZE;      TD_MAX_DATA_SIZE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -QUERY_BAND_STRING )
      export QUERY_BAND_STRING;      QUERY_BAND_STRING="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   * )
      if [ X"${_AB_USED_ARGUMENTS[_ab_index_var]}" != X1 ]; then
         print -r -- 'Unexpected command line argument found: '"${_ab_kwd}"
         print -r -- 'Usage: single_table_load.ksh <ETL_ID> <JOB_ENV> <INPUT_DML_FILENAME> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
         exit 1
      fi
   esac
   done
}
if [ $# -gt 0 ]; then
   _AB_PARSE_ARGUMENTS "$@"
else
   _AB_PARSE_ARGUMENTS
fi

if [ X"${ETL_ID:-}" = X"" ]; then
   print -r -- 'Required parameter ETL_ID undefined'
   print -r -- 'Usage: single_table_load.ksh <ETL_ID> <JOB_ENV> <INPUT_DML_FILENAME> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${JOB_ENV:-}" = X"" ]; then
   print -r -- 'Required parameter JOB_ENV undefined'
   print -r -- 'Usage: single_table_load.ksh <ETL_ID> <JOB_ENV> <INPUT_DML_FILENAME> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi
export INPUT_DML_FILENAME;INPUT_DML_FILENAME=${INPUT_DML_FILENAME:-"$ETL_ID"'.read.dml'}
export UOW_FROM;UOW_FROM=${UOW_FROM:-""}
export UOW_TO;UOW_TO=${UOW_TO:-""}
export UOW_DATE;UOW_DATE=$(print $UOW_TO | cut -c1-8)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UOW_DATE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export OVRD_DML_FILENAME;OVRD_DML_FILENAME="$ETL_ID"'.read.ovrd.dml'
export UOW_APPEND;UOW_APPEND=$(if [[ -n $UOW_TO ]]
  then
    print ".$UOW_TO"
  else
    print ""
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UOW_APPEND of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export JOB_TYPE;JOB_TYPE=load
export DW_CFG;DW_CFG="$DW_CFG"
export DW_DML;DW_DML="$DW_DML"
export DW_EXE;DW_EXE="$DW_EXE"
export ETL_CFG_FILE;ETL_CFG_FILE="$DW_CFG"'/'"$ETL_ID"'.cfg'
export SUBJECT_AREA;SUBJECT_AREA=${ETL_ID%%.*}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter SUBJECT_AREA of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export TABLE_ID;TABLE_ID=${ETL_ID##*.}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TABLE_ID of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export AB_JOB;AB_JOB=$(if [ $ETL_ENV ]
then
   print $AB_JOB.$ETL_ID.$ETL_ENV.$JOB_ENV
else
   print $AB_JOB.$ETL_ID.$JOB_ENV
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter AB_JOB of single_table_load', interpretation 'shell'
   exit $mpjret
fi
CFG_DBC_PARAM=$(JOB_ENV_UPPER=$(print $JOB_ENV | tr [:lower:] [:upper:]) 
  eval print ${JOB_ENV_UPPER}_DBC)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CFG_DBC_PARAM of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export DEFAULT_DB_NAME;DEFAULT_DB_NAME=$(JOB_ENV_UPPER=$(print $JOB_ENV | tr [:lower:] [:upper:])
 eval print teradata_\$DW_${JOB_ENV_UPPER}_DB)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DEFAULT_DB_NAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
DB_NAME=$(grep "^$CFG_DBC_PARAM\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-$DEFAULT_DB_NAME})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DB_NAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export AB_IDB_CONFIG;AB_IDB_CONFIG="${DB_NAME}"'.dbc'
DB_TYPE=$(grep "^dbms\>" $DW_DBC/$AB_IDB_CONFIG | tr [:lower:] [:upper:] | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DB_TYPE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
AB_IDB_ORACLE_CONFIG=$( if [[ $DB_TYPE != 'ORACLE' ]] 
then 
    print oracle_sample.dbc 
else 
    print $AB_IDB_CONFIG
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter AB_IDB_ORACLE_CONFIG of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export TNS_NAME;TNS_NAME=$(grep "^db_name\>" $DW_DBC/$AB_IDB_ORACLE_CONFIG | read A TNS_NAME_TMP
  print ${TNS_NAME_TMP#@})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TNS_NAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export ORA_USERNAME;ORA_USERNAME=$(grep "^$TNS_NAME\>" $DW_LOGINS/ora_logins.dat | read TNS_NAME ORA_USERNAME ORA_PASSWORD ; print $ORA_USERNAME)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ORA_USERNAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export ORA_PASSWORD;ORA_PASSWORD=$(grep "^$TNS_NAME\>" $DW_LOGINS/ora_logins.dat | read TNS_NAME ORA_USERNAME ORA_PASSWORD ; print $ORA_PASSWORD)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ORA_PASSWORD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
AB_IDB_MYSQL_CONFIG=$( if [[ $DB_TYPE != 'MYSQL' ]] 
then 
    print MYSQL_sample.dbc 
else 
    print $AB_IDB_CONFIG 
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter AB_IDB_MYSQL_CONFIG of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export MYSQL_ODBC_NAME;MYSQL_ODBC_NAME=$(grep "^odbc_data_source_name\>" $DW_DBC/$AB_IDB_MYSQL_CONFIG | read A ODBC_NAME_TMP
  print ${ODBC_NAME_TMP})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter MYSQL_ODBC_NAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export MYSQL_USERNAME;MYSQL_USERNAME=$(grep "^$MYSQL_ODBC_NAME\>" $DW_LOGINS/mysql_logins.dat | read ODBC_NAME MYSQL_USERNAME MYSQL_PASSWORD ; print $MYSQL_USERNAME)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter MYSQL_USERNAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export MYSQL_PASSWORD;MYSQL_PASSWORD=$(grep "^$MYSQL_ODBC_NAME\>" $DW_LOGINS/mysql_logins.dat | read ODBC_NAME MYSQL_USERNAME MYSQL_PASSWORD ; print $MYSQL_PASSWORD)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter MYSQL_PASSWORD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
AB_IDB_MSSQL_CONFIG=$( if [[ $DB_TYPE != 'MSSQL' ]]
then
    print mssql_sample.dbc
else 
    print $AB_IDB_CONFIG
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter AB_IDB_MSSQL_CONFIG of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export MSSQL_ODBC_NAME;MSSQL_ODBC_NAME=$(grep "^odbc_data_source_name\>" $DW_DBC/$AB_IDB_MSSQL_CONFIG | read A ODBC_NAME_TMP
  print ${ODBC_NAME_TMP})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter MSSQL_ODBC_NAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export MSSQL_USERNAME;MSSQL_USERNAME=$(grep "^$MSSQL_ODBC_NAME\>" $DW_LOGINS/mssql_logins.dat | read ODBC_NAME MSSQL_USERNAME MSSQL_PASSWORD ; print $MSSQL_USERNAME)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter MSSQL_USERNAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export MSSQL_PASSWORD;MSSQL_PASSWORD=$(grep "^$MSSQL_ODBC_NAME\>" $DW_LOGINS/mssql_logins.dat | read ODBC_NAME MSSQL_USERNAME MSSQL_PASSWORD ; print $MSSQL_PASSWORD)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter MSSQL_PASSWORD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export DW_SA_ARC;DW_SA_ARC="$DW_ARC"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export DW_SA_DAT;DW_SA_DAT="$DW_DAT"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export DW_SA_IN;DW_SA_IN="$DW_IN"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export DW_SA_LOG;DW_SA_LOG=${DW_SA_LOG:-$DW_LOG/$JOB_ENV/$SUBJECT_AREA}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DW_SA_LOG of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export DW_SA_TMP;DW_SA_TMP="$DW_TMP"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export USE_DISTR_TABLE;USE_DISTR_TABLE=$(grep "^USE_DISTR_TABLE\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_DISTR_TABLE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export DISTR_TABLE_LIS_FILE;DISTR_TABLE_LIS_FILE=$(grep "^DISTR_TABLE_LIS_FILE\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DISTR_TABLE_LIS_FILE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export STAGE_DB;STAGE_DB=$(grep "^STAGE_DB\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter STAGE_DB of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export STAGE_TABLE;STAGE_TABLE=$(grep "^STAGE_TABLE\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter STAGE_TABLE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export STAGE_TABLE27;STAGE_TABLE27=${STAGE_TABLE%${STAGE_TABLE#???????????????????????????}}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter STAGE_TABLE27 of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export DEFAULT_DB;DEFAULT_DB="$STAGE_DB"
export DB_SCHEMA;DB_SCHEMA=$(if [[ $DB_TYPE == "MSSQL" ]]
  then
    print -- $(grep "^LOAD_DB_SCHEMA\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
  else
    print -- ""
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DB_SCHEMA of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export LOG_TABLE;LOG_TABLE=${STAGE_TABLE27:-${STAGE_TABLE}}_L
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOG_TABLE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export ERROR_TABLE;ERROR_TABLE=${STAGE_TABLE27:-${STAGE_TABLE}}_E
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ERROR_TABLE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export WORK_TABLE;WORK_TABLE=${STAGE_TABLE27:-${STAGE_TABLE}}_W
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter WORK_TABLE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export FILE_DATETIME;FILE_DATETIME=${CURR_DATETIME:-$(date '+%Y%m%d-%H%M%S')}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FILE_DATETIME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_LOAD_TABLE_CHECK_LOGFILE;UTILITY_LOAD_TABLE_CHECK_LOGFILE="$DW_SA_LOG"'/'"$TABLE_ID"'.ld.utility_load_table_check'"$UOW_APPEND"'.'"$FILE_DATETIME"'.log'
export IN_DIR;IN_DIR=${IN_DIR:-$(grep "^IN_DIR\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print $VALUE/$JOB_ENV/$SUBJECT_AREA)}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter IN_DIR of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_OVRD_DML;USE_OVRD_DML=$(grep "^USE_OVRD_DML\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_OVRD_DML of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export INPUT_DML;INPUT_DML=$(if [[ $USE_OVRD_DML -eq 1 ]]
  then
      print $DW_DML/$OVRD_DML_FILENAME
  else
      print $DW_DML/$INPUT_DML_FILENAME
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter INPUT_DML of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export EXTRACT_PROCESS_TYPE;EXTRACT_PROCESS_TYPE=$(grep "^EXTRACT_PROCESS_TYPE\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter EXTRACT_PROCESS_TYPE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export PARALLEL_FILE_LOAD;PARALLEL_FILE_LOAD=$(grep "^PARALLEL_FILE_LOAD\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter PARALLEL_FILE_LOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export PREPEND_FILENAME;PREPEND_FILENAME=$(grep "^PREPEND_FILENAME\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter PREPEND_FILENAME of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export RECORD_TERM;RECORD_TERM=$(if [ $PREPEND_FILENAME = 1 ]
then
   grep "^RECORD_TERM\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-'\\'n}
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter RECORD_TERM of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export BATCH_SEQ_NUM;BATCH_SEQ_NUM=$(( $(<$DW_SA_DAT/$TABLE_ID.load.batch_seq_num.dat) + 1))
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter BATCH_SEQ_NUM of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export MIN_BATCH_SEQ_NUM;MIN_BATCH_SEQ_NUM="$BATCH_SEQ_NUM"
export MAX_BATCH_SEQ_NUM;MAX_BATCH_SEQ_NUM=$($DW_EXE/get_batch_seq_num.ksh)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter MAX_BATCH_SEQ_NUM of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export CNDTL_COMPRESSION;CNDTL_COMPRESSION=$(grep "^CNDTL_COMPRESSION\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CNDTL_COMPRESSION of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export CNDTL_COMPRESSION_SFX;CNDTL_COMPRESSION_SFX=$(grep "^CNDTL_COMPRESSION_SFX\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CNDTL_COMPRESSION_SFX of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export INPUT_FILE_FILE;INPUT_FILE_FILE="$DW_SA_TMP"'/'"$ETL_ID"'.parallel_file_list.dat'
export EXPANDED_MULTIFILE_FILE;EXPANDED_MULTIFILE_FILE="$DW_SA_TMP"'/'"$ETL_ID"'.expanded_multifile.dat'
export INPUT_FILE;INPUT_FILE=$(INPUT_FILE_TMP=""
if [ $CNDTL_COMPRESSION != 1 ]
then
   CNDTL_COMPRESSION_SFX=""
fi

FIRST_FILE=1

if [[ -n $UOW_TO ]]
then
   typeset -i UOW_ITER_DATE
   typeset -Z2 UOW_ITER_HH
   typeset -i UOW_ITER_DATEHH
   UOW_TO_DATEHH=$UOW_TO_DATE$UOW_TO_HH
   UOW_ITER_DATE=$UOW_FROM_DATE
   UOW_ITER_HH=$UOW_FROM_HH
   UOW_ITER_DATEHH=$UOW_ITER_DATE$UOW_FROM_HH
   UOW_IN_DIR=${IN_DIR%/$UOW_TO_DATE/$UOW_TO_HH/$UOW_TO_MI/$UOW_TO_SS}

   while [[ $UOW_ITER_DATEHH -le $UOW_TO_DATEHH ]]
   do
      if [[ $UOW_ITER_DATE -lt $UOW_TO_DATE ]]
      then
         UOW_ITER_HH_TO=23
      else
         UOW_ITER_HH_TO=$UOW_TO_HH
      fi
      while [[ $UOW_ITER_HH -le $UOW_ITER_HH_TO ]]
      do
         if [ $EXTRACT_PROCESS_TYPE = 'L' ]
         then
            for SRC_LIS_TMP in $(find $DW_DAT/extract/$SUBJECT_AREA/$ETL_ID.sources.lis.$UOW_ITER_DATE$UOW_ITER_HH[0-5][0-9][0-5][0-9] -type f -prune 2>/dev/null)
            do
               UOW_TMP=${SRC_LIS_TMP##*.}
               if [[ $UOW_TMP != $UOW_FROM ]]
               then
                  UOW_TMP_MI=$(print $UOW_TMP | cut -c11-12)
                  UOW_TMP_SS=$(print $UOW_TMP | cut -c13-14)
                  IN_DIR_TMP=$UOW_IN_DIR/$UOW_ITER_DATE/$UOW_ITER_HH/$UOW_TMP_MI/$UOW_TMP_SS
                  while read FILE_ID DATA_FILENAME OLD_FILENAME DONE_FILENAME
                  do
                     if [ $PARALLEL_FILE_LOAD = 1 ]
                     then
                        if [ $FIRST_FILE = 1 ]
                        then
                           eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX $OLD_FILENAME > $INPUT_FILE_FILE
                           FIRST_FILE=0
                        else
                           eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX $OLD_FILENAME >> $INPUT_FILE_FILE
                        fi
                     else
                        INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX)"
                     fi
                  done < $SRC_LIS_TMP
               fi
            done
         else
            for IN_DIR_TMP in $(find $UOW_IN_DIR/$UOW_ITER_DATE/$UOW_ITER_HH/[0-5][0-9]/[0-5][0-9] -type d -prune 2>/dev/null)
            do
               if [[ "$IN_DIR_TMP" != "$UOW_IN_DIR/$UOW_FROM_DATE/$UOW_FROM_HH/$UOW_FROM_MI/$UOW_FROM_SS" ]]
               then
                  if [ $USE_DISTR_TABLE = 1 ]
                  then
                     read TABLE_NAME DATA_FILENAME PARAM < $DW_CFG/$ETL_ID.sources.lis
                     while read FILE_ID DBC_FILE
                     do
                        if [ $PARALLEL_FILE_LOAD = 1 ]
                        then
                           if [ $FIRST_FILE = 1 ]
                           then
                              if [ -f $(eval print ${IN_DIR_TMP}/.${DATA_FILENAME}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                              then
                                 eval print $(m_expand -native $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                                 FIRST_PASS=1
                                 while read EXPANDED_FILENAME
                                 do
                                    if [ $FIRST_PASS = 1 ]
                                    then
                                        eval print $EXPANDED_FILENAME $DATA_FILENAME > $INPUT_FILE_FILE
                                        FIRST_PASS=0
                                    else
                                        eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                                    fi
                                 done <  $EXPANDED_MULTIFILE_FILE
                                 rm $EXPANDED_MULTIFILE_FILE
                              else
                                 eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX $DATA_FILENAME > $INPUT_FILE_FILE
                              fi
                              FIRST_FILE=0
                           else
                              if [ -f $(eval print ${IN_DIR_TMP}/.${DATA_FILENAME}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                              then
                                 eval print $(m_expand -native $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                                 while read EXPANDED_FILENAME
                                 do
                                    eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                                 done <  $EXPANDED_MULTIFILE_FILE
                                 rm $EXPANDED_MULTIFILE_FILE
                              else
                                 eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX $DATA_FILENAME >> $INPUT_FILE_FILE
                              fi
                           fi
                        else
                           if [ -f $(eval print ${IN_DIR_TMP}/.${DATA_FILENAME}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                           then
                              INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $(m_expand $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX))"
                           else
                              INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX)"
                           fi
                        fi
                     done < $DW_CFG/$DISTR_TABLE_LIS_FILE.sources.lis
                  else
                     while read FILE_ID DBC_FILE PARALLEL_NUM TABLE_NAME DATA_FILENAME PARAM
                     do
                        if [ $PARALLEL_FILE_LOAD = 1 ]
                        then
                           if [ $FIRST_FILE = 1 ]
                           then
                              if [ -f $(eval print ${IN_DIR_TMP}/.${DATA_FILENAME}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                              then
                                 eval print $(m_expand -native $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                                 FIRST_PASS=1
                                 while read EXPANDED_FILENAME
                                 do
                                    if [ $FIRST_PASS = 1 ]
                                    then
                                       eval print $EXPANDED_FILENAME $DATA_FILENAME > $INPUT_FILE_FILE
                                       FIRST_PASS=0
                                    else
                                       eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                                    fi
                                 done <  $EXPANDED_MULTIFILE_FILE
                                 rm $EXPANDED_MULTIFILE_FILE
                              else
                                 eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX $DATA_FILENAME > $INPUT_FILE_FILE
                              fi
                              FIRST_FILE=0
                           else
                              if [ -f $(eval print ${IN_DIR_TMP}/.${DATA_FILENAME}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                              then
                                 eval print $(m_expand -native $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                                 while read EXPANDED_FILENAME
                                 do
                                    eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                                 done <  $EXPANDED_MULTIFILE_FILE
                                 rm $EXPANDED_MULTIFILE_FILE
                              else
                                 eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX $DATA_FILENAME >> $INPUT_FILE_FILE
                              fi
                           fi
                        else
                           if [ -f $(eval print ${IN_DIR_TMP}/.${DATA_FILENAME}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                           then
                              INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $(m_expand $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX))"
                           else
                              INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $IN_DIR_TMP/$DATA_FILENAME$CNDTL_COMPRESSION_SFX)"
                           fi
                        fi
                     done < $DW_CFG/$ETL_ID.sources.lis
                  fi
               fi
            done
         fi
         ((UOW_ITER_HH=UOW_ITER_HH+1))
      done
      UOW_ITER_DATE=$($DW_BIN/add_days $UOW_ITER_DATE 1)
      UOW_ITER_HH=00
      UOW_ITER_DATEHH=$UOW_ITER_DATE$UOW_ITER_HH
   done

else

   while [[ $BATCH_SEQ_NUM -ge $MIN_BATCH_SEQ_NUM && $BATCH_SEQ_NUM -le $MAX_BATCH_SEQ_NUM ]]
   do
      if [ $EXTRACT_PROCESS_TYPE = 'L' ]
      then
         while read FILE_ID DATA_FILENAME OLD_FILENAME DONE_FILENAME
         do
            if [ $PARALLEL_FILE_LOAD = 1 ]
            then
               if [ $FIRST_FILE = 1 ]
               then
                  eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX $OLD_FILENAME > $INPUT_FILE_FILE
                  FIRST_FILE=0
               else
                  eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX $OLD_FILENAME >> $INPUT_FILE_FILE
               fi
            else
               INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX)"
            fi
         done < $DW_DAT/extract/$SUBJECT_AREA/$ETL_ID.sources.lis.$BATCH_SEQ_NUM
      elif [ $USE_DISTR_TABLE = 1 ]
      then
         read TABLE_NAME DATA_FILENAME PARAM < $DW_CFG/$ETL_ID.sources.lis

         while read FILE_ID DBC_FILE
         do
            if [ $PARALLEL_FILE_LOAD = 1 ]
            then
               if [ $FIRST_FILE = 1 ]
               then
                    if [ -f $(eval print ${IN_DIR}/.${DATA_FILENAME}.${BATCH_SEQ_NUM}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                    then
                        eval print $(m_expand -native $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                        FIRST_PASS=1
                        while read EXPANDED_FILENAME
                        do
                            if [ $FIRST_PASS = 1 ]
                            then
                                eval print $EXPANDED_FILENAME $DATA_FILENAME > $INPUT_FILE_FILE
                                FIRST_PASS=0
                            else
                                eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                            fi
                        done <  $EXPANDED_MULTIFILE_FILE
                        rm $EXPANDED_MULTIFILE_FILE
                    else
                        eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX $DATA_FILENAME > $INPUT_FILE_FILE
                    fi
                  FIRST_FILE=0
               else
                    if [ -f $(eval print ${IN_DIR}/.${DATA_FILENAME}.${BATCH_SEQ_NUM}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                    then
                        eval print $(m_expand -native $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                        while read EXPANDED_FILENAME
                        do
                            eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                        done <  $EXPANDED_MULTIFILE_FILE
                        rm $EXPANDED_MULTIFILE_FILE
                    else
                        eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX $DATA_FILENAME >> $INPUT_FILE_FILE
                    fi
               fi
            else
                if [ -f $(eval print ${IN_DIR}/.${DATA_FILENAME}.${BATCH_SEQ_NUM}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                then
                    INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $(m_expand $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX))"
                else
                    INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX)"
                fi
            fi
         done < $DW_CFG/$DISTR_TABLE_LIS_FILE.sources.lis
      else
         while read FILE_ID DBC_FILE PARALLEL_NUM TABLE_NAME DATA_FILENAME PARAM
         do
            if [ $PARALLEL_FILE_LOAD = 1 ]
            then
               if [ $FIRST_FILE = 1 ]
               then
                    if [ -f $(eval print ${IN_DIR}/.${DATA_FILENAME}.${BATCH_SEQ_NUM}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                    then
                        eval print $(m_expand -native $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                        FIRST_PASS=1
                        while read EXPANDED_FILENAME
                        do
                            if [ $FIRST_PASS = 1 ]
                            then
                                eval print $EXPANDED_FILENAME $DATA_FILENAME > $INPUT_FILE_FILE
                                FIRST_PASS=0
                            else
                                eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                            fi
                        done <  $EXPANDED_MULTIFILE_FILE
                        rm $EXPANDED_MULTIFILE_FILE
                    else
                        eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX $DATA_FILENAME > $INPUT_FILE_FILE
                    fi
                  FIRST_FILE=0
               else
                    if [ -f $(eval print ${IN_DIR}/.${DATA_FILENAME}.${BATCH_SEQ_NUM}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                    then
                        eval print $(m_expand -native $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX) | tr ' ' '\012' > $EXPANDED_MULTIFILE_FILE
                        while read EXPANDED_FILENAME
                        do
                            eval print $EXPANDED_FILENAME $DATA_FILENAME >> $INPUT_FILE_FILE
                        done <  $EXPANDED_MULTIFILE_FILE
                        rm $EXPANDED_MULTIFILE_FILE
                    else
                        eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX $DATA_FILENAME >> $INPUT_FILE_FILE
                    fi
               fi
            else
                if [ -f $(eval print ${IN_DIR}/.${DATA_FILENAME}.${BATCH_SEQ_NUM}${CNDTL_COMPRESSION_SFX}.mfctl) ]
                then
                    INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $(m_expand $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX))"
                else
                    INPUT_FILE_TMP="$INPUT_FILE_TMP $(eval print $IN_DIR/$DATA_FILENAME.$BATCH_SEQ_NUM$CNDTL_COMPRESSION_SFX)"
                fi
            fi
         done < $DW_CFG/$ETL_ID.sources.lis
      fi

      ((BATCH_SEQ_NUM+=1))
   done

fi

print $INPUT_FILE_TMP
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter INPUT_FILE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export PARALLEL_FILE_LAYOUT;PARALLEL_FILE_LAYOUT=$(if ((PARALLEL_FILE_LOAD))
then
   grep "^PARALLEL_FILE_LAYOUT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-0}
else
   print $INPUT_FILE
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter PARALLEL_FILE_LAYOUT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export CNDTL_PARTITION;CNDTL_PARTITION=$(grep "^CNDTL_PARTITION\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CNDTL_PARTITION of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export CNDTL_REFORMAT;CNDTL_REFORMAT=$(grep "^CNDTL_REFORMAT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CNDTL_REFORMAT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export WRK_DIR;WRK_DIR=$(grep "^WRK_DIR\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print $VALUE/$SUBJECT_AREA)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter WRK_DIR of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export REFORMAT_TRANS_FILE;REFORMAT_TRANS_FILE="$DW_XFR"'/'"$ETL_ID"'.reformat.xfr'
export INSERT_SQL_FILE;INSERT_SQL_FILE="$DW_SQL"'/'"$ETL_ID"'.ins.sql'
export UPDATE_SQL_FILE;UPDATE_SQL_FILE="$DW_SQL"'/'"$ETL_ID"'.upd.sql'
export OUTPUT_TABLE_LAYOUT;OUTPUT_TABLE_LAYOUT=$(if (($CNDTL_PARTITION))
then
   print $WRK_DIR
else
    print $PARALLEL_FILE_LAYOUT
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter OUTPUT_TABLE_LAYOUT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export OUTPUT_DML;OUTPUT_DML=$(if (($CNDTL_REFORMAT))
then
   print $DW_DML/$ETL_ID.write.dml
else
   print $INPUT_DML
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter OUTPUT_DML of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export LOGTABLE_DATABASE;LOGTABLE_DATABASE=$(m_db print $AB_IDB_CONFIG -value logtable_database)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOGTABLE_DATABASE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export ERRORTABLES_DATABASE;ERRORTABLES_DATABASE=$(m_db print $AB_IDB_CONFIG -value errortables_database)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ERRORTABLES_DATABASE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_LOAD_SESSIONS;FLOAD_LOAD_SESSIONS=$(grep "^FLOAD_LOAD_SESSIONS\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; 
if [[ $VALUE -ge 24 ]]
then
print $VALUE
else
print 24
fi
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_LOAD_SESSIONS of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_SLEEP;FLOAD_SLEEP=$(if [[ $DB_TYPE == 'TERADATA' ]]
then
   print $(grep "^FLOAD_SLEEP\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-6})
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_SLEEP of single_table_load', interpretation 'shell'
   exit $mpjret
fi
FLOAD_TENACITY=$(if [[ $DB_TYPE == 'TERADATA' ]]
then
   print $(grep "^FLOAD_TENACITY\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-4})
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_TENACITY of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export LOAD_ERRLIMIT;LOAD_ERRLIMIT=$(grep "^LOAD_ERRLIMIT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOAD_ERRLIMIT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_ERRLIMIT;FLOAD_ERRLIMIT=$(integer FLOAD_ERRLIMIT_TMP=$LOAD_ERRLIMIT; ((FLOAD_ERRLIMIT_TMP+=1)); print $FLOAD_ERRLIMIT_TMP)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_ERRLIMIT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export LOAD_OPER;LOAD_OPER=$(grep "^LOAD_OPER\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT;  print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOAD_OPER of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export ROWS_PER_COMMIT;ROWS_PER_COMMIT=$(grep "^ROWS_PER_COMMIT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ROWS_PER_COMMIT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export COMMIT_LOG_TABLE;COMMIT_LOG_TABLE=$(grep "^COMMIT_LOG_TABLE\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter COMMIT_LOG_TABLE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export RECORD_COUNT;RECORD_COUNT=$(if [[ X"$REC_CNT_IN_DIR" != X ]]
  then
    if [[ -n $UOW_TO ]]
    then
      typeset -i RECORD_COUNT_TMP=0
      typeset -i UOW_ITER_DATE=$UOW_FROM_DATE
      typeset -Z2 UOW_ITER_HH=$UOW_FROM_HH
      typeset -i UOW_ITER_DATEHH=$UOW_ITER_DATE$UOW_FROM_HH
      UOW_TO_DATEHH=$UOW_TO_DATE$UOW_TO_HH
      UOW_REC_CNT_IN_DIR=${REC_CNT_IN_DIR%/$UOW_TO_DATE/$UOW_TO_HH/$UOW_TO_MI/$UOW_TO_SS}

      while [[ $UOW_ITER_DATEHH -le $UOW_TO_DATEHH ]]
      do
        if [[ $UOW_ITER_DATE -lt $UOW_TO_DATE ]]
        then
          UOW_ITER_HH_TO=23
        else
          UOW_ITER_HH_TO=$UOW_TO_HH
        fi
        while [[ $UOW_ITER_HH -le $UOW_ITER_HH_TO ]]
        do
          for REC_CNT_IN_DIR_TMP in $(find $UOW_REC_CNT_IN_DIR/$UOW_ITER_DATE/$UOW_ITER_HH/[0-5][0-9]/[0-5][0-9] -type d -prune 2>/dev/null)
          do
            if [[ "$REC_CNT_IN_DIR_TMP" != "$UOW_REC_CNT_IN_DIR/$UOW_FROM_DATE/$UOW_FROM_HH/$UOW_FROM_MI/$UOW_FROM_SS" ]]
            then
              RECORD_COUNT_TMP=$RECORD_COUNT_TMP+$(cat $REC_CNT_IN_DIR_TMP/$TABLE_ID.record_count.dat | head -1)
            fi
         done
         ((UOW_ITER_HH=UOW_ITER_HH+1))
        done
        UOW_ITER_DATE=$($DW_BIN/add_days $UOW_ITER_DATE 1)
        UOW_ITER_HH=00
        UOW_ITER_DATEHH=$UOW_ITER_DATE$UOW_ITER_HH
      done

      print $RECORD_COUNT_TMP
    else
       cat $REC_CNT_IN_DIR/$TABLE_ID.record_count.dat.$BATCH_SEQ_NUM
    fi
  elif [[ X"$IN_DIR" == X || ${IN_DIR} != ${IN_DIR%mfs*} ]]
  then
    cat $DW_SA_IN/$TABLE_ID.record_count.dat.$BATCH_SEQ_NUM
  else
    cat $IN_DIR/$TABLE_ID.record_count.dat.$BATCH_SEQ_NUM
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter RECORD_COUNT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export FORCE_FLOAD;FORCE_FLOAD=$(grep "^FORCE_FLOAD\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FORCE_FLOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_RECORD_COUNT_TMP;FLOAD_RECORD_COUNT_TMP=$(grep "^FLOAD_RECORD_COUNT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print -- $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_RECORD_COUNT_TMP of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_RECORD_COUNT;FLOAD_RECORD_COUNT=$(if [[ $FORCE_FLOAD -ne 1 ]]
     then
         if [[ $FLOAD_RECORD_COUNT_TMP -ge 20000 ]]
         then
             print $FLOAD_RECORD_COUNT_TMP
         else
             print 20000
         fi
     else
         print -- -1
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_RECORD_COUNT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export CNDTL_FLOAD;CNDTL_FLOAD=$(($RECORD_COUNT>=$FLOAD_RECORD_COUNT))
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CNDTL_FLOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export IS_PARALLEL_LOAD;IS_PARALLEL_LOAD=$(grep "^USE_PARALLEL_LOAD\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter IS_PARALLEL_LOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export AB_IDB_COMMIT_TABLE_CLEANUP_DAYS;AB_IDB_COMMIT_TABLE_CLEANUP_DAYS=7
export USE_API;USE_API=$(if [[ $DB_TYPE == 'TERADATA' && $CNDTL_FLOAD -ne 1 ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_API of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_FLOAD;USE_FLOAD=$(if [[ $DB_TYPE == 'TERADATA' && $CNDTL_FLOAD -eq 1 && $IS_PARALLEL_LOAD -ne 1 ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_FLOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_TPT;USE_TPT=$(if [[ $DB_TYPE == 'TERADATA' && $CNDTL_FLOAD -eq 1 && $IS_PARALLEL_LOAD -eq 1 ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_TPT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export PERFORM_UTILITY_LOAD_CHECK;PERFORM_UTILITY_LOAD_CHECK=$(if [[ $USE_TPT == 1 || $USE_FLOAD == 1 || $USE_API == 1 ]]
then
        print 1
else
        print 0
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter PERFORM_UTILITY_LOAD_CHECK of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_ORACLE_TRUNC_LOAD;USE_ORACLE_TRUNC_LOAD=$(if [[ $DB_TYPE == 'ORACLE' && $LOAD_OPER == 'TRUNC_INSERT' ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_ORACLE_TRUNC_LOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_ORACLE_BULK_APPEND;USE_ORACLE_BULK_APPEND=$(if [[ $DB_TYPE == 'ORACLE' && $LOAD_OPER == 'BULK_APPEND' ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_ORACLE_BULK_APPEND of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_ORACLE_APPEND;USE_ORACLE_APPEND=$(if [[ $DB_TYPE == 'ORACLE' && $LOAD_OPER == 'INSERT' ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_ORACLE_APPEND of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_ORACLE_UPSERT;USE_ORACLE_UPSERT=$(if [[ $DB_TYPE == 'ORACLE' && $LOAD_OPER == 'UPSERT' ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_ORACLE_UPSERT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_MYSQL_TRUNC_LOAD;USE_MYSQL_TRUNC_LOAD=$(if [[ $DB_TYPE == 'MYSQL' && $LOAD_OPER == 'TRUNC_INSERT' ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_MYSQL_TRUNC_LOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_MSSQL_TRUNC_LOAD;USE_MSSQL_TRUNC_LOAD=$(if [[ $DB_TYPE == 'MSSQL' && $LOAD_OPER == 'TRUNC_INSERT' ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_MSSQL_TRUNC_LOAD of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export USE_MSSQL_BULK_APPEND;USE_MSSQL_BULK_APPEND=$(if [[ $DB_TYPE == 'MSSQL' && $LOAD_OPER == 'BULK_APPEND' ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_MSSQL_BULK_APPEND of single_table_load', interpretation 'shell'
   exit $mpjret
fi
PT_INSTANCES=$(grep "^PT_INSTANCES\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-1})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter PT_INSTANCES of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export LOAD_LOGFILE;LOAD_LOGFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.ld.utility_load'"$UOW_APPEND"'.'"$FILE_DATETIME"'.log'
export LOAD_REJFILE;LOAD_REJFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.ld.utility_load.rej'
export LOAD_ERRFILE;LOAD_ERRFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.ld.utility_load.err'
export XFORM_REJLIMIT;XFORM_REJLIMIT=$(grep "^XFORM_REJLIMIT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter XFORM_REJLIMIT of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export XFORM_REJRAMP;XFORM_REJRAMP=$(grep "^XFORM_REJRAMP\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0.0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter XFORM_REJRAMP of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export XFORM_REJFILE;XFORM_REJFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.ld.reformat.rej'
export XFORM_ERRFILE;XFORM_ERRFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.ld.reformat.err'
export OUTPUT_TABLE_LOGFILE;OUTPUT_TABLE_LOGFILE="$DW_SA_LOG"'/'"$TABLE_ID"'.ld.output_table'"$UOW_APPEND"'.'"$FILE_DATETIME"'.log'
export UTILITY_LOAD_LOGFILE_CHECK_ERRFILE;UTILITY_LOAD_LOGFILE_CHECK_ERRFILE="$DW_SA_LOG"'/'"$TABLE_ID"'.ld.utility_load_logfile_check'"$UOW_APPEND"'.'"$FILE_DATETIME"'.err'
export TD_MAX_DATA_SIZE;TD_MAX_DATA_SIZE=$(grep "^TD_MAX_DATA_SIZE_OVRD\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-$TD_MAX_DATA_SIZE})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TD_MAX_DATA_SIZE of single_table_load', interpretation 'shell'
   exit $mpjret
fi
export QUERY_BAND_STRING;QUERY_BAND_STRING=$(
grep "^FLOAD_QUERY_BAND\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; 
if [[ "X"$VALUE != "X" ]]
then
print "$VALUE$QUERY_BAND_STRING"
else
print "$QUERY_BAND_STRING"
fi
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter QUERY_BAND_STRING of single_table_load', interpretation 'shell'
   exit $mpjret
fi
(
   # Parameters of Input File
   protection=0666
   condition=$((!PARALLEL_FILE_LOAD))
   mpjret=$?
   if [ 0 -ne $mpjret ] ; then
      print -- Error evaluating: 'parameter condition of Input_File', interpretation 'shell'
      exit $mpjret
   fi
   print -rn Input_File__condition= >>${_AB_PROXY_DIR}/GDE-Parameters
   __AB_QUOTEIT "${condition}" >> ${_AB_PROXY_DIR}/GDE-Parameters
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then exit $mpjret ; fi
# Parameters of Reject File-5 skipped because it is disabled
. ./${_AB_PROXY_DIR}/GDE-Parameters

#+Script Start+  ==================== Edits in this section are preserved.
m_env -v

if [ -z $USE_DISTR_TABLE ]
then
   print "$0: Error: USE_DISTR_TABLE variable not set"
   exit 4
fi

if [ -z $CNDTL_REFORMAT ]
then
   print "$0: Error: CNDTL_REFORMAT variable not set"
   exit 4
fi


if [ -z $FLOAD_LOAD_SESSIONS ]
then
   print "$0: Error: FLOAD_LOAD_SESSIONS variable not set"
   exit 4
fi


if [ -z $LOAD_ERRLIMIT ]
then
   print "$0: Error: LOAD_ERRLIMIT variable not set"
   exit 4
fi


if [ -z $BATCH_SEQ_NUM ]
then
   print "$0: Error: BATCH_SEQ_NUM variable not set"
   exit 4
fi



#+End Script Start+  ====================
# Check that the "mp" program is found correctly on the PATH
case "$_ab_uname" in
  Windows_* )
    _ab_expected_mp=$AB_HOME/bin/mp.exe ;;
  * )
    _ab_expected_mp=$AB_HOME/bin/mp
esac
if [ ! -x "$_ab_expected_mp" ]; then
  print "\n*** ERROR: executable $_ab_expected_mp not found"
  exit 1
fi
_ab_found_mp=$(whence mp)
if [ "$_ab_found_mp" = "" ] || [ "$_ab_found_mp" -ot "$_ab_expected_mp" ] || [ "$_ab_found_mp" -nt "$_ab_expected_mp" ]; then
  if [ "$_ab_found_mp" = "" ]; then
    print "\n*** ERROR: mp not found on PATH"
  else
    case "$_ab_uname" in
      CYGWIN_* )
        _ab_found_mp=`cygpath -m "$_ab_found_mp"` ;;
    esac
    print "\n*** ERROR: Wrong mp found on the PATH: $_ab_found_mp"
    print "           Should be via \$AB_HOME/bin: $_ab_expected_mp"
  fi
  print "\nCheck Setup Script in Host Connections Settings and Script Start in Graph Settings for PATH modifications"
  print "Active PATH=$PATH"
  exit 1
fi
if [ -f "$AB_HOME/bin/ab_catalog_functions.ksh" ]; then . ab_catalog_functions.ksh; fi
mv "${_AB_PROXY_DIR}" "${AB_JOB}"'-single_table_load-ProxyDir'
_AB_PROXY_DIR="${AB_JOB}"'-single_table_load-ProxyDir'
print -r -- 'string('"'"'\n'"'"')' > "${_AB_PROXY_DIR}"'/Load_Reformat-5.dml'
print -r -- 'record string("|") node, timestamp, component, subcomponent, event_type; string("|\n") event_text; end' > "${_AB_PROXY_DIR}"'/Output_Table_API-7.dml'

mp job ${AB_JOB}

# Layouts:
mp layout layout1 "$DW_TMP"
mp layout layout2 $PARALLEL_FILE_LAYOUT
mp layout layout3 $OUTPUT_TABLE_LAYOUT
mp layout layout4 file:.
m_db_layout layout5 $AB_IDB_ORACLE_CONFIG -component db-update

# Record Formats (Metadata):
mp metadata metadata1 -file "$INPUT_DML"
mp metadata metadata2 -file "$OUTPUT_DML"
mp metadata metadata3 -file "${_AB_PROXY_DIR}"'/Load_Reformat-5.dml'
mp metadata metadata4 -file "${_AB_PROXY_DIR}"'/Output_Table_API-7.dml'

export AB_CATALOG;AB_CATALOG=${AB_CATALOG:-"${XX_CATALOG}"}
# Catalog Usage: Creating temporary catalog using lookup files only
m_rmcatalog -catalog GDE-single_table_load-${AB_JOB}.cat > /dev/null 2>&1
m_mkcatalog -catalog GDE-single_table_load-${AB_JOB}.cat
SAVED_CATALOG="${AB_CATALOG}"
export AB_CATALOG;AB_CATALOG='GDE-single_table_load-'"${AB_JOB}"'.cat'
# 
# Initialize condition variables to user-specified conditions
# 
AB_USERCOND_single_table_load=1
AB_IS_LIVE_single_table_load=1
AB_USERCOND_Combine_Local_Files="$PARALLEL_FILE_LOAD"
AB_USERCOND_Combine_Local_Files=$(__AB_COND "${AB_USERCOND_Combine_Local_Files}")
AB_IS_LIVE_Combine_Local_Files=1
AB_HAS_DATA_Flow_3=1
AB_USERCOND_Input_File="$Input_File__condition"
AB_USERCOND_Input_File=$(__AB_COND "${AB_USERCOND_Input_File}")
AB_IS_LIVE_Input_File=1
AB_HAS_DATA_Flow_5=1
AB_USERCOND_Conditional_Partition_by_Round_robin="$CNDTL_PARTITION"
AB_USERCOND_Conditional_Partition_by_Round_robin=$(__AB_COND "${AB_USERCOND_Conditional_Partition_by_Round_robin}")
AB_IS_LIVE_Conditional_Partition_by_Round_robin=1
AB_HAS_DATA_Flow_16=1
AB_USERCOND_Retain_Flow_to_Flow="$CNDTL_PARTITION"
AB_USERCOND_Retain_Flow_to_Flow=$(__AB_COND "${AB_USERCOND_Retain_Flow_to_Flow}")
AB_IS_LIVE_Retain_Flow_to_Flow=1
AB_HAS_DATA_Flow_17=1
AB_USERCOND_Load_Reformat="$CNDTL_REFORMAT"
AB_USERCOND_Load_Reformat=$(__AB_COND "${AB_USERCOND_Load_Reformat}")
AB_IS_LIVE_Load_Reformat=1
AB_HAS_DATA_Flow_1=1
AB_HAS_DATA_Flow_13=1
AB_HAS_DATA_Flow_33=1
AB_USERCOND_Replicate=0
AB_IS_LIVE_Replicate=1
AB_HAS_DATA_Flow_29=1
AB_HAS_DATA_Flow_24=1
AB_HAS_DATA_Flow_6=1
AB_HAS_DATA_Flow_15=1
AB_HAS_DATA_Flow_14=1
AB_HAS_DATA_Flow_12=1
AB_HAS_DATA_Flow_34=1
AB_HAS_DATA_Flow_26=1
AB_HAS_DATA_Flow_30=1
AB_HAS_DATA_Flow_43=1
AB_USERCOND_Output_Table_API__table_="$USE_API"
AB_USERCOND_Output_Table_API__table_=$(__AB_COND "${AB_USERCOND_Output_Table_API__table_}")
AB_IS_LIVE_Output_Table_API__table_=1
AB_HAS_DATA_Flow_8=1
AB_HAS_DATA_Flow_31=1
AB_HAS_DATA_Flow_4=1
AB_USERCOND_Output_Table_Fastload__table_="$USE_FLOAD"
AB_USERCOND_Output_Table_Fastload__table_=$(__AB_COND "${AB_USERCOND_Output_Table_Fastload__table_}")
AB_IS_LIVE_Output_Table_Fastload__table_=1
AB_HAS_DATA_Flow_7=1
AB_HAS_DATA_Flow_25=1
AB_HAS_DATA_Flow_2=1
AB_USERCOND_Output_Table_MSSQL_Bulk_Append_Load__table_="$USE_MSSQL_BULK_APPEND"
AB_USERCOND_Output_Table_MSSQL_Bulk_Append_Load__table_=$(__AB_COND "${AB_USERCOND_Output_Table_MSSQL_Bulk_Append_Load__table_}")
AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_=1
AB_HAS_DATA_Flow_45=1
AB_HAS_DATA_Flow_44=1
AB_USERCOND_Output_Table_MSSQL_Truncate_Load__table_="$USE_MSSQL_TRUNC_LOAD"
AB_USERCOND_Output_Table_MSSQL_Truncate_Load__table_=$(__AB_COND "${AB_USERCOND_Output_Table_MSSQL_Truncate_Load__table_}")
AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_=1
AB_HAS_DATA_Flow_39=1
AB_HAS_DATA_Flow_41=1
AB_USERCOND_Output_Table_Mysql_Truncate_Load__table_="$USE_MYSQL_TRUNC_LOAD"
AB_USERCOND_Output_Table_Mysql_Truncate_Load__table_=$(__AB_COND "${AB_USERCOND_Output_Table_Mysql_Truncate_Load__table_}")
AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_=1
AB_HAS_DATA_Flow_35=1
AB_HAS_DATA_Flow_36=1
AB_HAS_DATA_Flow_37=1
AB_USERCOND_Output_Table_Oracle_Append__table_="$USE_ORACLE_APPEND"
AB_USERCOND_Output_Table_Oracle_Append__table_=$(__AB_COND "${AB_USERCOND_Output_Table_Oracle_Append__table_}")
AB_IS_LIVE_Output_Table_Oracle_Append__table_=1
AB_HAS_DATA_Flow_21=1
AB_HAS_DATA_Flow_32=1
AB_HAS_DATA_Flow_20=1
AB_USERCOND_Output_Table_Oracle_Bulk_Append_Load__table_="$USE_ORACLE_BULK_APPEND"
AB_USERCOND_Output_Table_Oracle_Bulk_Append_Load__table_=$(__AB_COND "${AB_USERCOND_Output_Table_Oracle_Bulk_Append_Load__table_}")
AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_=1
AB_HAS_DATA_Flow_27=1
AB_HAS_DATA_Flow_42=1
AB_HAS_DATA_Flow_28=1
AB_USERCOND_Output_Table_Oracle_Truncate_Load__table_="$USE_ORACLE_TRUNC_LOAD"
AB_USERCOND_Output_Table_Oracle_Truncate_Load__table_=$(__AB_COND "${AB_USERCOND_Output_Table_Oracle_Truncate_Load__table_}")
AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_=1
AB_HAS_DATA_Flow_18=1
AB_HAS_DATA_Flow_40=1
AB_HAS_DATA_Flow_19=1
AB_USERCOND_Output_Table_PT_Load__table_="$USE_TPT"
AB_USERCOND_Output_Table_PT_Load__table_=$(__AB_COND "${AB_USERCOND_Output_Table_PT_Load__table_}")
AB_IS_LIVE_Output_Table_PT_Load__table_=1
AB_HAS_DATA_Flow_10=1
AB_HAS_DATA_Flow_11=1
AB_HAS_DATA_Flow_9=1
AB_USERCOND_Update_Oracle_Table="$USE_ORACLE_UPSERT"
AB_USERCOND_Update_Oracle_Table=$(__AB_COND "${AB_USERCOND_Update_Oracle_Table}")
AB_IS_LIVE_Update_Oracle_Table=1
AB_HAS_DATA_Flow_22=1
AB_HAS_DATA_Flow_23=1
AB_USERCOND_Reject_Error_Log_Files=1
AB_IS_LIVE_Reject_Error_Log_Files=1
AB_USERCOND_Reject_Error_Log_Files_Error_File=1
AB_IS_LIVE_Reject_Error_Log_Files_Error_File=1
AB_USERCOND_Reject_Error_Log_Files_Gather_Logs=1
AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs=1
AB_USERCOND_Reject_Error_Log_Files_Reject_File=1
AB_IS_LIVE_Reject_Error_Log_Files_Reject_File=1
AB_USERCOND_Reject_File_5="$USE_ORACLE_UPSERT"
AB_USERCOND_Reject_File_5=$(__AB_COND "${AB_USERCOND_Reject_File_5}")
AB_IS_LIVE_Reject_File_5=1
AB_USERCOND_XForm_Error_File="$CNDTL_REFORMAT"
AB_USERCOND_XForm_Error_File=$(__AB_COND "${AB_USERCOND_XForm_Error_File}")
AB_IS_LIVE_XForm_Error_File=1
AB_USERCOND_XForm_Reject_File="$CNDTL_REFORMAT"
AB_USERCOND_XForm_Reject_File=$(__AB_COND "${AB_USERCOND_XForm_Reject_File}")
AB_IS_LIVE_XForm_Reject_File=1
AB_USERCOND_Utility_Load_Table_Check_KSH="$PERFORM_UTILITY_LOAD_CHECK"
AB_USERCOND_Utility_Load_Table_Check_KSH=$(__AB_COND "${AB_USERCOND_Utility_Load_Table_Check_KSH}")
AB_IS_LIVE_Utility_Load_Table_Check_KSH=1
AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits="$USE_FLOAD"
AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits=$(__AB_COND "${AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits}")
AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits=1
AB_USERCOND_chmod_LOAD_LOGFILE="$USE_FLOAD"
AB_USERCOND_chmod_LOAD_LOGFILE=$(__AB_COND "${AB_USERCOND_chmod_LOAD_LOGFILE}")
AB_IS_LIVE_chmod_LOAD_LOGFILE=1
# 
# Compute condition variables by considering the conditions of neighboring components
# 
done=false
while [ $done = false ] ; do
   done=true
   Temp="${AB_IS_LIVE_Combine_Local_Files}"
   let AB_IS_LIVE_Combine_Local_Files="(AB_HAS_DATA_Flow_3) && (AB_USERCOND_Combine_Local_Files)"
   if [ X"${AB_IS_LIVE_Combine_Local_Files}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_3}"
   let AB_HAS_DATA_Flow_3="(AB_IS_LIVE_Combine_Local_Files) && ((AB_IS_LIVE_Conditional_Partition_by_Round_robin) || (AB_HAS_DATA_Flow_16))"
   if [ X"${AB_HAS_DATA_Flow_3}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Input_File}"
   let AB_IS_LIVE_Input_File="AB_USERCOND_Input_File"
   if [ X"${AB_IS_LIVE_Input_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_5}"
   let AB_HAS_DATA_Flow_5="(AB_IS_LIVE_Input_File) && ((AB_IS_LIVE_Conditional_Partition_by_Round_robin) || (AB_HAS_DATA_Flow_16))"
   if [ X"${AB_HAS_DATA_Flow_5}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Conditional_Partition_by_Round_robin}"
   let AB_IS_LIVE_Conditional_Partition_by_Round_robin="(((AB_HAS_DATA_Flow_5) || (AB_HAS_DATA_Flow_3)) && (AB_HAS_DATA_Flow_16)) && ((AB_USERCOND_Conditional_Partition_by_Round_robin) || ((((AB_HAS_DATA_Flow_5+AB_HAS_DATA_Flow_3) > 1)) || (((AB_HAS_DATA_Flow_16) > 1))))"
   if [ X"${AB_IS_LIVE_Conditional_Partition_by_Round_robin}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_16}"
   let AB_HAS_DATA_Flow_16="((AB_IS_LIVE_Conditional_Partition_by_Round_robin) || ((AB_HAS_DATA_Flow_5) || (AB_HAS_DATA_Flow_3))) && ((AB_IS_LIVE_Retain_Flow_to_Flow) || (AB_HAS_DATA_Flow_17))"
   if [ X"${AB_HAS_DATA_Flow_16}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Retain_Flow_to_Flow}"
   let AB_IS_LIVE_Retain_Flow_to_Flow="(AB_HAS_DATA_Flow_16) && ((AB_USERCOND_Retain_Flow_to_Flow) || ((((AB_HAS_DATA_Flow_16) > 1)) || (((AB_HAS_DATA_Flow_17) > 1))))"
   if [ X"${AB_IS_LIVE_Retain_Flow_to_Flow}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_17}"
   let AB_HAS_DATA_Flow_17="((AB_IS_LIVE_Retain_Flow_to_Flow) || (AB_HAS_DATA_Flow_16)) && ((AB_IS_LIVE_Load_Reformat) || (AB_HAS_DATA_Flow_1))"
   if [ X"${AB_HAS_DATA_Flow_17}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Load_Reformat}"
   let AB_IS_LIVE_Load_Reformat="((AB_HAS_DATA_Flow_17) && (((AB_HAS_DATA_Flow_1) != 0))) && ((AB_USERCOND_Load_Reformat) || ((((AB_HAS_DATA_Flow_17) > 1)) || (((AB_HAS_DATA_Flow_1) > 1))))"
   if [ X"${AB_IS_LIVE_Load_Reformat}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_1}"
   let AB_HAS_DATA_Flow_1="((AB_IS_LIVE_Load_Reformat) || (AB_HAS_DATA_Flow_17)) && ((AB_IS_LIVE_Replicate) || ((((((((((AB_HAS_DATA_Flow_29) || (AB_HAS_DATA_Flow_24)) || (AB_HAS_DATA_Flow_6)) || (AB_HAS_DATA_Flow_15)) || (AB_HAS_DATA_Flow_14)) || (AB_HAS_DATA_Flow_12)) || (AB_HAS_DATA_Flow_34)) || (AB_HAS_DATA_Flow_26)) || (AB_HAS_DATA_Flow_30)) || (AB_HAS_DATA_Flow_43)))"
   if [ X"${AB_HAS_DATA_Flow_1}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_13}"
   let AB_HAS_DATA_Flow_13="((AB_IS_LIVE_Load_Reformat) && (AB_IS_LIVE_XForm_Reject_File)) && (AB_HAS_DATA_Flow_1)"
   if [ X"${AB_HAS_DATA_Flow_13}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_33}"
   let AB_HAS_DATA_Flow_33="((AB_IS_LIVE_Load_Reformat) && (AB_IS_LIVE_XForm_Error_File)) && (AB_HAS_DATA_Flow_1)"
   if [ X"${AB_HAS_DATA_Flow_33}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Replicate}"
   let AB_IS_LIVE_Replicate="(AB_HAS_DATA_Flow_1) && ((((AB_HAS_DATA_Flow_1) > 1)) || (((AB_HAS_DATA_Flow_29+AB_HAS_DATA_Flow_24+AB_HAS_DATA_Flow_6+AB_HAS_DATA_Flow_15+AB_HAS_DATA_Flow_14+AB_HAS_DATA_Flow_12+AB_HAS_DATA_Flow_34+AB_HAS_DATA_Flow_26+AB_HAS_DATA_Flow_30+AB_HAS_DATA_Flow_43) > 1)))"
   if [ X"${AB_IS_LIVE_Replicate}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_29}"
   let AB_HAS_DATA_Flow_29="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_)"
   if [ X"${AB_HAS_DATA_Flow_29}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_24}"
   let AB_HAS_DATA_Flow_24="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_)"
   if [ X"${AB_HAS_DATA_Flow_24}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_6}"
   let AB_HAS_DATA_Flow_6="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_Oracle_Append__table_)"
   if [ X"${AB_HAS_DATA_Flow_6}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_15}"
   let AB_HAS_DATA_Flow_15="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_API__table_)"
   if [ X"${AB_HAS_DATA_Flow_15}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_14}"
   let AB_HAS_DATA_Flow_14="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_Fastload__table_)"
   if [ X"${AB_HAS_DATA_Flow_14}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_12}"
   let AB_HAS_DATA_Flow_12="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_PT_Load__table_)"
   if [ X"${AB_HAS_DATA_Flow_12}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_34}"
   let AB_HAS_DATA_Flow_34="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_)"
   if [ X"${AB_HAS_DATA_Flow_34}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_26}"
   let AB_HAS_DATA_Flow_26="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Update_Oracle_Table)"
   if [ X"${AB_HAS_DATA_Flow_26}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_30}"
   let AB_HAS_DATA_Flow_30="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_)"
   if [ X"${AB_HAS_DATA_Flow_30}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_43}"
   let AB_HAS_DATA_Flow_43="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_)"
   if [ X"${AB_HAS_DATA_Flow_43}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_API__table_}"
   let AB_IS_LIVE_Output_Table_API__table_="(AB_HAS_DATA_Flow_15) && (AB_USERCOND_Output_Table_API__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_API__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_8}"
   let AB_HAS_DATA_Flow_8="(AB_IS_LIVE_Output_Table_API__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_8}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_31}"
   let AB_HAS_DATA_Flow_31="(AB_IS_LIVE_Output_Table_API__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_31}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_4}"
   let AB_HAS_DATA_Flow_4="(AB_IS_LIVE_Output_Table_API__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_4}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_Fastload__table_}"
   let AB_IS_LIVE_Output_Table_Fastload__table_="(AB_HAS_DATA_Flow_14) && (AB_USERCOND_Output_Table_Fastload__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_Fastload__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_7}"
   let AB_HAS_DATA_Flow_7="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_7}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_25}"
   let AB_HAS_DATA_Flow_25="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_25}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_2}"
   let AB_HAS_DATA_Flow_2="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_2}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_}"
   let AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_="(AB_HAS_DATA_Flow_43) && (AB_USERCOND_Output_Table_MSSQL_Bulk_Append_Load__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_45}"
   let AB_HAS_DATA_Flow_45="(AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_45}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_44}"
   let AB_HAS_DATA_Flow_44="(AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_44}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_}"
   let AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_="(AB_HAS_DATA_Flow_30) && (AB_USERCOND_Output_Table_MSSQL_Truncate_Load__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_39}"
   let AB_HAS_DATA_Flow_39="(AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_39}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_41}"
   let AB_HAS_DATA_Flow_41="(AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_41}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_}"
   let AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_="(AB_HAS_DATA_Flow_34) && (AB_USERCOND_Output_Table_Mysql_Truncate_Load__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_35}"
   let AB_HAS_DATA_Flow_35="(AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_35}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_36}"
   let AB_HAS_DATA_Flow_36="(AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_36}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_37}"
   let AB_HAS_DATA_Flow_37="(AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_37}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_Oracle_Append__table_}"
   let AB_IS_LIVE_Output_Table_Oracle_Append__table_="(AB_HAS_DATA_Flow_6) && (AB_USERCOND_Output_Table_Oracle_Append__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_Oracle_Append__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_21}"
   let AB_HAS_DATA_Flow_21="(AB_IS_LIVE_Output_Table_Oracle_Append__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_21}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_32}"
   let AB_HAS_DATA_Flow_32="(AB_IS_LIVE_Output_Table_Oracle_Append__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_32}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_20}"
   let AB_HAS_DATA_Flow_20="(AB_IS_LIVE_Output_Table_Oracle_Append__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_20}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_}"
   let AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_="(AB_HAS_DATA_Flow_29) && (AB_USERCOND_Output_Table_Oracle_Bulk_Append_Load__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_27}"
   let AB_HAS_DATA_Flow_27="(AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_27}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_42}"
   let AB_HAS_DATA_Flow_42="(AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_42}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_28}"
   let AB_HAS_DATA_Flow_28="(AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_28}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_}"
   let AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_="(AB_HAS_DATA_Flow_24) && (AB_USERCOND_Output_Table_Oracle_Truncate_Load__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_18}"
   let AB_HAS_DATA_Flow_18="(AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_18}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_40}"
   let AB_HAS_DATA_Flow_40="(AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_40}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_19}"
   let AB_HAS_DATA_Flow_19="(AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_19}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_PT_Load__table_}"
   let AB_IS_LIVE_Output_Table_PT_Load__table_="(AB_HAS_DATA_Flow_12) && (AB_USERCOND_Output_Table_PT_Load__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_PT_Load__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_10}"
   let AB_HAS_DATA_Flow_10="(AB_IS_LIVE_Output_Table_PT_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_10}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_11}"
   let AB_HAS_DATA_Flow_11="(AB_IS_LIVE_Output_Table_PT_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_11}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_9}"
   let AB_HAS_DATA_Flow_9="(AB_IS_LIVE_Output_Table_PT_Load__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_9}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Update_Oracle_Table}"
   let AB_IS_LIVE_Update_Oracle_Table="(AB_HAS_DATA_Flow_26) && (AB_USERCOND_Update_Oracle_Table)"
   if [ X"${AB_IS_LIVE_Update_Oracle_Table}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_22}"
   let AB_HAS_DATA_Flow_22="(AB_IS_LIVE_Update_Oracle_Table) && (AB_IS_LIVE_Reject_File_5)"
   if [ X"${AB_HAS_DATA_Flow_22}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_23}"
   let AB_HAS_DATA_Flow_23="(AB_IS_LIVE_Update_Oracle_Table) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_23}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}"
   let AB_IS_LIVE_Reject_Error_Log_Files_Error_File="((((((((AB_HAS_DATA_Flow_11) || (AB_HAS_DATA_Flow_25)) || (AB_HAS_DATA_Flow_31)) || (AB_HAS_DATA_Flow_42)) || (AB_HAS_DATA_Flow_36)) || (AB_HAS_DATA_Flow_32)) || (AB_HAS_DATA_Flow_40)) || (AB_HAS_DATA_Flow_39)) || (AB_HAS_DATA_Flow_45)"
   if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}"
   let AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs="(((((((((AB_HAS_DATA_Flow_9) || (AB_HAS_DATA_Flow_2)) || (AB_HAS_DATA_Flow_4)) || (AB_HAS_DATA_Flow_37)) || (AB_HAS_DATA_Flow_19)) || (AB_HAS_DATA_Flow_20)) || (AB_HAS_DATA_Flow_28)) || (AB_HAS_DATA_Flow_23)) || (AB_HAS_DATA_Flow_41)) || (AB_HAS_DATA_Flow_44)"
   if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}"
   let AB_IS_LIVE_Reject_Error_Log_Files_Reject_File="((((((AB_HAS_DATA_Flow_10) || (AB_HAS_DATA_Flow_7)) || (AB_HAS_DATA_Flow_8)) || (AB_HAS_DATA_Flow_21)) || (AB_HAS_DATA_Flow_35)) || (AB_HAS_DATA_Flow_18)) || (AB_HAS_DATA_Flow_27)"
   if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Reject_File_5}"
   let AB_IS_LIVE_Reject_File_5="(AB_HAS_DATA_Flow_22) && (AB_USERCOND_Reject_File_5)"
   if [ X"${AB_IS_LIVE_Reject_File_5}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_XForm_Error_File}"
   let AB_IS_LIVE_XForm_Error_File="(AB_HAS_DATA_Flow_33) && (AB_USERCOND_XForm_Error_File)"
   if [ X"${AB_IS_LIVE_XForm_Error_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_XForm_Reject_File}"
   let AB_IS_LIVE_XForm_Reject_File="(AB_HAS_DATA_Flow_13) && (AB_USERCOND_XForm_Reject_File)"
   if [ X"${AB_IS_LIVE_XForm_Reject_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Utility_Load_Table_Check_KSH}"
   let AB_IS_LIVE_Utility_Load_Table_Check_KSH="AB_USERCOND_Utility_Load_Table_Check_KSH"
   if [ X"${AB_IS_LIVE_Utility_Load_Table_Check_KSH}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}"
   let AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits="AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits"
   if [ X"${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_chmod_LOAD_LOGFILE}"
   let AB_IS_LIVE_chmod_LOAD_LOGFILE="AB_USERCOND_chmod_LOAD_LOGFILE"
   if [ X"${AB_IS_LIVE_chmod_LOAD_LOGFILE}" != X"$Temp" ]; then
      done=false
   fi
done
# 
if [ X"${AB_VERBOSE_CONDITIONS}" != X"" ]; then
   # 
   # echo condition variables
   # 
   print -r -- 'AB_USERCOND_single_table_load=1'
   print -r -- 'AB_IS_LIVE_single_table_load=1'
   print -r -- 'AB_USERCOND_Combine_Local_Files='"${AB_USERCOND_Combine_Local_Files}"
   print -r -- 'AB_IS_LIVE_Combine_Local_Files='"${AB_IS_LIVE_Combine_Local_Files}"
   print -r -- 'AB_HAS_DATA_Flow_3='"${AB_HAS_DATA_Flow_3}"
   print -r -- 'AB_USERCOND_Input_File='"${AB_USERCOND_Input_File}"
   print -r -- 'AB_IS_LIVE_Input_File='"${AB_IS_LIVE_Input_File}"
   print -r -- 'AB_HAS_DATA_Flow_5='"${AB_HAS_DATA_Flow_5}"
   print -r -- 'AB_USERCOND_Conditional_Partition_by_Round_robin='"${AB_USERCOND_Conditional_Partition_by_Round_robin}"
   print -r -- 'AB_IS_LIVE_Conditional_Partition_by_Round_robin='"${AB_IS_LIVE_Conditional_Partition_by_Round_robin}"
   print -r -- 'AB_HAS_DATA_Flow_16='"${AB_HAS_DATA_Flow_16}"
   print -r -- 'AB_USERCOND_Retain_Flow_to_Flow='"${AB_USERCOND_Retain_Flow_to_Flow}"
   print -r -- 'AB_IS_LIVE_Retain_Flow_to_Flow='"${AB_IS_LIVE_Retain_Flow_to_Flow}"
   print -r -- 'AB_HAS_DATA_Flow_17='"${AB_HAS_DATA_Flow_17}"
   print -r -- 'AB_USERCOND_Load_Reformat='"${AB_USERCOND_Load_Reformat}"
   print -r -- 'AB_IS_LIVE_Load_Reformat='"${AB_IS_LIVE_Load_Reformat}"
   print -r -- 'AB_HAS_DATA_Flow_1='"${AB_HAS_DATA_Flow_1}"
   print -r -- 'AB_HAS_DATA_Flow_13='"${AB_HAS_DATA_Flow_13}"
   print -r -- 'AB_HAS_DATA_Flow_33='"${AB_HAS_DATA_Flow_33}"
   print -r -- 'AB_USERCOND_Replicate=0'
   print -r -- 'AB_IS_LIVE_Replicate='"${AB_IS_LIVE_Replicate}"
   print -r -- 'AB_HAS_DATA_Flow_29='"${AB_HAS_DATA_Flow_29}"
   print -r -- 'AB_HAS_DATA_Flow_24='"${AB_HAS_DATA_Flow_24}"
   print -r -- 'AB_HAS_DATA_Flow_6='"${AB_HAS_DATA_Flow_6}"
   print -r -- 'AB_HAS_DATA_Flow_15='"${AB_HAS_DATA_Flow_15}"
   print -r -- 'AB_HAS_DATA_Flow_14='"${AB_HAS_DATA_Flow_14}"
   print -r -- 'AB_HAS_DATA_Flow_12='"${AB_HAS_DATA_Flow_12}"
   print -r -- 'AB_HAS_DATA_Flow_34='"${AB_HAS_DATA_Flow_34}"
   print -r -- 'AB_HAS_DATA_Flow_26='"${AB_HAS_DATA_Flow_26}"
   print -r -- 'AB_HAS_DATA_Flow_30='"${AB_HAS_DATA_Flow_30}"
   print -r -- 'AB_HAS_DATA_Flow_43='"${AB_HAS_DATA_Flow_43}"
   print -r -- 'AB_USERCOND_Output_Table_API__table_='"${AB_USERCOND_Output_Table_API__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_API__table_='"${AB_IS_LIVE_Output_Table_API__table_}"
   print -r -- 'AB_HAS_DATA_Flow_8='"${AB_HAS_DATA_Flow_8}"
   print -r -- 'AB_HAS_DATA_Flow_31='"${AB_HAS_DATA_Flow_31}"
   print -r -- 'AB_HAS_DATA_Flow_4='"${AB_HAS_DATA_Flow_4}"
   print -r -- 'AB_USERCOND_Output_Table_Fastload__table_='"${AB_USERCOND_Output_Table_Fastload__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_Fastload__table_='"${AB_IS_LIVE_Output_Table_Fastload__table_}"
   print -r -- 'AB_HAS_DATA_Flow_7='"${AB_HAS_DATA_Flow_7}"
   print -r -- 'AB_HAS_DATA_Flow_25='"${AB_HAS_DATA_Flow_25}"
   print -r -- 'AB_HAS_DATA_Flow_2='"${AB_HAS_DATA_Flow_2}"
   print -r -- 'AB_USERCOND_Output_Table_MSSQL_Bulk_Append_Load__table_='"${AB_USERCOND_Output_Table_MSSQL_Bulk_Append_Load__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_='"${AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_}"
   print -r -- 'AB_HAS_DATA_Flow_45='"${AB_HAS_DATA_Flow_45}"
   print -r -- 'AB_HAS_DATA_Flow_44='"${AB_HAS_DATA_Flow_44}"
   print -r -- 'AB_USERCOND_Output_Table_MSSQL_Truncate_Load__table_='"${AB_USERCOND_Output_Table_MSSQL_Truncate_Load__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_='"${AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_}"
   print -r -- 'AB_HAS_DATA_Flow_39='"${AB_HAS_DATA_Flow_39}"
   print -r -- 'AB_HAS_DATA_Flow_41='"${AB_HAS_DATA_Flow_41}"
   print -r -- 'AB_USERCOND_Output_Table_Mysql_Truncate_Load__table_='"${AB_USERCOND_Output_Table_Mysql_Truncate_Load__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_='"${AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_}"
   print -r -- 'AB_HAS_DATA_Flow_35='"${AB_HAS_DATA_Flow_35}"
   print -r -- 'AB_HAS_DATA_Flow_36='"${AB_HAS_DATA_Flow_36}"
   print -r -- 'AB_HAS_DATA_Flow_37='"${AB_HAS_DATA_Flow_37}"
   print -r -- 'AB_USERCOND_Output_Table_Oracle_Append__table_='"${AB_USERCOND_Output_Table_Oracle_Append__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_Oracle_Append__table_='"${AB_IS_LIVE_Output_Table_Oracle_Append__table_}"
   print -r -- 'AB_HAS_DATA_Flow_21='"${AB_HAS_DATA_Flow_21}"
   print -r -- 'AB_HAS_DATA_Flow_32='"${AB_HAS_DATA_Flow_32}"
   print -r -- 'AB_HAS_DATA_Flow_20='"${AB_HAS_DATA_Flow_20}"
   print -r -- 'AB_USERCOND_Output_Table_Oracle_Bulk_Append_Load__table_='"${AB_USERCOND_Output_Table_Oracle_Bulk_Append_Load__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_='"${AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_}"
   print -r -- 'AB_HAS_DATA_Flow_27='"${AB_HAS_DATA_Flow_27}"
   print -r -- 'AB_HAS_DATA_Flow_42='"${AB_HAS_DATA_Flow_42}"
   print -r -- 'AB_HAS_DATA_Flow_28='"${AB_HAS_DATA_Flow_28}"
   print -r -- 'AB_USERCOND_Output_Table_Oracle_Truncate_Load__table_='"${AB_USERCOND_Output_Table_Oracle_Truncate_Load__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_='"${AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_}"
   print -r -- 'AB_HAS_DATA_Flow_18='"${AB_HAS_DATA_Flow_18}"
   print -r -- 'AB_HAS_DATA_Flow_40='"${AB_HAS_DATA_Flow_40}"
   print -r -- 'AB_HAS_DATA_Flow_19='"${AB_HAS_DATA_Flow_19}"
   print -r -- 'AB_USERCOND_Output_Table_PT_Load__table_='"${AB_USERCOND_Output_Table_PT_Load__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_PT_Load__table_='"${AB_IS_LIVE_Output_Table_PT_Load__table_}"
   print -r -- 'AB_HAS_DATA_Flow_10='"${AB_HAS_DATA_Flow_10}"
   print -r -- 'AB_HAS_DATA_Flow_11='"${AB_HAS_DATA_Flow_11}"
   print -r -- 'AB_HAS_DATA_Flow_9='"${AB_HAS_DATA_Flow_9}"
   print -r -- 'AB_USERCOND_Update_Oracle_Table='"${AB_USERCOND_Update_Oracle_Table}"
   print -r -- 'AB_IS_LIVE_Update_Oracle_Table='"${AB_IS_LIVE_Update_Oracle_Table}"
   print -r -- 'AB_HAS_DATA_Flow_22='"${AB_HAS_DATA_Flow_22}"
   print -r -- 'AB_HAS_DATA_Flow_23='"${AB_HAS_DATA_Flow_23}"
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files=1'
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files_Error_File=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files_Error_File='"${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}"
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files_Gather_Logs=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs='"${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}"
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files_Reject_File=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files_Reject_File='"${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}"
   print -r -- 'AB_USERCOND_Reject_File_5='"${AB_USERCOND_Reject_File_5}"
   print -r -- 'AB_IS_LIVE_Reject_File_5='"${AB_IS_LIVE_Reject_File_5}"
   print -r -- 'AB_USERCOND_XForm_Error_File='"${AB_USERCOND_XForm_Error_File}"
   print -r -- 'AB_IS_LIVE_XForm_Error_File='"${AB_IS_LIVE_XForm_Error_File}"
   print -r -- 'AB_USERCOND_XForm_Reject_File='"${AB_USERCOND_XForm_Reject_File}"
   print -r -- 'AB_IS_LIVE_XForm_Reject_File='"${AB_IS_LIVE_XForm_Reject_File}"
   print -r -- 'AB_USERCOND_Utility_Load_Table_Check_KSH='"${AB_USERCOND_Utility_Load_Table_Check_KSH}"
   print -r -- 'AB_IS_LIVE_Utility_Load_Table_Check_KSH='"${AB_IS_LIVE_Utility_Load_Table_Check_KSH}"
   print -r -- 'AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits='"${AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits}"
   print -r -- 'AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits='"${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}"
   print -r -- 'AB_USERCOND_chmod_LOAD_LOGFILE='"${AB_USERCOND_chmod_LOAD_LOGFILE}"
   print -r -- 'AB_IS_LIVE_chmod_LOAD_LOGFILE='"${AB_IS_LIVE_chmod_LOAD_LOGFILE}"
fi

# Files:
if [ X"${AB_IS_LIVE_Input_File}" != X0 ]; then
   mp ifile Input_File $PARALLEL_FILE_LAYOUT
   AB_PORT_Input_File_read=Input_File.read
   AB_METADATA_Input_File_read=' -metadata metadata1'
else
   :
fi

# Components in phase 0:
if [ X"${AB_IS_LIVE_Utility_Load_Table_Check_KSH}" != X0 ]; then
   mp filter Utility_Load_Table_Check_KSH $DW_EXE/utility_load_table_check.ksh -layout layout1
else
   :
fi
mp phase 0

# Components in phase 1:
if [ X"${AB_IS_LIVE_Combine_Local_Files}" != X0 ]; then
   mp custom Combine_Local_Files "$DW_CMP"'/Combine Local Files.mpc' "$INPUT_FILE_FILE" "$RECORD_TERM" -layout layout2
   AB_PORT_Combine_Local_Files_out=Combine_Local_Files.out
   AB_METADATA_Combine_Local_Files_out=' -metadata metadata1'
else
   :
fi
if [ X"${AB_IS_LIVE_Conditional_Partition_by_Round_robin}" != X0 ]; then
   mp roundrobin-partition Conditional_Partition_by_Round_robin 1 -layout layout2
   AB_PORT_Conditional_Partition_by_Round_robin_out=Conditional_Partition_by_Round_robin.out
   AB_METADATA_Conditional_Partition_by_Round_robin_out=' -metadata metadata1'
else
   let AB_PORT_HAS_DATA="AB_HAS_DATA_Flow_5"
   if [ X"${AB_PORT_HAS_DATA}" != X0 ]; then
      AB_PORT_Conditional_Partition_by_Round_robin_out="${AB_PORT_Input_File_read}"
      AB_METADATA_Conditional_Partition_by_Round_robin_out="${AB_METADATA_Input_File_read}"
   fi
   let AB_PORT_HAS_DATA="AB_HAS_DATA_Flow_3"
   if [ X"${AB_PORT_HAS_DATA}" != X0 ]; then
      AB_PORT_Conditional_Partition_by_Round_robin_out="${AB_PORT_Combine_Local_Files_out}"
      AB_METADATA_Conditional_Partition_by_Round_robin_out="${AB_METADATA_Combine_Local_Files_out}"
   fi
   :
fi
if [ X"${AB_IS_LIVE_Retain_Flow_to_Flow}" != X0 ]; then
   mp broadcast Retain_Flow_to_Flow -layout layout3
   AB_PORT_Retain_Flow_to_Flow_out=Retain_Flow_to_Flow.out
   AB_METADATA_Retain_Flow_to_Flow_out=' -metadata metadata1'
else
   AB_PORT_Retain_Flow_to_Flow_out="${AB_PORT_Conditional_Partition_by_Round_robin_out}"
   AB_METADATA_Retain_Flow_to_Flow_out="${AB_METADATA_Conditional_Partition_by_Round_robin_out}"
   :
fi
if [ X"${AB_IS_LIVE_Load_Reformat}" != X0 ]; then
   mp reformat-transform Load_Reformat -limit "$XFORM_REJLIMIT" -ramp "$XFORM_REJRAMP" -layout layout3
   let AB_DO_ADD_PORT="AB_HAS_DATA_Flow_1"
   if [ X"${AB_DO_ADD_PORT}" != X0 ]; then
      mp add-port Load_Reformat.out.out0 ${REFORMAT_TRANS_FILE:+"$REFORMAT_TRANS_FILE"}
   fi
   AB_PORT_Load_Reformat_out_out0=Load_Reformat.out.out0
   AB_METADATA_Load_Reformat_out_out0=' -metadata metadata2'
   AB_PORT_Load_Reformat_reject_out0=Load_Reformat.reject.out0
   AB_METADATA_Load_Reformat_reject_out0=' -metadata metadata1'
   AB_PORT_Load_Reformat_error_out0=Load_Reformat.error.out0
   AB_METADATA_Load_Reformat_error_out0=' -metadata metadata3'
else
   AB_PORT_Load_Reformat_out_out0="${AB_PORT_Retain_Flow_to_Flow_out}"
   AB_METADATA_Load_Reformat_out_out0="${AB_METADATA_Retain_Flow_to_Flow_out}"
   AB_PORT_Load_Reformat_reject_out0="${AB_PORT_Retain_Flow_to_Flow_out}"
   AB_METADATA_Load_Reformat_reject_out0="${AB_METADATA_Retain_Flow_to_Flow_out}"
   AB_PORT_Load_Reformat_error_out0="${AB_PORT_Retain_Flow_to_Flow_out}"
   AB_METADATA_Load_Reformat_error_out0="${AB_METADATA_Retain_Flow_to_Flow_out}"
   :
fi
if [ X"${AB_IS_LIVE_Replicate}" != X0 ]; then
   mp broadcast Replicate -layout layout3
   AB_PORT_Replicate_out=Replicate.out
   AB_METADATA_Replicate_out=' -metadata metadata2'
else
   AB_PORT_Replicate_out="${AB_PORT_Load_Reformat_out_out0}"
   AB_METADATA_Replicate_out="${AB_METADATA_Load_Reformat_out_out0}"
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_API__table_}" != X0 ]; then
   mp otable Output_Table_API__table_ "$AB_IDB_CONFIG" -flags wronly -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -interface api -field_type_preference variable -commitNumber 0 -no_actions_ok -limit "$LOAD_ERRLIMIT" -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_API__table__reject=Output_Table_API__table_.reject
   AB_METADATA_Output_Table_API__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_API__table__error=Output_Table_API__table_.error
   AB_METADATA_Output_Table_API__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_API__table__log=Output_Table_API__table_.log
   AB_METADATA_Output_Table_API__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_Fastload__table_}" != X0 ]; then
   mp otable Output_Table_Fastload__table_ "$AB_IDB_CONFIG" -flags wronly,append -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -interface Fastload -field_type_preference variable -sleep "$FLOAD_SLEEP" -tenacity "$FLOAD_TENACITY" -sessions "$FLOAD_LOAD_SESSIONS" -logtab_name "$LOG_TABLE" -np_axsmod_dir "$DW_TMP" -checkpoint 0 -worktab_name "$WORK_TABLE" -errtab_name "$ERROR_TABLE" -errlimit "$FLOAD_ERRLIMIT" -logfile "$LOAD_LOGFILE" -axsmod_tracelevel None -limit 0 -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_Fastload__table__reject=Output_Table_Fastload__table_.reject
   AB_METADATA_Output_Table_Fastload__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_Fastload__table__error=Output_Table_Fastload__table_.error
   AB_METADATA_Output_Table_Fastload__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_Fastload__table__log=Output_Table_Fastload__table_.log
   AB_METADATA_Output_Table_Fastload__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_}" != X0 ]; then
   mp otable Output_Table_MSSQL_Bulk_Append_Load__table_ "$AB_IDB_MSSQL_CONFIG" -flags wronly,append -table "${DB_SCHEMA}"'.'"${STAGE_TABLE}" -interface utility -field_type_preference variable -num_errors "$LOAD_ERRLIMIT" -limit 0 -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_MSSQL_Bulk_Append_Load__table__error=Output_Table_MSSQL_Bulk_Append_Load__table_.error
   AB_METADATA_Output_Table_MSSQL_Bulk_Append_Load__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_MSSQL_Bulk_Append_Load__table__log=Output_Table_MSSQL_Bulk_Append_Load__table_.log
   AB_METADATA_Output_Table_MSSQL_Bulk_Append_Load__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_}" != X0 ]; then
   mp otable Output_Table_MSSQL_Truncate_Load__table_ "$AB_IDB_MSSQL_CONFIG" -flags wronly,trunc -table "${DB_SCHEMA}"'.'"${STAGE_TABLE}" -interface utility -field_type_preference variable -num_errors "$LOAD_ERRLIMIT" -limit 0 -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_MSSQL_Truncate_Load__table__error=Output_Table_MSSQL_Truncate_Load__table_.error
   AB_METADATA_Output_Table_MSSQL_Truncate_Load__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_MSSQL_Truncate_Load__table__log=Output_Table_MSSQL_Truncate_Load__table_.log
   AB_METADATA_Output_Table_MSSQL_Truncate_Load__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_}" != X0 ]; then
   mp otable Output_Table_Mysql_Truncate_Load__table_ "$AB_IDB_MYSQL_CONFIG" -flags wronly,trunc -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -interface utility -field_type_preference delimited -ss_duplicate_rows_handling ignore -limit 0 -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_Mysql_Truncate_Load__table__reject=Output_Table_Mysql_Truncate_Load__table_.reject
   AB_METADATA_Output_Table_Mysql_Truncate_Load__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_Mysql_Truncate_Load__table__error=Output_Table_Mysql_Truncate_Load__table_.error
   AB_METADATA_Output_Table_Mysql_Truncate_Load__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_Mysql_Truncate_Load__table__log=Output_Table_Mysql_Truncate_Load__table_.log
   AB_METADATA_Output_Table_Mysql_Truncate_Load__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_Oracle_Append__table_}" != X0 ]; then
   mp otable Output_Table_Oracle_Append__table_ "$AB_IDB_ORACLE_CONFIG" -flags wronly,append -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -interface api -field_type_preference variable -commitNumber 0 -limit "$LOAD_ERRLIMIT" -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_Oracle_Append__table__reject=Output_Table_Oracle_Append__table_.reject
   AB_METADATA_Output_Table_Oracle_Append__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_Oracle_Append__table__error=Output_Table_Oracle_Append__table_.error
   AB_METADATA_Output_Table_Oracle_Append__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_Oracle_Append__table__log=Output_Table_Oracle_Append__table_.log
   AB_METADATA_Output_Table_Oracle_Append__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_}" != X0 ]; then
   mp otable Output_Table_Oracle_Bulk_Append_Load__table_ "$AB_IDB_ORACLE_CONFIG" -flags wronly,append -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -direct -interface utility -field_type_preference variable -num_errors "$LOAD_ERRLIMIT" -num_discards "$LOAD_ERRLIMIT" -limit 0 -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_Oracle_Bulk_Append_Load__table__reject=Output_Table_Oracle_Bulk_Append_Load__table_.reject
   AB_METADATA_Output_Table_Oracle_Bulk_Append_Load__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_Oracle_Bulk_Append_Load__table__error=Output_Table_Oracle_Bulk_Append_Load__table_.error
   AB_METADATA_Output_Table_Oracle_Bulk_Append_Load__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_Oracle_Bulk_Append_Load__table__log=Output_Table_Oracle_Bulk_Append_Load__table_.log
   AB_METADATA_Output_Table_Oracle_Bulk_Append_Load__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_}" != X0 ]; then
   mp otable Output_Table_Oracle_Truncate_Load__table_ "$AB_IDB_ORACLE_CONFIG" -flags wronly,trunc -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -direct -interface utility -field_type_preference variable -num_errors "$LOAD_ERRLIMIT" -num_discards "$LOAD_ERRLIMIT" -limit 0 -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_Oracle_Truncate_Load__table__reject=Output_Table_Oracle_Truncate_Load__table_.reject
   AB_METADATA_Output_Table_Oracle_Truncate_Load__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_Oracle_Truncate_Load__table__error=Output_Table_Oracle_Truncate_Load__table_.error
   AB_METADATA_Output_Table_Oracle_Truncate_Load__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_Oracle_Truncate_Load__table__log=Output_Table_Oracle_Truncate_Load__table_.log
   AB_METADATA_Output_Table_Oracle_Truncate_Load__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_PT_Load__table_}" != X0 ]; then
   mp otable Output_Table_PT_Load__table_ "$AB_IDB_CONFIG" -flags wronly,append -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -interface PT_api_load -field_type_preference variable -sleep "$FLOAD_SLEEP" -tenacity "$FLOAD_TENACITY" -sessions "$FLOAD_LOAD_SESSIONS" -instances "$PT_INSTANCES" -logtab_name "$LOG_TABLE" -np_axsmod_dir "$DW_TMP" -checkpoint 0 -worktab_name "$WORK_TABLE" -errtab_name "$ERROR_TABLE" -errlimit "$FLOAD_ERRLIMIT" -logfile "$LOAD_LOGFILE" -axsmod_tracelevel None -pt_tracelevel None -limit 0 -ramp 0.0 -layout layout3
   AB_PORT_Output_Table_PT_Load__table__reject=Output_Table_PT_Load__table_.reject
   AB_METADATA_Output_Table_PT_Load__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_PT_Load__table__error=Output_Table_PT_Load__table_.error
   AB_METADATA_Output_Table_PT_Load__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_PT_Load__table__log=Output_Table_PT_Load__table_.log
   AB_METADATA_Output_Table_PT_Load__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}" != X0 ]; then
   mp logger Reject_Error_Log_Files.Error_File "$LOAD_ERRFILE" Start End -layout layout4
else
   :
fi
if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}" != X0 ]; then
   mp logger Reject_Error_Log_Files.Reject_File "$LOAD_REJFILE" Start End -layout layout4
else
   :
fi
if [ X"${AB_IS_LIVE_Update_Oracle_Table}" != X0 ]; then
   mp db-update Update_Oracle_Table "$AB_IDB_ORACLE_CONFIG" "$UPDATE_SQL_FILE" "$INSERT_SQL_FILE" -__ab__leading-checkpoint__ab__ -interface api -commitNumber "$ROWS_PER_COMMIT" -commitTable "$COMMIT_LOG_TABLE" -new_db_update -limit 0 -ramp 0.0 -layout layout5
   AB_PORT_Update_Oracle_Table_reject=Update_Oracle_Table.reject
   AB_METADATA_Update_Oracle_Table_reject=' -metadata metadata2'
   AB_PORT_Update_Oracle_Table_log=Update_Oracle_Table.log
   AB_METADATA_Update_Oracle_Table_log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}" != X0 ]; then
   mp logger Reject_Error_Log_Files.Gather_Logs "$OUTPUT_TABLE_LOGFILE" Start End -layout layout4
else
   :
fi
# mp logger Reject_File_5 "$LOAD_REJFILE" Start End -layout layout4
if [ X"${AB_IS_LIVE_XForm_Error_File}" != X0 ]; then
   mp logger XForm_Error_File "$XFORM_ERRFILE" Start End -layout layout4
else
   :
fi
if [ X"${AB_IS_LIVE_XForm_Reject_File}" != X0 ]; then
   mp logger XForm_Reject_File "$XFORM_REJFILE" Start End -layout layout4
else
   :
fi
if [ X"${AB_IS_LIVE_chmod_LOAD_LOGFILE}" != X0 ]; then
   mp filter chmod_LOAD_LOGFILE $DW_EXE/chmod_load_logfile.ksh -layout layout1
else
   :
fi
mp checkpoint 1

# Components in phase 2:
if [ X"${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}" != X0 ]; then
   mp filter check_LOAD_LOGFILE_for_abnormal_exits $DW_EXE/check_load_logfile.ksh -layout layout1
else
   :
fi

# Flows for Entire Graph:
let AB_FLOW_CONDITION="(AB_IS_LIVE_Conditional_Partition_by_Round_robin) && (AB_HAS_DATA_Flow_5)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_5 "${AB_PORT_Input_File_read}" Conditional_Partition_by_Round_robin.in${AB_METADATA_Input_File_read} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Conditional_Partition_by_Round_robin) && (AB_HAS_DATA_Flow_3)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_3 "${AB_PORT_Combine_Local_Files_out}" Conditional_Partition_by_Round_robin.in${AB_METADATA_Combine_Local_Files_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Retain_Flow_to_Flow) && (AB_HAS_DATA_Flow_16)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp all-to-all-flow Flow_16 "${AB_PORT_Conditional_Partition_by_Round_robin_out}" Retain_Flow_to_Flow.in${AB_METADATA_Conditional_Partition_by_Round_robin_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Load_Reformat) && (AB_HAS_DATA_Flow_17)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_17 "${AB_PORT_Retain_Flow_to_Flow_out}" Load_Reformat.in${AB_METADATA_Retain_Flow_to_Flow_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_XForm_Error_File) && (AB_HAS_DATA_Flow_33)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_33 "${AB_PORT_Load_Reformat_error_out0}" XForm_Error_File.in${AB_METADATA_Load_Reformat_error_out0}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_XForm_Reject_File) && (AB_HAS_DATA_Flow_13)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_13 "${AB_PORT_Load_Reformat_reject_out0}" XForm_Reject_File.in${AB_METADATA_Load_Reformat_reject_out0}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Replicate) && (AB_HAS_DATA_Flow_1)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_1 "${AB_PORT_Load_Reformat_out_out0}" Replicate.in${AB_METADATA_Load_Reformat_out_out0} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_MSSQL_Bulk_Append_Load__table_) && (AB_HAS_DATA_Flow_43)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_43 "${AB_PORT_Replicate_out}" Output_Table_MSSQL_Bulk_Append_Load__table_.write${AB_METADATA_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_MSSQL_Truncate_Load__table_) && (AB_HAS_DATA_Flow_30)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_30 "${AB_PORT_Replicate_out}" Output_Table_MSSQL_Truncate_Load__table_.write${AB_METADATA_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Update_Oracle_Table) && (AB_HAS_DATA_Flow_26)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_26 "${AB_PORT_Replicate_out}" Update_Oracle_Table.in${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_Mysql_Truncate_Load__table_) && (AB_HAS_DATA_Flow_34)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_34 "${AB_PORT_Replicate_out}" Output_Table_Mysql_Truncate_Load__table_.write${AB_METADATA_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_PT_Load__table_) && (AB_HAS_DATA_Flow_12)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_12 "${AB_PORT_Replicate_out}" Output_Table_PT_Load__table_.write${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_HAS_DATA_Flow_14)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_14 "${AB_PORT_Replicate_out}" Output_Table_Fastload__table_.write${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_API__table_) && (AB_HAS_DATA_Flow_15)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_15 "${AB_PORT_Replicate_out}" Output_Table_API__table_.write${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_Oracle_Append__table_) && (AB_HAS_DATA_Flow_6)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_6 "${AB_PORT_Replicate_out}" Output_Table_Oracle_Append__table_.write${AB_METADATA_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_Oracle_Truncate_Load__table_) && (AB_HAS_DATA_Flow_24)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_24 "${AB_PORT_Replicate_out}" Output_Table_Oracle_Truncate_Load__table_.write${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_Oracle_Bulk_Append_Load__table_) && (AB_HAS_DATA_Flow_29)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_29 "${AB_PORT_Replicate_out}" Output_Table_Oracle_Bulk_Append_Load__table_.write${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_11)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_11 "${AB_PORT_Output_Table_PT_Load__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_PT_Load__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_25)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_25 "${AB_PORT_Output_Table_Fastload__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_Fastload__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_31)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_31 "${AB_PORT_Output_Table_API__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_API__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_42)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_42 "${AB_PORT_Output_Table_Oracle_Bulk_Append_Load__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_Oracle_Bulk_Append_Load__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_36)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_36 "${AB_PORT_Output_Table_Mysql_Truncate_Load__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_Mysql_Truncate_Load__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_32)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_32 "${AB_PORT_Output_Table_Oracle_Append__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_Oracle_Append__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_40)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_40 "${AB_PORT_Output_Table_Oracle_Truncate_Load__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_Oracle_Truncate_Load__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_39)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_39 "${AB_PORT_Output_Table_MSSQL_Truncate_Load__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_MSSQL_Truncate_Load__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_45)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_45 "${AB_PORT_Output_Table_MSSQL_Bulk_Append_Load__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_MSSQL_Bulk_Append_Load__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_10)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_10 "${AB_PORT_Output_Table_PT_Load__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_PT_Load__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_7)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_7 "${AB_PORT_Output_Table_Fastload__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_Fastload__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_8)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_8 "${AB_PORT_Output_Table_API__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_API__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_21)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_21 "${AB_PORT_Output_Table_Oracle_Append__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_Oracle_Append__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_35)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_35 "${AB_PORT_Output_Table_Mysql_Truncate_Load__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_Mysql_Truncate_Load__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_18)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_18 "${AB_PORT_Output_Table_Oracle_Truncate_Load__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_Oracle_Truncate_Load__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_27)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_27 "${AB_PORT_Output_Table_Oracle_Bulk_Append_Load__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_Oracle_Bulk_Append_Load__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_9)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_9 "${AB_PORT_Output_Table_PT_Load__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_PT_Load__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_2)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_2 "${AB_PORT_Output_Table_Fastload__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_Fastload__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_4)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_4 "${AB_PORT_Output_Table_API__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_API__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_37)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_37 "${AB_PORT_Output_Table_Mysql_Truncate_Load__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_Mysql_Truncate_Load__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_19)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_19 "${AB_PORT_Output_Table_Oracle_Truncate_Load__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_Oracle_Truncate_Load__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_20)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_20 "${AB_PORT_Output_Table_Oracle_Append__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_Oracle_Append__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_28)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_28 "${AB_PORT_Output_Table_Oracle_Bulk_Append_Load__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_Oracle_Bulk_Append_Load__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_23)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_23 "${AB_PORT_Update_Oracle_Table_log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Update_Oracle_Table_log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_41)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_41 "${AB_PORT_Output_Table_MSSQL_Truncate_Load__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_MSSQL_Truncate_Load__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_44)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_44 "${AB_PORT_Output_Table_MSSQL_Bulk_Append_Load__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_MSSQL_Bulk_Append_Load__table__log}
fi
# mp fan-in-flow Flow_22 "${AB_PORT_Update_Oracle_Table_reject}" Reject_File_5.in${AB_METADATA_Update_Oracle_Table_reject}

if [ X"${AB_VERBOSE_CONDITIONS}" != X"" ]; then
   print -r -- 'Generated graph:'
   mp show
fi
unset AB_COMM_WAIT
export AB_TRACKING_GRAPH_THUMBPRINT;AB_TRACKING_GRAPH_THUMBPRINT=8115017
mp run
mpjret=$?
unset AB_COMM_WAIT
unset AB_TRACKING_GRAPH_THUMBPRINT
mp reset
m_rmcatalog > /dev/null 2>&1
export XX_CATALOG;XX_CATALOG="${SAVED_CATALOG}"
export AB_CATALOG;AB_CATALOG="${SAVED_CATALOG}"

#+Script End+  ==================== Edits in this section are preserved.




























#+End Script End+  ====================

exit $mpjret
