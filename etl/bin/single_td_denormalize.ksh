#! /bin/ksh
# Script generated by software licensed from Ab Initio.
# Use and disclosure are subject to Ab Initio confidentiality and license terms.
export AB_HOME;AB_HOME=${AB_HOME:-/legato/softlib/abinitio/abinitio-V3-1-4}
export MPOWERHOME;MPOWERHOME="$AB_HOME"
export AB_COMPONENTS;AB_COMPONENTS="$AB_HOME"'/Projects/root/components'
export PATH
typeset _ab_uname=`uname`
case "$_ab_uname" in
Windows_* )
    PATH="$AB_HOME/bin;$PATH" ;;
CYGWIN_* )
    PATH="`cygpath "$AB_HOME"`/bin:/usr/local/bin:/usr/bin:/bin:$PATH" ;;
* )
    PATH="$AB_HOME/bin:$PATH" ;;
esac
unset ENV
export AB_REPORT;AB_REPORT=${AB_REPORT:-'monitor=60 processes scroll=true'}
unset GDE_EXECUTION

export AB_COMPATIBILITY;AB_COMPATIBILITY=3.1.4.4

# Deployed execution script for graph "single_td_denormalize", compiled at Friday, October 04, 2013 11:28:07 using GDE version 3.0.3.1
export AB_JOB;AB_JOB=${AB_JOB_PREFIX:-""}single_td_denormalize
# Begin Ab Initio shell utility functions

: ${_ab_uname:=$(uname)}

function __AB_INVOKE_PROJECT
{
  typeset _AB_PROJECT_KSH="$1" ; shift
  typeset _AB_PROJECT_DIR="$1" ; shift
  typeset _AB_DEFINE_OR_EXECUTE="$1" ; shift
  typeset _AB_START_OR_END="$1" ; shift
  # Check that the project exists:
  if [ ! -r "$_AB_PROJECT_KSH" ] ; then
    print -r -u2 Warning: Cannot find common sandbox script: "$_AB_PROJECT_KSH"
    if [ ! -z "${_AB_CALLING_PROJECT:=}" ] ; then
      print -r -u2 Please check the common sandbox settings for the calling project: "$_AB_CALLING_PROJECT"
    fi
  fi
  if [ $# -gt 0 ] ; then
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END"  "$@"
  else
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END" 
  fi;
}

function __AB_DOTIT
{
  if [ $# -gt 0 ] ; then
    .  "$@"
  fi
}

function __AB_QUOTEIT {
  typeset queue q qq qed lotsaqs s trail
  q="'"
  qq='"'
  if [ X"$1" = X"" ] ; then
    print $q$q
    return
  fi
  lotsaqs=${q}${qq}${q}${qq}${q}
  if [ ${#1} -ge 10000 ]; then
    print -r -- "$1" | sed "s/$q/$lotsaqs/g; 1s/^/$q/; \$s/\$/$q/"
  else
    queue=${1%$q}
    if [ X"$queue" != X"$1" ] ; then
      trail="${qq}${q}${qq}" 
    else 
      trail=""
    fi
    oldIFS="$IFS"
    IFS=$q
    set -- $queue
    IFS="$oldIFS"
    print -rn "$q$1"
    shift
    for s; do
      print -rn "$lotsaqs$s"
    done
    print -r $q$trail
  fi
}

function __AB_dirname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        typeset d='' p="$1"
        # Strip drive letter colon, if present, and put it into d.
        case $p in
        [A-Za-z]:* )
            d=${p%%:*}:
            p=${p#??}
            ;;
        esac
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*[/\\] )
                p=${p%[/\\]} ;;
            * )
                break ;;
            esac
        done
        if [[ "$p" = ?*[/\\]* ]] ; then
            print -r -- "$d${p%[/\\]*}"
        elif [[ "$p" = [/\\]* ]] ; then
            print "$d/"
        else
            print "$d." 
        fi
        ;;
    * ) # Unix
        typeset p="$1"
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*/ )
                p="${p%/}" ;;
            * )
                break ;;
            esac
        done
        case $p in
        ?*/* )
            print -r -- "${p%/*}" ;;
        /* )
            print / ;;
        * )
            print . ;;
        esac
        ;;
    esac
}

function __AB_concat_pathname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        # Does not handle all cases of concatenating partially absolute
        # pathnames, those with only one of a drive letter or an initial
        # separator.
        case $2 in
        [/\\]* | [A-Za-z]:* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | *[/\\] )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    * ) # Unix
        case $2 in
        /* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | */ )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    esac
}

function __AB_COND {
if [ X"$1" = X0  -o X"$1" = Xfalse -o X"$1" = XFalse -o X"$1" = XF -o X"$1" = Xf ] ; then
  print "0"
else
  print "1"
fi
}

# End Ab Initio shell utility functions
export AB_GRAPH_NAME;AB_GRAPH_NAME=single_td_denormalize

# Host Setup Commands:
. /dw/etl/mstr_cfg/etlenv.setup
_AB_PROXY_DIR=single_td_denormalize-ProxyDir-$$
rm -rf "${_AB_PROXY_DIR}"
mkdir "${_AB_PROXY_DIR}"
print -r -- "" > "${_AB_PROXY_DIR}"'/GDE-Parameters'
function __AB_CLEANUP_PROXY_FILES
{
   rm -rf "${_AB_PROXY_DIR}"
   rm -rf "${AB_EXTERNAL_PROXY_DIR}"
   return
}
trap '__AB_CLEANUP_PROXY_FILES' EXIT
# Work around pdksh bug: the EXIT handler is not executed upon a signal.
trap '_AB_status=$?; __AB_CLEANUP_PROXY_FILES; exit $_AB_status' HUP INT QUIT TERM
if [ $# -gt 0 -a X"$1" = X"-help" ]; then
print -r -- 'Usage: single_td_denormalize.ksh <TRGT_ETL_ID> <SRC_ETL_ID> <SRC_JOB_ENV> <SRC_JOB_TYPE> <SRC_JOB_TYPE_ID> <SORT_KEY> <SRC_BATCH_SEQ_NUM>'
exit 1
fi

# Command Line Processing
function _AB_PARSE_ARGUMENTS {
   unset TRGT_ETL_ID
   unset SRC_ETL_ID
   unset SRC_JOB_ENV
   unset SRC_JOB_TYPE
   unset SRC_JOB_TYPE_ID
   unset SORT_KEY
   unset SRC_BATCH_SEQ_NUM
   _ab_index_var=0
   if [ $# -gt 0 ]; then
      export TRGT_ETL_ID;      TRGT_ETL_ID="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export SRC_ETL_ID;      SRC_ETL_ID="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export SRC_JOB_ENV;      SRC_JOB_ENV="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export SRC_JOB_TYPE;      SRC_JOB_TYPE="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export SRC_JOB_TYPE_ID;      SRC_JOB_TYPE_ID="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export SORT_KEY;      SORT_KEY="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   if [ $# -gt 0 ]; then
      export SRC_BATCH_SEQ_NUM;      SRC_BATCH_SEQ_NUM="${1}"
      let _ab_index_var=_ab_index_var+1
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      shift
   fi
   while [ $# -gt 0 ]; do
   _ab_kwd="${1}"
   let _ab_index_var=_ab_index_var+1
   shift
   case ${_ab_kwd} in
   * )
      if [ X"${_AB_USED_ARGUMENTS[_ab_index_var]}" != X1 ]; then
         print -r -- 'Unexpected command line argument found: '"${_ab_kwd}"
         print -r -- 'Usage: single_td_denormalize.ksh <TRGT_ETL_ID> <SRC_ETL_ID> <SRC_JOB_ENV> <SRC_JOB_TYPE> <SRC_JOB_TYPE_ID> <SORT_KEY> <SRC_BATCH_SEQ_NUM>'
         exit 1
      fi
   esac
   done
}
if [ $# -gt 0 ]; then
   _AB_PARSE_ARGUMENTS "$@"
else
   _AB_PARSE_ARGUMENTS
fi

if [ X"${TRGT_ETL_ID:-}" = X"" ]; then
   print -r -- 'Required parameter TRGT_ETL_ID undefined'
   print -r -- 'Usage: single_td_denormalize.ksh <TRGT_ETL_ID> <SRC_ETL_ID> <SRC_JOB_ENV> <SRC_JOB_TYPE> <SRC_JOB_TYPE_ID> <SORT_KEY> <SRC_BATCH_SEQ_NUM>'
   exit 1
fi
export SRC_ETL_ID;SRC_ETL_ID=${SRC_ETL_ID:-"$ETL_ID"}
export SRC_JOB_ENV;SRC_JOB_ENV=${SRC_JOB_ENV:-"$JOB_ENV"}
export SRC_JOB_TYPE;SRC_JOB_TYPE=${SRC_JOB_TYPE:-"$JOB_TYPE"}
export SRC_JOB_TYPE_ID;SRC_JOB_TYPE_ID=${SRC_JOB_TYPE_ID:-"$JOB_TYPE_ID"}
export SORT_KEY;SORT_KEY=${SORT_KEY:-"$SORT_KEY"}

if [ X"${SRC_BATCH_SEQ_NUM:-}" = X"" ]; then
   print -r -- 'Required parameter SRC_BATCH_SEQ_NUM undefined'
   print -r -- 'Usage: single_td_denormalize.ksh <TRGT_ETL_ID> <SRC_ETL_ID> <SRC_JOB_ENV> <SRC_JOB_TYPE> <SRC_JOB_TYPE_ID> <SORT_KEY> <SRC_BATCH_SEQ_NUM>'
   exit 1
fi
export SRC_SUBJECT_AREA;SRC_SUBJECT_AREA=${SRC_ETL_ID%%.*}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter SRC_SUBJECT_AREA of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export SRC_TABLE_ID;SRC_TABLE_ID=${SRC_ETL_ID##*.}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter SRC_TABLE_ID of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export TRGT_SUBJECT_AREA;TRGT_SUBJECT_AREA=${TRGT_ETL_ID%%.*}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TRGT_SUBJECT_AREA of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export TRGT_TABLE_ID;TRGT_TABLE_ID=${TRGT_ETL_ID##*.}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TRGT_TABLE_ID of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export SRC_ETL_CFG_FILE;SRC_ETL_CFG_FILE="$DW_CFG"'/'"$SRC_ETL_ID"'.cfg'
export TRGT_ETL_CFG_FILE;TRGT_ETL_CFG_FILE="$DW_CFG"'/'"$TRGT_ETL_ID"'.cfg'
export CURR_DATETIME;CURR_DATETIME=${CURR_DATETIME:-$(date '+%Y%m%d-%H%M%S')}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CURR_DATETIME of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export CURR_DATE;CURR_DATE=${CURR_DATE:-${CURR_DATETIME%-*}}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CURR_DATE of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export IS_CATY;IS_CATY=$(grep "^IS_CATY\>" $SRC_ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter IS_CATY of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export IN_DIR;IN_DIR=$(grep "^IN_DIR\>" $SRC_ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print $VALUE/$SRC_JOB_ENV/$SRC_SUBJECT_AREA)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter IN_DIR of single_td_denormalize', interpretation 'shell'
   exit $mpjret
fi
export SRC_READ_DML;SRC_READ_DML="$DW_DML"'/'"$SRC_ETL_ID"'.read.dml'
export REFORMAT_INPUT_DML;REFORMAT_INPUT_DML="$DW_DML"'/'"$TRGT_ETL_ID"'.read.dml'
export REFORMAT_TRANS_FILE;REFORMAT_TRANS_FILE="$DW_XFR"'/'"$SRC_ETL_ID"'.reformat.xfr'
export DENORM_TRANS_FILE;DENORM_TRANS_FILE="$DW_XFR"'/'"$TRGT_ETL_ID"'.denormalize.xfr'
export SRC_REFORMAT_INPUT_DML;SRC_REFORMAT_INPUT_DML="$DW_DML"'/'"$TRGT_ETL_ID"'.read.dml'
export DENORM_INPUT_DML;DENORM_INPUT_DML="$DW_DML"'/'"$TRGT_ETL_ID"'.reformat.write.dml'
export REDEFINE_INPUT_DML;REDEFINE_INPUT_DML="$DW_DML"'/'"$TRGT_ETL_ID"'.redefine_format.write.dml'
export TRGT_REFORMAT_TRANS_FILE;TRGT_REFORMAT_TRANS_FILE="$DW_XFR"'/'"$TRGT_ETL_ID"'.reformat.xfr'
export TRGT_INPUT_DML;TRGT_INPUT_DML="$DW_DML"'/'"$TRGT_ETL_ID"'.write.dml'
export INPUT_FILE;INPUT_FILE="$DW_IN"'/'"$SRC_JOB_ENV"'/'"$TRGT_SUBJECT_AREA"'/'"$SRC_TABLE_ID"'.1.dat.'"$SRC_BATCH_SEQ_NUM"
export OUTPUT_FILE;OUTPUT_FILE="$DW_IN"'/'"$SRC_JOB_ENV"'/'"$TRGT_SUBJECT_AREA"'/'"$TRGT_TABLE_ID"'.1.dat.'"$SRC_BATCH_SEQ_NUM"
export LOG_FILE_DIR;LOG_FILE_DIR="$DW_LOG"'/'"$SRC_JOB_ENV"'/'"$TRGT_SUBJECT_AREA"'/'"$TRGT_TABLE_ID"'/'"$CURR_DATE"
export LOG_FILE;LOG_FILE="$LOG_FILE_DIR"'/'"$TRGT_TABLE_ID"'.'"$SRC_JOB_TYPE_ID"'.denormalize.'"$CURR_DATETIME"'.log'
export RECORD_COUNT_FILE;RECORD_COUNT_FILE="$DW_IN"'/'"$SRC_JOB_ENV"'/'"$TRGT_SUBJECT_AREA"'/'"$TRGT_TABLE_ID"'.record_count.dat.'"$SRC_BATCH_SEQ_NUM"
export WATCH_FILE;WATCH_FILE="$DW_WATCH"'/'"$SRC_JOB_ENV"'/'"$TRGT_ETL_ID"'.'"$SRC_JOB_TYPE"'.'"$SRC_BATCH_SEQ_NUM"'.done'
. ./${_AB_PROXY_DIR}/GDE-Parameters

#+Script Start+  ==================== Edits in this section are preserved.
m_env -v
mkdir -pm 0755 $LOG_FILE_DIR

#+End Script Start+  ====================
# Check that the "mp" program is found correctly on the PATH
case "$_ab_uname" in
  Windows_* )
    _ab_expected_mp=$AB_HOME/bin/mp.exe ;;
  * )
    _ab_expected_mp=$AB_HOME/bin/mp
esac
if [ ! -x "$_ab_expected_mp" ]; then
  print "\n*** ERROR: executable $_ab_expected_mp not found"
  exit 1
fi
_ab_found_mp=$(whence mp)
if [ "$_ab_found_mp" = "" ] || [ "$_ab_found_mp" -ot "$_ab_expected_mp" ] || [ "$_ab_found_mp" -nt "$_ab_expected_mp" ]; then
  if [ "$_ab_found_mp" = "" ]; then
    print "\n*** ERROR: mp not found on PATH"
  else
    case "$_ab_uname" in
      CYGWIN_* )
        _ab_found_mp=`cygpath -m "$_ab_found_mp"` ;;
    esac
    print "\n*** ERROR: Wrong mp found on the PATH: $_ab_found_mp"
    print "           Should be via \$AB_HOME/bin: $_ab_expected_mp"
  fi
  print "\nCheck Setup Script in Host Connections Settings and Script Start in Graph Settings for PATH modifications"
  print "Active PATH=$PATH"
  exit 1
fi
if [ -f "$AB_HOME/bin/ab_catalog_functions.ksh" ]; then . ab_catalog_functions.ksh; fi
mv "${_AB_PROXY_DIR}" "${AB_JOB}"'-single_td_denormalize-ProxyDir'
_AB_PROXY_DIR="${AB_JOB}"'-single_td_denormalize-ProxyDir'
print -r -- 'record string("|") node, timestamp, component, subcomponent, event_type; string("|\n") event_text; end' > "${_AB_PROXY_DIR}"'/Denormalize_Sorted-6.dml'
print -r -- 'record
  string("\n") line;
end;' > "${_AB_PROXY_DIR}"'/Output_log_file-10.dml'
print -r -- 'record
  decimal(" records") rec_cnt = 0;
  string("\n") junk = NULL;
end;' > "${_AB_PROXY_DIR}"'/Redefine_Format_1-11.dml'
print -r -- 'out::rollup(in) =
begin
  out.rec_cnt :: sum(in.rec_cnt);
end;' > "${_AB_PROXY_DIR}"'/Rollup-12.xfr'
print -r -- 'record
  decimal("\n") rec_cnt = 0;
end;' > "${_AB_PROXY_DIR}"'/Rollup-13.dml'

mp job ${AB_JOB}

# Layouts:
mp layout layout1 file:.

# Record Formats (Metadata):
mp metadata metadata1 -file "$SRC_READ_DML"
mp metadata metadata2 -file "$REFORMAT_INPUT_DML"
mp metadata metadata3 -file "$DENORM_INPUT_DML"
mp metadata metadata4 -file "${_AB_PROXY_DIR}"'/Denormalize_Sorted-6.dml'
mp metadata metadata5 -file "$REDEFINE_INPUT_DML"
mp metadata metadata6 -file "$TRGT_INPUT_DML"
mp metadata metadata7 -file "${_AB_PROXY_DIR}"'/Output_log_file-10.dml'
mp metadata metadata8 -file "${_AB_PROXY_DIR}"'/Redefine_Format_1-11.dml'
mp metadata metadata9 -file "${_AB_PROXY_DIR}"'/Rollup-13.dml'

export AB_CATALOG;AB_CATALOG=${AB_CATALOG:-"${XX_CATALOG}"}
# Catalog Usage: Creating temporary catalog using lookup files only
m_rmcatalog -catalog GDE-single_td_denormalize-${AB_JOB}.cat > /dev/null 2>&1
m_mkcatalog -catalog GDE-single_td_denormalize-${AB_JOB}.cat
SAVED_CATALOG="${AB_CATALOG}"
export AB_CATALOG;AB_CATALOG='GDE-single_td_denormalize-'"${AB_JOB}"'.cat'

# Files:
mp ifile Input_File "$INPUT_FILE"
mp ofile Output_File "$OUTPUT_FILE"
mp ifile Output_log_file "$LOG_FILE"
mp ofile Record_Count_File "$RECORD_COUNT_FILE"

# Components in phase 0:
mp reformat-transform Reformat -limit 0 -ramp 0.0 -layout Output_File
mp add-port Reformat.out.out0 ${REFORMAT_TRANS_FILE:+"$REFORMAT_TRANS_FILE"}
mp local-sort Sort "$SORT_KEY" -max-core 100663296 -layout Output_File
mp denormalize Denormalize_Sorted "$SORT_KEY" "$DENORM_TRANS_FILE" -limit 0 -ramp 0.0 -check-sort -layout Output_File
mp logger Gather_Logs "$LOG_FILE" Start End -layout layout1
mp copy Redefine_Format -layout Output_File
mp reformat-transform Custom_Reformat -limit 0 -ramp 0.0 -layout Output_File
mp add-port Custom_Reformat.out.out0 ${TRGT_REFORMAT_TRANS_FILE:+"$TRGT_REFORMAT_TRANS_FILE"}
mp checkpoint 0

# Components in phase 1:
mp select-transform Filter_record_count_rows 'string_index(line, "bytes) written") > 0' -limit 0 -ramp 0.0 -layout Record_Count_File
mp copy Redefine_Format_1 -layout Record_Count_File
mp rollup Rollup '{}' "${_AB_PROXY_DIR}"'/Rollup-12.xfr' -limit 0 -ramp 0.0 -check-sort -layout Record_Count_File
mp checkpoint 1

# Components in phase 2:
mp filter Touch_Watch_File touch $WATCH_FILE -layout layout1

# Flows for Entire Graph:
mp straight-flow Flow_1 Input_File.read Reformat.in -metadata metadata1
mp straight-flow Flow_3 Reformat.out.out0 Sort.in -metadata metadata2
mp straight-flow Flow_4 Sort.out Denormalize_Sorted.in -metadata metadata2
mp fan-in-flow Flow_6 Denormalize_Sorted.log Gather_Logs.in -metadata metadata4
mp straight-flow Flow_2 Denormalize_Sorted.out Redefine_Format.in -metadata metadata3
mp straight-flow Flow_8 Redefine_Format.out Custom_Reformat.in -metadata metadata5
mp straight-flow Flow_9 Custom_Reformat.out.out0 Output_File.write -metadata metadata6
mp straight-flow Flow_20 Output_log_file.read Filter_record_count_rows.in -metadata metadata7
mp straight-flow Flow_7 Filter_record_count_rows.out Redefine_Format_1.in -metadata metadata7
mp straight-flow Flow_10 Redefine_Format_1.out Rollup.in -metadata metadata8
mp straight-flow Flow_23 Rollup.out Record_Count_File.write -metadata metadata9

unset AB_COMM_WAIT
export AB_TRACKING_GRAPH_THUMBPRINT;AB_TRACKING_GRAPH_THUMBPRINT=1128332
mp run
mpjret=$?
unset AB_COMM_WAIT
unset AB_TRACKING_GRAPH_THUMBPRINT
mp reset
m_rmcatalog > /dev/null 2>&1
export XX_CATALOG;XX_CATALOG="${SAVED_CATALOG}"
export AB_CATALOG;AB_CATALOG="${SAVED_CATALOG}"

#+Script End+  ==================== Edits in this section are preserved.
#+End Script End+  ====================

exit $mpjret
