#! /bin/ksh
# Script generated by software licensed from Ab Initio.
# Use and disclosure are subject to Ab Initio confidentiality and license terms.
export AB_HOME;AB_HOME=${AB_HOME:-/usr/local/abinitio-V3-1-4}
export MPOWERHOME;MPOWERHOME="$AB_HOME"
export AB_COMPONENTS;AB_COMPONENTS="$AB_HOME"'/Projects/root/components'
export PATH
typeset _ab_uname=`uname`
case "$_ab_uname" in
Windows_* )
    PATH="$AB_HOME/bin;$PATH" ;;
CYGWIN_* )
    PATH="`cygpath "$AB_HOME"`/bin:/usr/local/bin:/usr/bin:/bin:$PATH" ;;
* )
    PATH="$AB_HOME/bin:$PATH" ;;
esac
unset ENV
export AB_REPORT;AB_REPORT=${AB_REPORT:-'monitor=300 processes scroll=true'}
unset GDE_EXECUTION

export AB_COMPATIBILITY;AB_COMPATIBILITY=3.1.4.4

# Deployed execution script for graph "dw_infra.single_table_td_merge_load", compiled at Thursday, August 24, 2017 16:46:18 using GDE version 3.1.4.1
export AB_JOB;AB_JOB=${AB_JOB_PREFIX:-""}dw_infra_single_table_td_merge_load
# Begin Ab Initio shell utility functions

: ${_ab_uname:=$(uname)}

function __AB_INVOKE_PROJECT
{
  typeset _AB_PROJECT_KSH="$1" ; shift
  typeset _AB_PROJECT_DIR="$1" ; shift
  typeset _AB_DEFINE_OR_EXECUTE="$1" ; shift
  typeset _AB_START_OR_END="$1" ; shift
  # Check that the project exists:
  if [ ! -r "$_AB_PROJECT_KSH" ] ; then
    print -r -u2 Warning: Cannot find common sandbox script: "$_AB_PROJECT_KSH"
    if [ ! -z "${_AB_CALLING_PROJECT:=}" ] ; then
      print -r -u2 Please check the common sandbox settings for the calling project: "$_AB_CALLING_PROJECT"
    fi
  fi
  if [ $# -gt 0 ] ; then
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END"  "$@"
  else
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END" 
  fi;
}

function __AB_DOTIT
{
  if [ $# -gt 0 ] ; then
    .  "$@"
  fi
}

function __AB_QUOTEIT {
  typeset queue q qq qed lotsaqs s trail
  q="'"
  qq='"'
  if [ X"$1" = X"" ] ; then
    print $q$q
    return
  fi
  lotsaqs=${q}${qq}${q}${qq}${q}
  if [ ${#1} -ge 10000 ]; then
    print -r -- "$1" | sed "s/$q/$lotsaqs/g; 1s/^/$q/; \$s/\$/$q/"
  else
    queue=${1%$q}
    if [ X"$queue" != X"$1" ] ; then
      trail="${qq}${q}${qq}" 
    else 
      trail=""
    fi
    oldIFS="$IFS"
    IFS=$q
    set -- $queue
    IFS="$oldIFS"
    print -rn "$q$1"
    shift
    for s; do
      print -rn "$lotsaqs$s"
    done
    print -r $q$trail
  fi
}

function __AB_dirname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        typeset d='' p="$1"
        # Strip drive letter colon, if present, and put it into d.
        case $p in
        [A-Za-z]:* )
            d=${p%%:*}:
            p=${p#??}
            ;;
        esac
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*[/\\] )
                p=${p%[/\\]} ;;
            * )
                break ;;
            esac
        done
        if [[ "$p" = ?*[/\\]* ]] ; then
            print -r -- "$d${p%[/\\]*}"
        elif [[ "$p" = [/\\]* ]] ; then
            print "$d/"
        else
            print "$d." 
        fi
        ;;
    * ) # Unix
        typeset p="$1"
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*/ )
                p="${p%/}" ;;
            * )
                break ;;
            esac
        done
        case $p in
        ?*/* )
            print -r -- "${p%/*}" ;;
        /* )
            print / ;;
        * )
            print . ;;
        esac
        ;;
    esac
}

function __AB_concat_pathname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        # Does not handle all cases of concatenating partially absolute
        # pathnames, those with only one of a drive letter or an initial
        # separator.
        case $2 in
        [/\\]* | [A-Za-z]:* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | *[/\\] )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    * ) # Unix
        case $2 in
        /* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | */ )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    esac
}

function __AB_COND {
if [ X"$1" = X0  -o X"$1" = Xfalse -o X"$1" = XFalse -o X"$1" = XF -o X"$1" = Xf ] ; then
  print "0"
else
  print "1"
fi
}

# End Ab Initio shell utility functions
export AB_GRAPH_NAME;AB_GRAPH_NAME=dw_infra_single_table_td_merge_load

# Host Setup Commands:
. /dw/etl/mstr_cfg/etlenv.setup
_AB_PROXY_DIR="$(pwd)"/dw_infra.single_table_td_merge_load-ProxyDir-$$
rm -rf "${_AB_PROXY_DIR}"
mkdir "${_AB_PROXY_DIR}"
print -r -- "" > "${_AB_PROXY_DIR}"'/GDE-Parameters'
function __AB_CLEANUP_PROXY_FILES
{
   rm -rf "${_AB_PROXY_DIR}"
   rm -rf "${AB_EXTERNAL_PROXY_DIR}"
   return
}
trap '__AB_CLEANUP_PROXY_FILES' EXIT
# Work around pdksh bug: the EXIT handler is not executed upon a signal.
trap '_AB_status=$?; __AB_CLEANUP_PROXY_FILES; exit $_AB_status' HUP INT QUIT TERM
if [ $# -gt 0 -a X"$1" = X"-help" ]; then
print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
exit 1
fi

# Command Line Processing
function _AB_PARSE_ARGUMENTS {
   unset ETL_ID
   unset JOB_ENV
   unset INPUT_DML_FILENAME
   unset INPUT_FILE_LIST
   unset UOW_FROM
   unset UOW_TO
   _ab_index_var=0
   while [ $# -gt 0 ]; do
   _ab_kwd="${1}"
   let _ab_index_var=_ab_index_var+1
   shift
   case ${_ab_kwd} in
   # ETL_ID - subject_area.table_id
     -ETL_ID )
      export ETL_ID;      ETL_ID="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   # JOB_ENV - primary or secondary
     -JOB_ENV )
      export JOB_ENV;      JOB_ENV="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   # INPUT_DML_FILENAME - default is source table dml file
     -INPUT_DML_FILENAME )
      export INPUT_DML_FILENAME;      INPUT_DML_FILENAME="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -INPUT_FILE_LIST )
      export INPUT_FILE_LIST;      INPUT_FILE_LIST="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -UOW_FROM )
      export UOW_FROM;      UOW_FROM="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -UOW_TO )
      export UOW_TO;      UOW_TO="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -CFG_DBC_PARAM )
      CFG_DBC_PARAM="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DB_NAME )
      DB_NAME="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DW_SA_LOG )
      export DW_SA_LOG;      DW_SA_LOG="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DEFAULT_DB )
      export DEFAULT_DB;      DEFAULT_DB="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -PARALLEL_INPUT_FILE )
      export PARALLEL_INPUT_FILE;      PARALLEL_INPUT_FILE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -FLOAD_ERRLIMIT )
      export FLOAD_ERRLIMIT;      FLOAD_ERRLIMIT="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -FORCE_FLOAD )
      export FORCE_FLOAD;      FORCE_FLOAD="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -FLOAD_RECORD_COUNT )
      export FLOAD_RECORD_COUNT;      FLOAD_RECORD_COUNT="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -QUERY_BAND_STRING )
      export QUERY_BAND_STRING;      QUERY_BAND_STRING="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   * )
      if [ X"${_AB_USED_ARGUMENTS[_ab_index_var]}" != X1 ]; then
         print -r -- 'Unexpected command line argument found: '"${_ab_kwd}"
         print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
         exit 1
      fi
   esac
   done
}
if [ $# -gt 0 ]; then
   _AB_PARSE_ARGUMENTS "$@"
else
   _AB_PARSE_ARGUMENTS
fi

if [ X"${ETL_ID:-}" = X"" ]; then
   print -r -- 'Required parameter ETL_ID undefined'
   print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${JOB_ENV:-}" = X"" ]; then
   print -r -- 'Required parameter JOB_ENV undefined'
   print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${INPUT_DML_FILENAME:-}" = X"" ]; then
   print -r -- 'Required parameter INPUT_DML_FILENAME undefined'
   print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${INPUT_FILE_LIST:-}" = X"" ]; then
   print -r -- 'Required parameter INPUT_FILE_LIST undefined'
   print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${UOW_FROM:-}" = X"" ]; then
   print -r -- 'Required parameter UOW_FROM undefined'
   print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${UOW_TO:-}" = X"" ]; then
   print -r -- 'Required parameter UOW_TO undefined'
   print -r -- 'Usage: dw_infra.single_table_td_merge_load.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -INPUT_DML_FILENAME <INPUT_DML_FILENAME> -INPUT_FILE_LIST <INPUT_FILE_LIST> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi
export UOW_DATE;UOW_DATE=$(print $UOW_TO | cut -c1-8)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UOW_DATE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export UOW_APPEND;UOW_APPEND=$(print ".$UOW_TO")
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UOW_APPEND of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export JOB_TYPE;JOB_TYPE=merge
export DW_CFG;DW_CFG="$DW_CFG"
export DW_DML;DW_DML="$DW_DML"
export DW_EXE;DW_EXE="$DW_EXE"
export ETL_CFG_FILE;ETL_CFG_FILE="$DW_CFG"'/'"$ETL_ID"'.cfg'
export SUBJECT_AREA;SUBJECT_AREA=${ETL_ID%%.*}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter SUBJECT_AREA of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export TABLE_ID;TABLE_ID=${ETL_ID##*.}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TABLE_ID of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export AB_JOB;AB_JOB=$(if [ $ETL_ENV ]
then
   print $AB_JOB.$ETL_ID.$ETL_ENV.$JOB_ENV
else
   print $AB_JOB.$ETL_ID.$JOB_ENV
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter AB_JOB of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
CFG_DBC_PARAM=$(JOB_ENV_UPPER=$(print $JOB_ENV | tr [:lower:] [:upper:]) 
  eval print ${JOB_ENV_UPPER}_DBC)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CFG_DBC_PARAM of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export DEFAULT_DB_NAME;DEFAULT_DB_NAME=$(JOB_ENV_UPPER=$(print $JOB_ENV | tr [:lower:] [:upper:])
 eval print teradata_\$DW_${JOB_ENV_UPPER}_DB)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DEFAULT_DB_NAME of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
DB_NAME=$(grep "^$CFG_DBC_PARAM\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-$DEFAULT_DB_NAME})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DB_NAME of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export AB_IDB_CONFIG;AB_IDB_CONFIG="${DB_NAME}"'.dbc'
export DW_SA_ARC;DW_SA_ARC="$DW_ARC"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export DW_SA_DAT;DW_SA_DAT="$DW_DAT"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export DW_SA_IN;DW_SA_IN="$DW_IN"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export DW_SA_LOG;DW_SA_LOG=${DW_SA_LOG:-$DW_LOG/$JOB_ENV/$SUBJECT_AREA}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DW_SA_LOG of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export DW_SA_TMP;DW_SA_TMP="$DW_TMP"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export DW_SA_TMP_LOCAL;DW_SA_TMP_LOCAL="$DW_TMP_LOCAL"'/'"$JOB_ENV"'/'"$SUBJECT_AREA"
export STAGE_DB;STAGE_DB=$(grep "^TD_MERGE_STAGE_DB\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter STAGE_DB of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export STAGE_TABLE;STAGE_TABLE=$(grep "^TD_MERGE_STAGE_TABLE\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter STAGE_TABLE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export STAGE_TABLE27;STAGE_TABLE27=${STAGE_TABLE%${STAGE_TABLE#???????????????????????????}}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter STAGE_TABLE27 of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export DEFAULT_DB;DEFAULT_DB="$STAGE_DB"
export LOG_TABLE;LOG_TABLE=${STAGE_TABLE27:-${STAGE_TABLE}}_L
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOG_TABLE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export ERROR_TABLE;ERROR_TABLE=${STAGE_TABLE27:-${STAGE_TABLE}}_E
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ERROR_TABLE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export WORK_TABLE;WORK_TABLE=${STAGE_TABLE27:-${STAGE_TABLE}}_W
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter WORK_TABLE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export FILE_DATETIME;FILE_DATETIME=${CURR_DATETIME:-$(date '+%Y%m%d-%H%M%S')}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FILE_DATETIME of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_LOAD_TABLE_CHECK_LOGFILE;UTILITY_LOAD_TABLE_CHECK_LOGFILE="$DW_SA_LOG"'/'"$TABLE_ID"'.mrg.utility_load_table_check'"$UOW_APPEND"'.'"$FILE_DATETIME"'.log'
export PARALLEL_INPUT_FILE;PARALLEL_INPUT_FILE=$(PARALLEL_INPUT_FILE_TMP=""
  while read fn
  do
    PARALLEL_INPUT_FILE_TMP="$PARALLEL_INPUT_FILE_TMP $fn"
  done < $INPUT_FILE_LIST

  print $PARALLEL_INPUT_FILE_TMP
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter PARALLEL_INPUT_FILE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export INPUT_DML;INPUT_DML="$DW_DML"'/'"$INPUT_DML_FILENAME"
export CNDTL_REFORMAT;CNDTL_REFORMAT=$(grep "^TD_MERGE_CNDTL_REFORMAT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CNDTL_REFORMAT of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export REFORMAT_TRANS_FILE;REFORMAT_TRANS_FILE="$DW_XFR"'/'"$ETL_ID"'.merge.td.reformat.xfr'
export OUTPUT_TABLE_LAYOUT;OUTPUT_TABLE_LAYOUT="$DW_TMP"
export OUTPUT_DML;OUTPUT_DML=$(if (($CNDTL_REFORMAT))
then
   print $DW_DML/$ETL_ID.merge.td.write.dml
else
   print $INPUT_DML
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter OUTPUT_DML of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export LOGTABLE_DATABASE;LOGTABLE_DATABASE=$(m_db print $AB_IDB_CONFIG -value logtable_database)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOGTABLE_DATABASE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export ERRORTABLES_DATABASE;ERRORTABLES_DATABASE=$(m_db print $AB_IDB_CONFIG -value errortables_database)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ERRORTABLES_DATABASE of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_LOAD_SESSIONS;FLOAD_LOAD_SESSIONS=$(grep "^TD_MERGE_FLOAD_LOAD_SESSIONS\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; 
if [[ $VALUE -ge 24 ]]
then
print $VALUE
else
print 24
fi
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_LOAD_SESSIONS of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_SLEEP;FLOAD_SLEEP=$(grep "^TD_MERGE_FLOAD_SLEEP\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-6})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_SLEEP of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
FLOAD_TENACITY=$(grep "^TD_MERGE_FLOAD_TENACITY\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-4})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_TENACITY of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export LOAD_ERRLIMIT;LOAD_ERRLIMIT=$(grep "^TD_MERGE_LOAD_ERRLIMIT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOAD_ERRLIMIT of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_ERRLIMIT;FLOAD_ERRLIMIT=$(integer FLOAD_ERRLIMIT_TMP=$LOAD_ERRLIMIT; ((FLOAD_ERRLIMIT_TMP+=1)); print $FLOAD_ERRLIMIT_TMP)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_ERRLIMIT of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export RECORD_COUNT;RECORD_COUNT=$(if [[ -f $UOW_REC_CNT_IN_DIR/$TABLE_ID.record_count.dat ]]
  then
    cat $UOW_REC_CNT_IN_DIR/$TABLE_ID.record_count.dat | head -1
  else
    print 20000
  fi
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter RECORD_COUNT of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export FORCE_FLOAD;FORCE_FLOAD=$(grep "^TD_MERGE_FORCE_FLOAD\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FORCE_FLOAD of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_RECORD_COUNT_TMP;FLOAD_RECORD_COUNT_TMP=$(grep "^TD_MERGE_FLOAD_RECORD_COUNT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print -- $VALUE)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_RECORD_COUNT_TMP of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export FLOAD_RECORD_COUNT;FLOAD_RECORD_COUNT=$(if [[ $FORCE_FLOAD -ne 1 ]]
     then
         if [[ $FLOAD_RECORD_COUNT_TMP -ge 20000 ]]
         then
             print $FLOAD_RECORD_COUNT_TMP
         else
             print 20000
         fi
     else
         print -- -1
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FLOAD_RECORD_COUNT of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export CNDTL_FLOAD;CNDTL_FLOAD=$(($RECORD_COUNT>=$FLOAD_RECORD_COUNT))
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CNDTL_FLOAD of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export USE_API;USE_API=$(if [[ $CNDTL_FLOAD -ne 1 ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_API of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export USE_FLOAD;USE_FLOAD=$(if [[ CNDTL_FLOAD -eq 1 ]]
     then
         print 1
     else
         print 0
  fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_FLOAD of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export LOAD_LOGFILE;LOAD_LOGFILE="$DW_SA_TMP_LOCAL"'/'"$TABLE_ID"'.mrg.utility_load'"$UOW_APPEND"'.'"$FILE_DATETIME"'.log'
export LOAD_REJFILE;LOAD_REJFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.mrg.utility_load.rej'
export LOAD_ERRFILE;LOAD_ERRFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.mrg.utility_load.err'
export XFORM_REJLIMIT;XFORM_REJLIMIT=$(grep "^TD_MERGE_XFORM_REJLIMIT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter XFORM_REJLIMIT of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export XFORM_REJRAMP;XFORM_REJRAMP=$(grep "^TD_MERGE_XFORM_REJRAMP\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; print ${VALUE:-0.0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter XFORM_REJRAMP of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
export XFORM_REJFILE;XFORM_REJFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.mrg.reformat.rej'
export XFORM_ERRFILE;XFORM_ERRFILE="$DW_SA_TMP"'/'"$TABLE_ID"'.mrg.reformat.err'
export OUTPUT_TABLE_LOGFILE;OUTPUT_TABLE_LOGFILE="$DW_SA_LOG"'/'"$TABLE_ID"'.mrg.output_table'"$UOW_APPEND"'.'"$FILE_DATETIME"'.log'
export UTILITY_LOAD_LOGFILE_CHECK_ERRFILE;UTILITY_LOAD_LOGFILE_CHECK_ERRFILE="$DW_SA_LOG"'/'"$TABLE_ID"'.mrg.utility_load_logfile_check'"$UOW_APPEND"'.'"$FILE_DATETIME"'.err'
export QUERY_BAND_STRING;QUERY_BAND_STRING=$(
grep "^FLOAD_QUERY_BAND\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; 
if [[ "X"$VALUE != "X" ]]
then
print "$VALUE$QUERY_BAND_STRING"
else
print "$QUERY_BAND_STRING"
fi
)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter QUERY_BAND_STRING of dw_infra_single_table_td_merge_load', interpretation 'shell'
   exit $mpjret
fi
. "${_AB_PROXY_DIR}"'/GDE-Parameters'

#+Script Start+  ==================== 
m_env -v

#+End Script Start+  ====================
# Check that the "mp" program is found correctly on the PATH
case "$_ab_uname" in
  Windows_* )
    _ab_expected_mp=$AB_HOME/bin/mp.exe ;;
  * )
    _ab_expected_mp=$AB_HOME/bin/mp
esac
if [ ! -x "$_ab_expected_mp" ]; then
  print "\n*** ERROR: executable $_ab_expected_mp not found"
  exit 1
fi
_ab_found_mp=$(whence mp)
if [ "$_ab_found_mp" = "" ] || [ "$_ab_found_mp" -ot "$_ab_expected_mp" ] || [ "$_ab_found_mp" -nt "$_ab_expected_mp" ]; then
  if [ "$_ab_found_mp" = "" ]; then
    print "\n*** ERROR: mp not found on PATH"
  else
    case "$_ab_uname" in
      CYGWIN_* )
        _ab_found_mp=`cygpath -m "$_ab_found_mp"` ;;
    esac
    print "\n*** ERROR: Wrong mp found on the PATH: $_ab_found_mp"
    print "           Should be via \$AB_HOME/bin: $_ab_expected_mp"
  fi
  print "\nCheck Setup Script in Host Connections Settings and Script Start in Graph Settings for PATH modifications"
  print "Active PATH=$PATH"
  exit 1
fi
if [ -f "$AB_HOME/bin/ab_catalog_functions.ksh" ]; then . ab_catalog_functions.ksh; fi
mv "${_AB_PROXY_DIR}" "$(pwd)"/"${AB_JOB}"'-dw_infra.single_table_td_merge_load-ProxyDir'
_AB_PROXY_DIR="$(pwd)"/"${AB_JOB}"'-dw_infra.single_table_td_merge_load-ProxyDir'
print -r -- 'string('"'"'\n'"'"')' > "${_AB_PROXY_DIR}"'/Load_Reformat-4.dml'
print -r -- 'record string("|") node, timestamp, component, subcomponent, event_type; string("|\n") event_text; end' > "${_AB_PROXY_DIR}"'/Output_Table_API-6.dml'

mp job ${AB_JOB}

# Layouts:
mp layout layout1 "$DW_TMP"
mp layout layout2 $OUTPUT_TABLE_LAYOUT
mp layout layout3 file:.

# Record Formats (Metadata):
mp metadata metadata1 -file "$INPUT_DML"
mp metadata metadata2 -file "$OUTPUT_DML"
mp metadata metadata3 -file "${_AB_PROXY_DIR}"'/Load_Reformat-4.dml'
mp metadata metadata4 -file "${_AB_PROXY_DIR}"'/Output_Table_API-6.dml'

export AB_CATALOG;AB_CATALOG=${AB_CATALOG:-"${XX_CATALOG}"}
# Catalog Usage: Creating temporary catalog using lookup files only
m_rmcatalog -catalog GDE-dw_infra_single_table_td_merge_load-${AB_JOB}.cat > /dev/null 2>&1
m_mkcatalog -catalog GDE-dw_infra_single_table_td_merge_load-${AB_JOB}.cat
SAVED_CATALOG="${AB_CATALOG}"
export AB_CATALOG;AB_CATALOG='GDE-dw_infra_single_table_td_merge_load-'"${AB_JOB}"'.cat'
# 
# Initialize condition variables to user-specified conditions
# 
AB_USERCOND_dw_infra_single_table_td_merge_load=1
AB_IS_LIVE_dw_infra_single_table_td_merge_load=1
AB_USERCOND_Input_File=1
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'AB_USERCOND_Input_File', interpretation 'shell'
   exit $mpjret
fi
AB_IS_LIVE_Input_File=1
AB_HAS_DATA_Flow_3=1
AB_USERCOND_Concatenate=1
AB_IS_LIVE_Concatenate=1
AB_HAS_DATA_Flow_5=1
AB_USERCOND_Retain_Flow_to_Flow="$CNDTL_PARTITION"
AB_USERCOND_Retain_Flow_to_Flow=$(__AB_COND "${AB_USERCOND_Retain_Flow_to_Flow}")
AB_IS_LIVE_Retain_Flow_to_Flow=1
AB_HAS_DATA_Flow_6=1
AB_USERCOND_Load_Reformat="$CNDTL_REFORMAT"
AB_USERCOND_Load_Reformat=$(__AB_COND "${AB_USERCOND_Load_Reformat}")
AB_IS_LIVE_Load_Reformat=1
AB_HAS_DATA_Flow_1=1
AB_HAS_DATA_Flow_13=1
AB_HAS_DATA_Flow_33=1
AB_USERCOND_Replicate=0
AB_IS_LIVE_Replicate=1
AB_HAS_DATA_Flow_15=1
AB_HAS_DATA_Flow_14=1
AB_USERCOND_Output_Table_API__table_="$USE_API"
AB_USERCOND_Output_Table_API__table_=$(__AB_COND "${AB_USERCOND_Output_Table_API__table_}")
AB_IS_LIVE_Output_Table_API__table_=1
AB_HAS_DATA_Flow_8=1
AB_HAS_DATA_Flow_31=1
AB_HAS_DATA_Flow_4=1
AB_USERCOND_Output_Table_Fastload__table_="$USE_FLOAD"
AB_USERCOND_Output_Table_Fastload__table_=$(__AB_COND "${AB_USERCOND_Output_Table_Fastload__table_}")
AB_IS_LIVE_Output_Table_Fastload__table_=1
AB_HAS_DATA_Flow_7=1
AB_HAS_DATA_Flow_25=1
AB_HAS_DATA_Flow_2=1
AB_USERCOND_Reject_Error_Log_Files=1
AB_IS_LIVE_Reject_Error_Log_Files=1
AB_USERCOND_Reject_Error_Log_Files_Error_File=1
AB_IS_LIVE_Reject_Error_Log_Files_Error_File=1
AB_USERCOND_Reject_Error_Log_Files_Gather_Logs=1
AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs=1
AB_USERCOND_Reject_Error_Log_Files_Reject_File=1
AB_IS_LIVE_Reject_Error_Log_Files_Reject_File=1
AB_USERCOND_XForm_Error_File="$CNDTL_REFORMAT"
AB_USERCOND_XForm_Error_File=$(__AB_COND "${AB_USERCOND_XForm_Error_File}")
AB_IS_LIVE_XForm_Error_File=1
AB_USERCOND_XForm_Reject_File="$CNDTL_REFORMAT"
AB_USERCOND_XForm_Reject_File=$(__AB_COND "${AB_USERCOND_XForm_Reject_File}")
AB_IS_LIVE_XForm_Reject_File=1
AB_USERCOND_Utility_Load_Table_Check_KSH=1
AB_IS_LIVE_Utility_Load_Table_Check_KSH=1
AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits="$USE_FLOAD"
AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits=$(__AB_COND "${AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits}")
AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits=1
AB_USERCOND_chmod_LOAD_LOGFILE="$USE_FLOAD"
AB_USERCOND_chmod_LOAD_LOGFILE=$(__AB_COND "${AB_USERCOND_chmod_LOAD_LOGFILE}")
AB_IS_LIVE_chmod_LOAD_LOGFILE=1
# 
# Compute condition variables by considering the conditions of neighboring components
# 
done=false
while [ $done = false ] ; do
   done=true
   Temp="${AB_HAS_DATA_Flow_3}"
   let AB_HAS_DATA_Flow_3="(AB_IS_LIVE_Concatenate) || (AB_HAS_DATA_Flow_5)"
   if [ X"${AB_HAS_DATA_Flow_3}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Concatenate}"
   let AB_IS_LIVE_Concatenate="(AB_HAS_DATA_Flow_3) && (AB_HAS_DATA_Flow_5)"
   if [ X"${AB_IS_LIVE_Concatenate}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_5}"
   let AB_HAS_DATA_Flow_5="((AB_IS_LIVE_Concatenate) || (AB_HAS_DATA_Flow_3)) && ((AB_IS_LIVE_Retain_Flow_to_Flow) || (AB_HAS_DATA_Flow_6))"
   if [ X"${AB_HAS_DATA_Flow_5}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Retain_Flow_to_Flow}"
   let AB_IS_LIVE_Retain_Flow_to_Flow="(AB_HAS_DATA_Flow_5) && ((AB_USERCOND_Retain_Flow_to_Flow) || ((((AB_HAS_DATA_Flow_5) > 1)) || (((AB_HAS_DATA_Flow_6) > 1))))"
   if [ X"${AB_IS_LIVE_Retain_Flow_to_Flow}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_6}"
   let AB_HAS_DATA_Flow_6="((AB_IS_LIVE_Retain_Flow_to_Flow) || (AB_HAS_DATA_Flow_5)) && ((AB_IS_LIVE_Load_Reformat) || (AB_HAS_DATA_Flow_1))"
   if [ X"${AB_HAS_DATA_Flow_6}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Load_Reformat}"
   let AB_IS_LIVE_Load_Reformat="((AB_HAS_DATA_Flow_6) && (((AB_HAS_DATA_Flow_1) != 0))) && ((AB_USERCOND_Load_Reformat) || ((((AB_HAS_DATA_Flow_6) > 1)) || (((AB_HAS_DATA_Flow_1) > 1))))"
   if [ X"${AB_IS_LIVE_Load_Reformat}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_1}"
   let AB_HAS_DATA_Flow_1="((AB_IS_LIVE_Load_Reformat) || (AB_HAS_DATA_Flow_6)) && ((AB_IS_LIVE_Replicate) || ((AB_HAS_DATA_Flow_15) || (AB_HAS_DATA_Flow_14)))"
   if [ X"${AB_HAS_DATA_Flow_1}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_13}"
   let AB_HAS_DATA_Flow_13="((AB_IS_LIVE_Load_Reformat) && (AB_IS_LIVE_XForm_Reject_File)) && (AB_HAS_DATA_Flow_1)"
   if [ X"${AB_HAS_DATA_Flow_13}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_33}"
   let AB_HAS_DATA_Flow_33="((AB_IS_LIVE_Load_Reformat) && (AB_IS_LIVE_XForm_Error_File)) && (AB_HAS_DATA_Flow_1)"
   if [ X"${AB_HAS_DATA_Flow_33}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Replicate}"
   let AB_IS_LIVE_Replicate="(AB_HAS_DATA_Flow_1) && ((((AB_HAS_DATA_Flow_1) > 1)) || (((AB_HAS_DATA_Flow_15+AB_HAS_DATA_Flow_14) > 1)))"
   if [ X"${AB_IS_LIVE_Replicate}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_15}"
   let AB_HAS_DATA_Flow_15="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_API__table_)"
   if [ X"${AB_HAS_DATA_Flow_15}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_14}"
   let AB_HAS_DATA_Flow_14="((AB_IS_LIVE_Replicate) || (AB_HAS_DATA_Flow_1)) && (AB_IS_LIVE_Output_Table_Fastload__table_)"
   if [ X"${AB_HAS_DATA_Flow_14}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_API__table_}"
   let AB_IS_LIVE_Output_Table_API__table_="(AB_HAS_DATA_Flow_15) && (AB_USERCOND_Output_Table_API__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_API__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_8}"
   let AB_HAS_DATA_Flow_8="(AB_IS_LIVE_Output_Table_API__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_8}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_31}"
   let AB_HAS_DATA_Flow_31="(AB_IS_LIVE_Output_Table_API__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_31}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_4}"
   let AB_HAS_DATA_Flow_4="(AB_IS_LIVE_Output_Table_API__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_4}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Output_Table_Fastload__table_}"
   let AB_IS_LIVE_Output_Table_Fastload__table_="(AB_HAS_DATA_Flow_14) && (AB_USERCOND_Output_Table_Fastload__table_)"
   if [ X"${AB_IS_LIVE_Output_Table_Fastload__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_7}"
   let AB_HAS_DATA_Flow_7="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Reject_File)"
   if [ X"${AB_HAS_DATA_Flow_7}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_25}"
   let AB_HAS_DATA_Flow_25="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Error_File)"
   if [ X"${AB_HAS_DATA_Flow_25}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_2}"
   let AB_HAS_DATA_Flow_2="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs)"
   if [ X"${AB_HAS_DATA_Flow_2}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}"
   let AB_IS_LIVE_Reject_Error_Log_Files_Error_File="(AB_HAS_DATA_Flow_25) || (AB_HAS_DATA_Flow_31)"
   if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}"
   let AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs="(AB_HAS_DATA_Flow_2) || (AB_HAS_DATA_Flow_4)"
   if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}"
   let AB_IS_LIVE_Reject_Error_Log_Files_Reject_File="(AB_HAS_DATA_Flow_7) || (AB_HAS_DATA_Flow_8)"
   if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_XForm_Error_File}"
   let AB_IS_LIVE_XForm_Error_File="(AB_HAS_DATA_Flow_33) && (AB_USERCOND_XForm_Error_File)"
   if [ X"${AB_IS_LIVE_XForm_Error_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_XForm_Reject_File}"
   let AB_IS_LIVE_XForm_Reject_File="(AB_HAS_DATA_Flow_13) && (AB_USERCOND_XForm_Reject_File)"
   if [ X"${AB_IS_LIVE_XForm_Reject_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}"
   let AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits="AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits"
   if [ X"${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_chmod_LOAD_LOGFILE}"
   let AB_IS_LIVE_chmod_LOAD_LOGFILE="AB_USERCOND_chmod_LOAD_LOGFILE"
   if [ X"${AB_IS_LIVE_chmod_LOAD_LOGFILE}" != X"$Temp" ]; then
      done=false
   fi
done
# 
if [ X"${AB_VERBOSE_CONDITIONS}" != X"" ]; then
   # 
   # echo condition variables
   # 
   print -r -- 'AB_USERCOND_dw_infra_single_table_td_merge_load=1'
   print -r -- 'AB_IS_LIVE_dw_infra_single_table_td_merge_load=1'
   print -r -- 'AB_USERCOND_Input_File=1'
   print -r -- 'AB_IS_LIVE_Input_File=1'
   print -r -- 'AB_HAS_DATA_Flow_3='"${AB_HAS_DATA_Flow_3}"
   print -r -- 'AB_USERCOND_Concatenate=1'
   print -r -- 'AB_IS_LIVE_Concatenate='"${AB_IS_LIVE_Concatenate}"
   print -r -- 'AB_HAS_DATA_Flow_5='"${AB_HAS_DATA_Flow_5}"
   print -r -- 'AB_USERCOND_Retain_Flow_to_Flow='"${AB_USERCOND_Retain_Flow_to_Flow}"
   print -r -- 'AB_IS_LIVE_Retain_Flow_to_Flow='"${AB_IS_LIVE_Retain_Flow_to_Flow}"
   print -r -- 'AB_HAS_DATA_Flow_6='"${AB_HAS_DATA_Flow_6}"
   print -r -- 'AB_USERCOND_Load_Reformat='"${AB_USERCOND_Load_Reformat}"
   print -r -- 'AB_IS_LIVE_Load_Reformat='"${AB_IS_LIVE_Load_Reformat}"
   print -r -- 'AB_HAS_DATA_Flow_1='"${AB_HAS_DATA_Flow_1}"
   print -r -- 'AB_HAS_DATA_Flow_13='"${AB_HAS_DATA_Flow_13}"
   print -r -- 'AB_HAS_DATA_Flow_33='"${AB_HAS_DATA_Flow_33}"
   print -r -- 'AB_USERCOND_Replicate=0'
   print -r -- 'AB_IS_LIVE_Replicate='"${AB_IS_LIVE_Replicate}"
   print -r -- 'AB_HAS_DATA_Flow_15='"${AB_HAS_DATA_Flow_15}"
   print -r -- 'AB_HAS_DATA_Flow_14='"${AB_HAS_DATA_Flow_14}"
   print -r -- 'AB_USERCOND_Output_Table_API__table_='"${AB_USERCOND_Output_Table_API__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_API__table_='"${AB_IS_LIVE_Output_Table_API__table_}"
   print -r -- 'AB_HAS_DATA_Flow_8='"${AB_HAS_DATA_Flow_8}"
   print -r -- 'AB_HAS_DATA_Flow_31='"${AB_HAS_DATA_Flow_31}"
   print -r -- 'AB_HAS_DATA_Flow_4='"${AB_HAS_DATA_Flow_4}"
   print -r -- 'AB_USERCOND_Output_Table_Fastload__table_='"${AB_USERCOND_Output_Table_Fastload__table_}"
   print -r -- 'AB_IS_LIVE_Output_Table_Fastload__table_='"${AB_IS_LIVE_Output_Table_Fastload__table_}"
   print -r -- 'AB_HAS_DATA_Flow_7='"${AB_HAS_DATA_Flow_7}"
   print -r -- 'AB_HAS_DATA_Flow_25='"${AB_HAS_DATA_Flow_25}"
   print -r -- 'AB_HAS_DATA_Flow_2='"${AB_HAS_DATA_Flow_2}"
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files=1'
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files_Error_File=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files_Error_File='"${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}"
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files_Gather_Logs=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs='"${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}"
   print -r -- 'AB_USERCOND_Reject_Error_Log_Files_Reject_File=1'
   print -r -- 'AB_IS_LIVE_Reject_Error_Log_Files_Reject_File='"${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}"
   print -r -- 'AB_USERCOND_XForm_Error_File='"${AB_USERCOND_XForm_Error_File}"
   print -r -- 'AB_IS_LIVE_XForm_Error_File='"${AB_IS_LIVE_XForm_Error_File}"
   print -r -- 'AB_USERCOND_XForm_Reject_File='"${AB_USERCOND_XForm_Reject_File}"
   print -r -- 'AB_IS_LIVE_XForm_Reject_File='"${AB_IS_LIVE_XForm_Reject_File}"
   print -r -- 'AB_USERCOND_Utility_Load_Table_Check_KSH=1'
   print -r -- 'AB_IS_LIVE_Utility_Load_Table_Check_KSH=1'
   print -r -- 'AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits='"${AB_USERCOND_check_LOAD_LOGFILE_for_abnormal_exits}"
   print -r -- 'AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits='"${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}"
   print -r -- 'AB_USERCOND_chmod_LOAD_LOGFILE='"${AB_USERCOND_chmod_LOAD_LOGFILE}"
   print -r -- 'AB_IS_LIVE_chmod_LOAD_LOGFILE='"${AB_IS_LIVE_chmod_LOAD_LOGFILE}"
fi

# Files:
mp ifile Input_File $PARALLEL_INPUT_FILE
AB_PORT_Input_File_read=Input_File.read
AB_METADATA_Input_File_read=' -metadata metadata1'

# Components in phase 0:
if [ X"${AB_IS_LIVE_Concatenate}" != X0 ]; then
   mp concat Concatenate -layout Input_File
   AB_PORT_Concatenate_out=Concatenate.out
   AB_METADATA_Concatenate_out=' -metadata metadata1'
else
   AB_PORT_Concatenate_out="${AB_PORT_Input_File_read}"
   AB_METADATA_Concatenate_out="${AB_METADATA_Input_File_read}"
   :
fi
mp filter Utility_Load_Table_Check_KSH $DW_EXE/utility_load_table_check.ksh -layout layout1
mp phase 0

# Components in phase 1:
if [ X"${AB_IS_LIVE_Retain_Flow_to_Flow}" != X0 ]; then
   mp broadcast Retain_Flow_to_Flow -layout layout2
   AB_PORT_Retain_Flow_to_Flow_out=Retain_Flow_to_Flow.out
   AB_METADATA_Retain_Flow_to_Flow_out=' -metadata metadata1'
else
   AB_PORT_Retain_Flow_to_Flow_out="${AB_PORT_Concatenate_out}"
   AB_METADATA_Retain_Flow_to_Flow_out="${AB_METADATA_Concatenate_out}"
   :
fi
if [ X"${AB_IS_LIVE_Load_Reformat}" != X0 ]; then
   mp reformat-transform Load_Reformat -limit "$XFORM_REJLIMIT" -ramp "$XFORM_REJRAMP" -layout layout2
   let AB_DO_ADD_PORT="AB_HAS_DATA_Flow_1"
   if [ X"${AB_DO_ADD_PORT}" != X0 ]; then
      mp add-port Load_Reformat.out.out0 ${REFORMAT_TRANS_FILE:+"$REFORMAT_TRANS_FILE"}
   fi
   AB_PORT_Load_Reformat_out_out0=Load_Reformat.out.out0
   AB_METADATA_Load_Reformat_out_out0=' -metadata metadata2'
   AB_PORT_Load_Reformat_reject_out0=Load_Reformat.reject.out0
   AB_METADATA_Load_Reformat_reject_out0=' -metadata metadata1'
   AB_PORT_Load_Reformat_error_out0=Load_Reformat.error.out0
   AB_METADATA_Load_Reformat_error_out0=' -metadata metadata3'
else
   AB_PORT_Load_Reformat_out_out0="${AB_PORT_Retain_Flow_to_Flow_out}"
   AB_METADATA_Load_Reformat_out_out0="${AB_METADATA_Retain_Flow_to_Flow_out}"
   AB_PORT_Load_Reformat_reject_out0="${AB_PORT_Retain_Flow_to_Flow_out}"
   AB_METADATA_Load_Reformat_reject_out0="${AB_METADATA_Retain_Flow_to_Flow_out}"
   AB_PORT_Load_Reformat_error_out0="${AB_PORT_Retain_Flow_to_Flow_out}"
   AB_METADATA_Load_Reformat_error_out0="${AB_METADATA_Retain_Flow_to_Flow_out}"
   :
fi
if [ X"${AB_IS_LIVE_Replicate}" != X0 ]; then
   mp broadcast Replicate -layout layout2
   AB_PORT_Replicate_out=Replicate.out
   AB_METADATA_Replicate_out=' -metadata metadata2'
else
   AB_PORT_Replicate_out="${AB_PORT_Load_Reformat_out_out0}"
   AB_METADATA_Replicate_out="${AB_METADATA_Load_Reformat_out_out0}"
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_API__table_}" != X0 ]; then
   mp otable Output_Table_API__table_ "$AB_IDB_CONFIG" -flags wronly,trunc,creat -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -interface api -field_type_preference variable -commitNumber 0 -no_actions_ok -limit "$LOAD_ERRLIMIT" -ramp 0.0 -layout layout2
   AB_PORT_Output_Table_API__table__reject=Output_Table_API__table_.reject
   AB_METADATA_Output_Table_API__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_API__table__error=Output_Table_API__table_.error
   AB_METADATA_Output_Table_API__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_API__table__log=Output_Table_API__table_.log
   AB_METADATA_Output_Table_API__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Output_Table_Fastload__table_}" != X0 ]; then
   mp otable Output_Table_Fastload__table_ "$AB_IDB_CONFIG" -flags wronly,append,creat -table "${STAGE_DB}"'.'"${STAGE_TABLE}" -interface Fastload -field_type_preference variable -sleep "$FLOAD_SLEEP" -tenacity "$FLOAD_TENACITY" -sessions "$FLOAD_LOAD_SESSIONS" -logtab_name "$LOG_TABLE" -np_axsmod_dir "$DW_TMP" -checkpoint 0 -worktab_name "$WORK_TABLE" -errtab_name "$ERROR_TABLE" -errlimit "$FLOAD_ERRLIMIT" -logfile "$LOAD_LOGFILE" -axsmod_tracelevel None -limit 0 -ramp 0.0 -layout layout2
   AB_PORT_Output_Table_Fastload__table__reject=Output_Table_Fastload__table_.reject
   AB_METADATA_Output_Table_Fastload__table__reject=' -metadata metadata2'
   AB_PORT_Output_Table_Fastload__table__error=Output_Table_Fastload__table_.error
   AB_METADATA_Output_Table_Fastload__table__error=' -metadata metadata3'
   AB_PORT_Output_Table_Fastload__table__log=Output_Table_Fastload__table_.log
   AB_METADATA_Output_Table_Fastload__table__log=' -metadata metadata4'
else
   :
fi
if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Error_File}" != X0 ]; then
   mp logger Reject_Error_Log_Files.Error_File "$LOAD_ERRFILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs}" != X0 ]; then
   mp logger Reject_Error_Log_Files.Gather_Logs "$OUTPUT_TABLE_LOGFILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_Reject_Error_Log_Files_Reject_File}" != X0 ]; then
   mp logger Reject_Error_Log_Files.Reject_File "$LOAD_REJFILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_XForm_Error_File}" != X0 ]; then
   mp logger XForm_Error_File "$XFORM_ERRFILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_XForm_Reject_File}" != X0 ]; then
   mp logger XForm_Reject_File "$XFORM_REJFILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_chmod_LOAD_LOGFILE}" != X0 ]; then
   mp filter chmod_LOAD_LOGFILE $DW_EXE/chmod_load_logfile.ksh -layout layout1
else
   :
fi
mp checkpoint 1

# Components in phase 2:
if [ X"${AB_IS_LIVE_check_LOAD_LOGFILE_for_abnormal_exits}" != X0 ]; then
   mp filter check_LOAD_LOGFILE_for_abnormal_exits $DW_EXE/check_load_logfile.ksh -layout layout1
else
   :
fi

# Flows for Entire Graph:
let AB_FLOW_CONDITION="(AB_IS_LIVE_Concatenate) && (AB_HAS_DATA_Flow_3)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_3 "${AB_PORT_Input_File_read}" Concatenate.in${AB_METADATA_Input_File_read}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Retain_Flow_to_Flow) && (AB_HAS_DATA_Flow_5)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_5 "${AB_PORT_Concatenate_out}" Retain_Flow_to_Flow.in${AB_METADATA_Concatenate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Load_Reformat) && (AB_HAS_DATA_Flow_6)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_6 "${AB_PORT_Retain_Flow_to_Flow_out}" Load_Reformat.in${AB_METADATA_Retain_Flow_to_Flow_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Replicate) && (AB_HAS_DATA_Flow_1)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_1 "${AB_PORT_Load_Reformat_out_out0}" Replicate.in${AB_METADATA_Load_Reformat_out_out0} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_API__table_) && (AB_HAS_DATA_Flow_15)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_15 "${AB_PORT_Replicate_out}" Output_Table_API__table_.write${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Output_Table_Fastload__table_) && (AB_HAS_DATA_Flow_14)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_14 "${AB_PORT_Replicate_out}" Output_Table_Fastload__table_.write${AB_METADATA_Replicate_out} -compressed
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_25)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_25 "${AB_PORT_Output_Table_Fastload__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_Fastload__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Error_File) && (AB_HAS_DATA_Flow_31)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_31 "${AB_PORT_Output_Table_API__table__error}" Reject_Error_Log_Files.Error_File.in${AB_METADATA_Output_Table_API__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_2)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_2 "${AB_PORT_Output_Table_Fastload__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_Fastload__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Gather_Logs) && (AB_HAS_DATA_Flow_4)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_4 "${AB_PORT_Output_Table_API__table__log}" Reject_Error_Log_Files.Gather_Logs.in${AB_METADATA_Output_Table_API__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_7)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_7 "${AB_PORT_Output_Table_Fastload__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_Fastload__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_Reject_Error_Log_Files_Reject_File) && (AB_HAS_DATA_Flow_8)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_8 "${AB_PORT_Output_Table_API__table__reject}" Reject_Error_Log_Files.Reject_File.in${AB_METADATA_Output_Table_API__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_XForm_Error_File) && (AB_HAS_DATA_Flow_33)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_33 "${AB_PORT_Load_Reformat_error_out0}" XForm_Error_File.in${AB_METADATA_Load_Reformat_error_out0}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_XForm_Reject_File) && (AB_HAS_DATA_Flow_13)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_13 "${AB_PORT_Load_Reformat_reject_out0}" XForm_Reject_File.in${AB_METADATA_Load_Reformat_reject_out0}
fi

if [ X"${AB_VERBOSE_CONDITIONS}" != X"" ]; then
   print -r -- 'Generated graph:'
   mp show
fi
unset AB_COMM_WAIT
export AB_TRACKING_GRAPH_THUMBPRINT;AB_TRACKING_GRAPH_THUMBPRINT=1837010
mp run
mpjret=$?
unset AB_COMM_WAIT
unset AB_TRACKING_GRAPH_THUMBPRINT
mp reset
m_rmcatalog > /dev/null 2>&1
export XX_CATALOG;XX_CATALOG="${SAVED_CATALOG}"
export AB_CATALOG;AB_CATALOG="${SAVED_CATALOG}"

#+Script End+  ==================== 




























#+End Script End+  ====================

exit $mpjret
