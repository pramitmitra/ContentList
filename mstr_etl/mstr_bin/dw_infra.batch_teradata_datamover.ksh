#! /bin/ksh
# Script generated by software licensed from Ab Initio.
# Use and disclosure are subject to Ab Initio confidentiality and license terms.
export AB_HOME;AB_HOME=${AB_HOME:-/usr/local/abinitio-V3-1-4}
export MPOWERHOME;MPOWERHOME="$AB_HOME"
export AB_COMPONENTS;AB_COMPONENTS="$AB_HOME"'/Projects/root/components'
export PATH
typeset _ab_uname=`uname`
case "$_ab_uname" in
Windows_* )
    PATH="$AB_HOME/bin;$PATH" ;;
CYGWIN_* )
    PATH="`cygpath "$AB_HOME"`/bin:/usr/local/bin:/usr/bin:/bin:$PATH" ;;
* )
    PATH="$AB_HOME/bin:$PATH" ;;
esac
unset ENV
export AB_REPORT;AB_REPORT=${AB_REPORT:-'monitor=300 processes scroll=true'}
unset GDE_EXECUTION

export AB_COMPATIBILITY;AB_COMPATIBILITY=3.1.4.4

# Deployed execution script for graph "dw_infra.batch_teradata_datamover", compiled at Thursday, April 02, 2015 14:12:01 using GDE version 3.1.4.1
export AB_JOB;AB_JOB=${AB_JOB_PREFIX:-""}dw_infra_batch_teradata_datamover
# Begin Ab Initio shell utility functions

: ${_ab_uname:=$(uname)}

function __AB_INVOKE_PROJECT
{
  typeset _AB_PROJECT_KSH="$1" ; shift
  typeset _AB_PROJECT_DIR="$1" ; shift
  typeset _AB_DEFINE_OR_EXECUTE="$1" ; shift
  typeset _AB_START_OR_END="$1" ; shift
  # Check that the project exists:
  if [ ! -r "$_AB_PROJECT_KSH" ] ; then
    print -r -u2 Warning: Cannot find common sandbox script: "$_AB_PROJECT_KSH"
    if [ ! -z "${_AB_CALLING_PROJECT:=}" ] ; then
      print -r -u2 Please check the common sandbox settings for the calling project: "$_AB_CALLING_PROJECT"
    fi
  fi
  if [ $# -gt 0 ] ; then
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END"  "$@"
  else
    . "$_AB_PROJECT_KSH" "$_AB_PROJECT_DIR" "$_AB_DEFINE_OR_EXECUTE" "$_AB_START_OR_END" 
  fi;
}

function __AB_DOTIT
{
  if [ $# -gt 0 ] ; then
    .  "$@"
  fi
}

function __AB_QUOTEIT {
  typeset queue q qq qed lotsaqs s trail
  q="'"
  qq='"'
  if [ X"$1" = X"" ] ; then
    print $q$q
    return
  fi
  lotsaqs=${q}${qq}${q}${qq}${q}
  if [ ${#1} -ge 10000 ]; then
    print -r -- "$1" | sed "s/$q/$lotsaqs/g; 1s/^/$q/; \$s/\$/$q/"
  else
    queue=${1%$q}
    if [ X"$queue" != X"$1" ] ; then
      trail="${qq}${q}${qq}" 
    else 
      trail=""
    fi
    oldIFS="$IFS"
    IFS=$q
    set -- $queue
    IFS="$oldIFS"
    print -rn "$q$1"
    shift
    for s; do
      print -rn "$lotsaqs$s"
    done
    print -r $q$trail
  fi
}

function __AB_dirname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        typeset d='' p="$1"
        # Strip drive letter colon, if present, and put it into d.
        case $p in
        [A-Za-z]:* )
            d=${p%%:*}:
            p=${p#??}
            ;;
        esac
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*[/\\] )
                p=${p%[/\\]} ;;
            * )
                break ;;
            esac
        done
        if [[ "$p" = ?*[/\\]* ]] ; then
            print -r -- "$d${p%[/\\]*}"
        elif [[ "$p" = [/\\]* ]] ; then
            print "$d/"
        else
            print "$d." 
        fi
        ;;
    * ) # Unix
        typeset p="$1"
        # Remove trailing separators, though not the last character in the
        # pathname.
        while : true; do
            case $p in
            ?*/ )
                p="${p%/}" ;;
            * )
                break ;;
            esac
        done
        case $p in
        ?*/* )
            print -r -- "${p%/*}" ;;
        /* )
            print / ;;
        * )
            print . ;;
        esac
        ;;
    esac
}

function __AB_concat_pathname {
    case $_ab_uname in
    Windows_* | CYGWIN_* )
        # Does not handle all cases of concatenating partially absolute
        # pathnames, those with only one of a drive letter or an initial
        # separator.
        case $2 in
        [/\\]* | [A-Za-z]:* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | *[/\\] )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    * ) # Unix
        case $2 in
        /* )
            print -r -- "$2"
            ;;
        * )
            case $1 in
            # Assume that empty string means ".".  Avoid adding a
            # redundant separator.
            '' | */ )
                print -r -- "$1$2" ;;
            * )
                print -r -- "$1/$2" ;;
            esac
            ;;
        esac
        ;;
    esac
}

function __AB_COND {
if [ X"$1" = X0  -o X"$1" = Xfalse -o X"$1" = XFalse -o X"$1" = XF -o X"$1" = Xf ] ; then
  print "0"
else
  print "1"
fi
}

# End Ab Initio shell utility functions
export AB_GRAPH_NAME;AB_GRAPH_NAME=dw_infra_batch_teradata_datamover

# Host Setup Commands:
. /dw/etl/mstr_cfg/etlenv.setup
_AB_PROXY_DIR="$(pwd)"/dw_infra.batch_teradata_datamover-ProxyDir-$$
rm -rf "${_AB_PROXY_DIR}"
mkdir "${_AB_PROXY_DIR}"
print -r -- "" > "${_AB_PROXY_DIR}"'/GDE-Parameters'
function __AB_CLEANUP_PROXY_FILES
{
   rm -rf "${_AB_PROXY_DIR}"
   rm -rf "${AB_EXTERNAL_PROXY_DIR}"
   return
}
trap '__AB_CLEANUP_PROXY_FILES' EXIT
# Work around pdksh bug: the EXIT handler is not executed upon a signal.
trap '_AB_status=$?; __AB_CLEANUP_PROXY_FILES; exit $_AB_status' HUP INT QUIT TERM
if [ $# -gt 0 -a X"$1" = X"-help" ]; then
print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
exit 1
fi

# Command Line Processing
function _AB_PARSE_ARGUMENTS {
   unset ETL_ID
   unset JOB_ENV
   unset EXEC_MODE
   unset DATA_DIR
   unset DB_INTERFACE
   unset AB_IDB_SRC_DBC
   unset AB_IDB_TRGT_DBC
   unset TRGT_TABLE
   unset ETL_CFG_FILE
   unset DML_FILE
   unset LOAD_TYPE
   unset BATCH_SEQ_NUM
   unset UOW_FROM
   unset UOW_TO
   _ab_index_var=0
   while [ $# -gt 0 ]; do
   _ab_kwd="${1}"
   let _ab_index_var=_ab_index_var+1
   shift
   case ${_ab_kwd} in
     -ETL_ID )
      export ETL_ID;      ETL_ID="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -JOB_ENV )
      export JOB_ENV;      JOB_ENV="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   # EXEC_MODE -  E = Extract, L = Load
     -EXEC_MODE )
      export EXEC_MODE;      EXEC_MODE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DATA_DIR )
      export DATA_DIR;      DATA_DIR="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   # DB_INTERFACE - A = API, U = Utility
     -DB_INTERFACE )
      export DB_INTERFACE;      DB_INTERFACE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -AB_IDB_SRC_DBC )
      export AB_IDB_SRC_DBC;      AB_IDB_SRC_DBC="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -AB_IDB_TRGT_DBC )
      export AB_IDB_TRGT_DBC;      AB_IDB_TRGT_DBC="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -TRGT_TABLE )
      export TRGT_TABLE;      TRGT_TABLE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -ETL_CFG_FILE )
      export ETL_CFG_FILE;      ETL_CFG_FILE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -DML_FILE )
      export DML_FILE;      DML_FILE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   # LOAD_TYPE - T = Truncate/Insert, A = Append
     -LOAD_TYPE )
      export LOAD_TYPE;      LOAD_TYPE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -BATCH_SEQ_NUM )
      export BATCH_SEQ_NUM;      BATCH_SEQ_NUM="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -UOW_FROM )
      export UOW_FROM;      UOW_FROM="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -UOW_TO )
      export UOW_TO;      UOW_TO="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
     -CHECK_SQL_FILE )
      CHECK_SQL_FILE="${1}"
      _AB_USED_ARGUMENTS[_ab_index_var]=1
      _AB_USED_ARGUMENTS[_ab_index_var+1]=1
      let _ab_index_var=_ab_index_var+1
      shift
      ;;
   * )
      if [ X"${_AB_USED_ARGUMENTS[_ab_index_var]}" != X1 ]; then
         print -r -- 'Unexpected command line argument found: '"${_ab_kwd}"
         print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
         exit 1
      fi
   esac
   done
}
if [ $# -gt 0 ]; then
   _AB_PARSE_ARGUMENTS "$@"
else
   _AB_PARSE_ARGUMENTS
fi

if [ X"${ETL_ID:-}" = X"" ]; then
   print -r -- 'Required parameter ETL_ID undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${JOB_ENV:-}" = X"" ]; then
   print -r -- 'Required parameter JOB_ENV undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${EXEC_MODE:-}" = X"" ]; then
   print -r -- 'Required parameter EXEC_MODE undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${DATA_DIR:-}" = X"" ]; then
   print -r -- 'Required parameter DATA_DIR undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${DB_INTERFACE:-}" = X"" ]; then
   print -r -- 'Required parameter DB_INTERFACE undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${AB_IDB_SRC_DBC:-}" = X"" ]; then
   print -r -- 'Required parameter AB_IDB_SRC_DBC undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${AB_IDB_TRGT_DBC:-}" = X"" ]; then
   print -r -- 'Required parameter AB_IDB_TRGT_DBC undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${TRGT_TABLE:-}" = X"" ]; then
   print -r -- 'Required parameter TRGT_TABLE undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${ETL_CFG_FILE:-}" = X"" ]; then
   print -r -- 'Required parameter ETL_CFG_FILE undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${DML_FILE:-}" = X"" ]; then
   print -r -- 'Required parameter DML_FILE undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${LOAD_TYPE:-}" = X"" ]; then
   print -r -- 'Required parameter LOAD_TYPE undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi

if [ X"${BATCH_SEQ_NUM:-}" = X"" ]; then
   print -r -- 'Required parameter BATCH_SEQ_NUM undefined'
   print -r -- 'Usage: dw_infra.batch_teradata_datamover.ksh -ETL_ID <ETL_ID> -JOB_ENV <JOB_ENV> -EXEC_MODE <EXEC_MODE> -DATA_DIR <DATA_DIR> -DB_INTERFACE <DB_INTERFACE> -AB_IDB_SRC_DBC <AB_IDB_SRC_DBC> -AB_IDB_TRGT_DBC <AB_IDB_TRGT_DBC> -TRGT_TABLE <TRGT_TABLE> -ETL_CFG_FILE <ETL_CFG_FILE> -DML_FILE <DML_FILE> -LOAD_TYPE <LOAD_TYPE> -BATCH_SEQ_NUM <BATCH_SEQ_NUM> -UOW_FROM <UOW_FROM> -UOW_TO <UOW_TO>'
   exit 1
fi
export UOW_FROM;UOW_FROM=${UOW_FROM:-""}
export UOW_TO;UOW_TO=${UOW_TO:-""}
export JOB_TYPE;JOB_TYPE=datamove
export JOB_TYPE_ID;JOB_TYPE_ID=dm
export UOW_APPEND;UOW_APPEND=$(if [[ -n $UOW_TO ]]
  then
    print ".$UOW_TO"
  else
    print ""
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UOW_APPEND of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UOW_DATE;UOW_DATE=$(print $UOW_TO | cut -c1-8)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UOW_DATE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export SUBJECT_AREA;SUBJECT_AREA=${ETL_ID%%.*}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter SUBJECT_AREA of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TABLE_ID;TABLE_ID=${ETL_ID##*.}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TABLE_ID of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TRGT_DB;TRGT_DB=${TRGT_TABLE%%.*}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TRGT_DB of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TRGT_TABLE_ID;TRGT_TABLE_ID=${TRGT_TABLE##*.}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TRGT_TABLE_ID of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export AB_JOB;AB_JOB=$(if [ $ETL_ENV ]
then
   print $AB_JOB.$ETL_ID.$ETL_ENV.$EXEC_MODE.$JOB_ENV
else
   print $AB_JOB.$ETL_ID.$EXEC_MODE.$JOB_ENV
fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter AB_JOB of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export FILE_DATETIME;FILE_DATETIME=${CURR_DATETIME:-$(date '+%Y%m%d-%H%M%S')}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter FILE_DATETIME of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_LOAD_TABLE_CHECK_LOGFILE;UTILITY_LOAD_TABLE_CHECK_LOGFILE=$DW_SA_LOG/$TABLE_ID.dm.utility_temp_table_check$UOW_APPEND.$FILE_DATETIME.log
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_LOAD_TABLE_CHECK_LOGFILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TD_DB_NAME;TD_DB_NAME=$(if [[ $EXEC_MODE == E ]]
  then
    m_db print $AB_IDB_SRC_DBC -value db_name
  elif [[ $EXEC_MODE == L ]]
  then
    m_db print $AB_IDB_TRGT_DBC -value db_name
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TD_DB_NAME of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export LOGTABLE_DATABASE;LOGTABLE_DATABASE=$(if [[ $EXEC_MODE == E ]]
  then
    m_db print $AB_IDB_SRC_DBC -value logtable_database
  elif [[ $EXEC_MODE == L ]]
  then
    m_db print $AB_IDB_TRGT_DBC -value logtable_database
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter LOGTABLE_DATABASE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export ERRORTABLES_DATABASE;ERRORTABLES_DATABASE=$(if [[ $EXEC_MODE == E ]]
  then
    m_db print $AB_IDB_SRC_DBC -value errortables_database
  elif [[ $EXEC_MODE == L ]]
  then
    m_db print $AB_IDB_TRGT_DBC -value errortables_database
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter ERRORTABLES_DATABASE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export PERFORM_UTILITY_CHECK;PERFORM_UTILITY_CHECK=$(if [[ $DB_INTERFACE == U && ($EXEC_MODE == E || ($EXEC_MODE == L && $LOAD_TYPE == T)) ]]
  then
    print 1
  else
    print 0
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter PERFORM_UTILITY_CHECK of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export DW_SA_DATA_DIR;DW_SA_DATA_DIR=$(if [[ -n $UOW_TO ]]
  then
    print $DATA_DIR/$JOB_ENV/$SUBJECT_AREA/$TABLE_ID/$UOW_DATE
  else
    print $DATA_DIR/$JOB_ENV/$SUBJECT_AREA
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DW_SA_DATA_DIR of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export DW_SA_DAT;DW_SA_DAT=$DW_DAT/$JOB_ENV/$SUBJECT_AREA
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DW_SA_DAT of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export DW_SA_LOG;DW_SA_LOG=${DW_SA_LOG:-$DW_LOG/$JOB_ENV/$SUBJECT_AREA}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DW_SA_LOG of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export DW_SA_TMP;DW_SA_TMP=$DW_TMP/$JOB_ENV/$SUBJECT_AREA
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter DW_SA_TMP of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export CREATE_TMP_SQL_FILE;CREATE_TMP_SQL_FILE=$(if [ $EXEC_MODE == "E" ]
  then
    set -e
    print "cat <<EOF" > $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.extract.sql.tmp
    cat $DW_SQL/$ETL_ID.$JOB_TYPE.extract.sql >> $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.extract.sql.tmp
    print -- "--END-OF-SQL" >> $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.extract.sql.tmp
    print "\nEOF" >> $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.extract.sql.tmp
    set +e
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CREATE_TMP_SQL_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export INPUT_TABLE_SEL_TMP;INPUT_TABLE_SEL_TMP=$(if [ $EXEC_MODE == "E" ]
  then
    . $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.extract.sql.tmp
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter INPUT_TABLE_SEL_TMP of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
CHECK_SQL_FILE=$(if [ $EXEC_MODE == "E" ]
  then
    set +e
    print $INPUT_TABLE_SEL_TMP | grep "END-OF-SQL"
    err=$?
    set -e

    if [ $err -eq 1 ]
    then
      print "SQL File is not integrated : $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.extract.sql.tmp" >&2
      exit 1
    fi
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter CHECK_SQL_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export INPUT_TABLE_SEL;INPUT_TABLE_SEL=${INPUT_TABLE_SEL_TMP%%--END-OF-SQL*}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter INPUT_TABLE_SEL of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export USE_API;USE_API=$(if [[ $DB_INTERFACE == A ]]; then print 1; else print 0; fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_API of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export USE_TPT;USE_TPT=$(if [[ $DB_INTERFACE == U ]]; then print 1; else print 0; fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_TPT of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export LAYOUT;LAYOUT="$DW_SA_DATA_DIR"
export USE_API_EXTRACT;USE_API_EXTRACT=$(if [[ $DB_INTERFACE == A && $EXEC_MODE == E ]]; then print 1; else print 0; fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_API_EXTRACT of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export API_EXTRACT_TO_FILE;API_EXTRACT_TO_FILE=$(if [[ $EXEC_MODE == E && $USE_API == 1 ]]
  then
        print 1
  else
        print 0
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter API_EXTRACT_TO_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export API_LOAD_FROM_FILE;API_LOAD_FROM_FILE=$(if [[ $EXEC_MODE == L && $USE_API == 1 ]]
  then
        print 1
  else
        print 0
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter API_LOAD_FROM_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export API_TRUNCATE_INSERT;API_TRUNCATE_INSERT=$(if [[ $DB_INTERFACE == A && $LOAD_TYPE == T && $EXEC_MODE == L ]]; then print 1; else print 0;fi);
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter API_TRUNCATE_INSERT of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export API_APPEND;API_APPEND=$(if [[ $DB_INTERFACE == A && $LOAD_TYPE = A && $EXEC_MODE == L ]]; then print 1; else print 0;fi);
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter API_APPEND of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export USE_TPT_EXTRACT;USE_TPT_EXTRACT=$(if [[ $DB_INTERFACE == U && $EXEC_MODE == E ]]; then print 1; else print 0; fi)
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter USE_TPT_EXTRACT of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TPT_EXTRACT_TO_FILE;TPT_EXTRACT_TO_FILE=$(if [[ $EXEC_MODE == E && $USE_TPT == 1 ]]
  then
        print 1
  else
        print 0
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TPT_EXTRACT_TO_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TPT_LOAD_FROM_FILE;TPT_LOAD_FROM_FILE=$(if [[ $EXEC_MODE == L && $USE_TPT == 1 ]]
  then
        print 1
  else
        print 0
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TPT_LOAD_FROM_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TPT_TRUNCATE_INSERT;TPT_TRUNCATE_INSERT=$(if [[ $DB_INTERFACE == U && $LOAD_TYPE == T && $EXEC_MODE == L ]]; then print 1; else print 0;fi);
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TPT_TRUNCATE_INSERT of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TPT_APPEND;TPT_APPEND=$(if [[ $DB_INTERFACE == U && $LOAD_TYPE = A && $EXEC_MODE == L ]]; then print 1; else print 0;fi);
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TPT_APPEND of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export TRGT_TABLE_ID27;TRGT_TABLE_ID27=${TRGT_TABLE_ID%${TRGT_TABLE_ID#???????????????????????????}}
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter TRGT_TABLE_ID27 of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export FILE_NAME;FILE_NAME="$TABLE_ID"'.'"$JOB_TYPE"'.dat.'"$BATCH_SEQ_NUM"
export INPUT_FILE;INPUT_FILE="$DW_SA_DATA_DIR"'/'"$FILE_NAME"
export OUTPUT_FILE;OUTPUT_FILE="$DW_SA_DATA_DIR"'/'"$FILE_NAME"
export UTILITY_INTERFACE_LOG_TABLE;UTILITY_INTERFACE_LOG_TABLE=${TRGT_TABLE_ID27:-$TRGT_TABLE_ID}_L
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_LOG_TABLE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_ERROR_TABLE;UTILITY_INTERFACE_ERROR_TABLE=${TRGT_TABLE_ID27:-$TRGT_TABLE_ID}_E
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_ERROR_TABLE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_WORK_TABLE;UTILITY_INTERFACE_WORK_TABLE=${TRGT_TABLE_ID27:-$TRGT_TABLE_ID}_W
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_WORK_TABLE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_SESSIONS_MAX;UTILITY_INTERFACE_SESSIONS_MAX=$(grep "^DM_UTILITY_SESSIONS_MAX\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-16})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_SESSIONS_MAX of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_SESSIONS_MIN;UTILITY_INTERFACE_SESSIONS_MIN=$(grep "^DM_UTILITY_SESSIONS_MIN\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-8})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_SESSIONS_MIN of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_SLEEP;UTILITY_INTERFACE_SLEEP=$(grep "^DM_UTILITY_SLEEP\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-6})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_SLEEP of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_TENACITY;UTILITY_INTERFACE_TENACITY=$(grep "^DM_UTILITY_TENACITY\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-4})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_TENACITY of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_INSTANCES;UTILITY_INTERFACE_INSTANCES=$(grep "^DM_UTILITY_INSTANCES\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-2})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_INSTANCES of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_ERROR_LIMIT;UTILITY_INTERFACE_ERROR_LIMIT=$(grep "^DM_UTILITY_ERRLIMIT\>" $ETL_CFG_FILE | read PARAM VALUE COMMENT; eval print ${VALUE:-0})
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_ERROR_LIMIT of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_EXTRACT_LOG_FILE;UTILITY_INTERFACE_EXTRACT_LOG_FILE=$(if [[ -d $DW_SA_LOG ]]
  then
      print $DW_SA_LOG/$TABLE_ID.$JOB_TYPE_ID.utility.extract${UOW_APPEND}.$FILE_DATETIME.log
  else
      print $DW_LOG/$TABLE_ID.$JOB_TYPE_ID.utility.extract${UOW_APPEND}.$FILE_DATETIME.log
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_EXTRACT_LOG_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export UTILITY_INTERFACE_LOAD_LOG_FILE;UTILITY_INTERFACE_LOAD_LOG_FILE=$(if [[ -d $DW_SA_LOG ]]
  then
      print $DW_SA_LOG/$TABLE_ID.$JOB_TYPE_ID.utility.load${UOW_APPEND}.$FILE_DATETIME.log
  else
      print $DW_LOG/$TABLE_ID.$JOB_TYPE_ID.utility.load${UOW_APPEND}.$FILE_DATETIME.log
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter UTILITY_INTERFACE_LOAD_LOG_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export INPUT_TABLE_LOG_FILE;INPUT_TABLE_LOG_FILE=$(if [[ -d $DW_SA_LOG ]]
  then
      print $DW_SA_LOG/$TABLE_ID.$JOB_TYPE_ID.extract${UOW_APPEND}.$FILE_DATETIME.log
  else
      print $DW_LOG/$TABLE_ID.$JOB_TYPE_ID.extract${UOW_APPEND}.$FILE_DATETIME.log
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter INPUT_TABLE_LOG_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export OUTPUT_TABLE_LOG_FILE;OUTPUT_TABLE_LOG_FILE=$(if [[ -d $DW_SA_LOG ]]
  then
      print $DW_SA_LOG/$TABLE_ID.$JOB_TYPE_ID.load${UOW_APPEND}.$FILE_DATETIME.log
  else
      print $DW_LOG/$TABLE_ID.$JOB_TYPE_ID.load${UOW_APPEND}.$FILE_DATETIME.log
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter OUTPUT_TABLE_LOG_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export OUTPUT_TABLE_ERROR_FILE;OUTPUT_TABLE_ERROR_FILE=$(if [[ -d $DW_SA_TMP ]]
  then
      print $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.load.err
  else
      print $DW_TMP/$TABLE_ID.$JOB_TYPE_ID.load.err
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter OUTPUT_TABLE_ERROR_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
export OUTPUT_TABLE_REJECT_FILE;OUTPUT_TABLE_REJECT_FILE=$(if [[ -d $DW_SA_TMP ]]
  then
      print $DW_SA_TMP/$TABLE_ID.$JOB_TYPE_ID.load.rej
  else
      print $DW_TMP/$TABLE_ID.$JOB_TYPE_ID.load.rej
  fi
 )
mpjret=$?
if [ 0 -ne $mpjret ] ; then
   print -- Error evaluating: 'parameter OUTPUT_TABLE_REJECT_FILE of dw_infra_batch_teradata_datamover', interpretation 'shell'
   exit $mpjret
fi
. "${_AB_PROXY_DIR}"'/GDE-Parameters'

#+Script Start+  ==================== 
m_env -v


#+End Script Start+  ====================
# Check that the "mp" program is found correctly on the PATH
case "$_ab_uname" in
  Windows_* )
    _ab_expected_mp=$AB_HOME/bin/mp.exe ;;
  * )
    _ab_expected_mp=$AB_HOME/bin/mp
esac
if [ ! -x "$_ab_expected_mp" ]; then
  print "\n*** ERROR: executable $_ab_expected_mp not found"
  exit 1
fi
_ab_found_mp=$(whence mp)
if [ "$_ab_found_mp" = "" ] || [ "$_ab_found_mp" -ot "$_ab_expected_mp" ] || [ "$_ab_found_mp" -nt "$_ab_expected_mp" ]; then
  if [ "$_ab_found_mp" = "" ]; then
    print "\n*** ERROR: mp not found on PATH"
  else
    case "$_ab_uname" in
      CYGWIN_* )
        _ab_found_mp=`cygpath -m "$_ab_found_mp"` ;;
    esac
    print "\n*** ERROR: Wrong mp found on the PATH: $_ab_found_mp"
    print "           Should be via \$AB_HOME/bin: $_ab_expected_mp"
  fi
  print "\nCheck Setup Script in Host Connections Settings and Script Start in Graph Settings for PATH modifications"
  print "Active PATH=$PATH"
  exit 1
fi
if [ -f "$AB_HOME/bin/ab_catalog_functions.ksh" ]; then . ab_catalog_functions.ksh; fi
mv "${_AB_PROXY_DIR}" "$(pwd)"/"${AB_JOB}"'-dw_infra.batch_teradata_datamover-ProxyDir'
_AB_PROXY_DIR="$(pwd)"/"${AB_JOB}"'-dw_infra.batch_teradata_datamover-ProxyDir'
print -r -- 'record string("|") node, timestamp, component, subcomponent, event_type; string("|\n") event_text; end' > "${_AB_PROXY_DIR}"'/T2T_API_Mode_Input_Table-3.dml'
print -r -- 'string("\n")' > "${_AB_PROXY_DIR}"'/T2T_API_Mode_Append_Output_Table-5.dml'

mp job ${AB_JOB}

# Layouts:
mp layout layout1 "$DW_TMP"
mp layout layout2 "$LAYOUT"
mp layout layout3 file:.

# Record Formats (Metadata):
mp metadata metadata1 -file "$DML_FILE"
mp metadata metadata2 -file "${_AB_PROXY_DIR}"'/T2T_API_Mode_Input_Table-3.dml'
mp metadata metadata3 -file "${_AB_PROXY_DIR}"'/T2T_API_Mode_Append_Output_Table-5.dml'

export AB_CATALOG;AB_CATALOG=${AB_CATALOG:-"${XX_CATALOG}"}
# Catalog Usage: Creating temporary catalog using lookup files only
m_rmcatalog -catalog GDE-dw_infra_batch_teradata_datamover-${AB_JOB}.cat > /dev/null 2>&1
m_mkcatalog -catalog GDE-dw_infra_batch_teradata_datamover-${AB_JOB}.cat
SAVED_CATALOG="${AB_CATALOG}"
export AB_CATALOG;AB_CATALOG='GDE-dw_infra_batch_teradata_datamover-'"${AB_JOB}"'.cat'
# 
# Initialize condition variables to user-specified conditions
# 
AB_USERCOND_dw_infra_batch_teradata_datamover=1
AB_IS_LIVE_dw_infra_batch_teradata_datamover=1
AB_USERCOND_F2T_API_Mode_Input_File="$API_LOAD_FROM_FILE"
AB_USERCOND_F2T_API_Mode_Input_File=$(__AB_COND "${AB_USERCOND_F2T_API_Mode_Input_File}")
AB_IS_LIVE_F2T_API_Mode_Input_File=1
AB_HAS_DATA_Flow_22=1
AB_USERCOND_F2T_TPT_Mode_Input_File="$TPT_LOAD_FROM_FILE"
AB_USERCOND_F2T_TPT_Mode_Input_File=$(__AB_COND "${AB_USERCOND_F2T_TPT_Mode_Input_File}")
AB_IS_LIVE_F2T_TPT_Mode_Input_File=1
AB_HAS_DATA_Flow_23=1
AB_USERCOND_T2T_API_Mode_Input_Table__table_="$USE_API_EXTRACT"
AB_USERCOND_T2T_API_Mode_Input_Table__table_=$(__AB_COND "${AB_USERCOND_T2T_API_Mode_Input_Table__table_}")
AB_IS_LIVE_T2T_API_Mode_Input_Table__table_=1
AB_HAS_DATA_Flow_1=1
AB_HAS_DATA_Flow_2=1
AB_USERCOND_T2T_API_Mode_Extract_Log="$USE_API_EXTRACT"
AB_USERCOND_T2T_API_Mode_Extract_Log=$(__AB_COND "${AB_USERCOND_T2T_API_Mode_Extract_Log}")
AB_IS_LIVE_T2T_API_Mode_Extract_Log=1
AB_USERCOND_T2T_API_Replicate="$USE_API"
AB_USERCOND_T2T_API_Replicate=$(__AB_COND "${AB_USERCOND_T2T_API_Replicate}")
AB_IS_LIVE_T2T_API_Replicate=1
AB_HAS_DATA_Flow_21=1
AB_HAS_DATA_Flow_7=1
AB_HAS_DATA_Flow_6=1
AB_USERCOND_T2F_API_Mode_Output_File="$API_EXTRACT_TO_FILE"
AB_USERCOND_T2F_API_Mode_Output_File=$(__AB_COND "${AB_USERCOND_T2F_API_Mode_Output_File}")
AB_IS_LIVE_T2F_API_Mode_Output_File=1
AB_USERCOND_T2T_API_Mode_Append_Output_Table__table_="$API_APPEND"
AB_USERCOND_T2T_API_Mode_Append_Output_Table__table_=$(__AB_COND "${AB_USERCOND_T2T_API_Mode_Append_Output_Table__table_}")
AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_=1
AB_HAS_DATA_Flow_8=1
AB_HAS_DATA_Flow_9=1
AB_HAS_DATA_Flow_10=1
AB_USERCOND_T2T_API_Mode_Trunc_Ins_Output_Table__table_="$API_TRUNCATE_INSERT"
AB_USERCOND_T2T_API_Mode_Trunc_Ins_Output_Table__table_=$(__AB_COND "${AB_USERCOND_T2T_API_Mode_Trunc_Ins_Output_Table__table_}")
AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_=1
AB_HAS_DATA_Flow_3=1
AB_HAS_DATA_Flow_4=1
AB_HAS_DATA_Flow_5=1
AB_USERCOND_T2T_API_Mode_Load_Errors="$USE_API"
AB_USERCOND_T2T_API_Mode_Load_Errors=$(__AB_COND "${AB_USERCOND_T2T_API_Mode_Load_Errors}")
AB_IS_LIVE_T2T_API_Mode_Load_Errors=1
AB_USERCOND_T2T_API_Mode_Load_Log="$USE_API"
AB_USERCOND_T2T_API_Mode_Load_Log=$(__AB_COND "${AB_USERCOND_T2T_API_Mode_Load_Log}")
AB_IS_LIVE_T2T_API_Mode_Load_Log=1
AB_USERCOND_T2T_API_Mode_Load_Rejects="$USE_API"
AB_USERCOND_T2T_API_Mode_Load_Rejects=$(__AB_COND "${AB_USERCOND_T2T_API_Mode_Load_Rejects}")
AB_IS_LIVE_T2T_API_Mode_Load_Rejects=1
AB_USERCOND_T2T_TPT_Mode_Input_Table__table_="$USE_TPT_EXTRACT"
AB_USERCOND_T2T_TPT_Mode_Input_Table__table_=$(__AB_COND "${AB_USERCOND_T2T_TPT_Mode_Input_Table__table_}")
AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_=1
AB_HAS_DATA_Flow_19=1
AB_HAS_DATA_Flow_20=1
AB_USERCOND_T2T_TPT_Mode_Extract_Log="$USE_TPT"
AB_USERCOND_T2T_TPT_Mode_Extract_Log=$(__AB_COND "${AB_USERCOND_T2T_TPT_Mode_Extract_Log}")
AB_IS_LIVE_T2T_TPT_Mode_Extract_Log=1
AB_USERCOND_T2T_TPT_Replicate="$USE_TPT"
AB_USERCOND_T2T_TPT_Replicate=$(__AB_COND "${AB_USERCOND_T2T_TPT_Replicate}")
AB_IS_LIVE_T2T_TPT_Replicate=1
AB_HAS_DATA_Flow_24=1
AB_HAS_DATA_Flow_15=1
AB_HAS_DATA_Flow_11=1
AB_USERCOND_T2F_TPT_Mode_Output_File="$TPT_EXTRACT_TO_FILE"
AB_USERCOND_T2F_TPT_Mode_Output_File=$(__AB_COND "${AB_USERCOND_T2F_TPT_Mode_Output_File}")
AB_IS_LIVE_T2F_TPT_Mode_Output_File=1
AB_USERCOND_T2T_TPT_Mode_Append_Output_Table__table_="$TPT_APPEND"
AB_USERCOND_T2T_TPT_Mode_Append_Output_Table__table_=$(__AB_COND "${AB_USERCOND_T2T_TPT_Mode_Append_Output_Table__table_}")
AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_=1
AB_HAS_DATA_Flow_16=1
AB_HAS_DATA_Flow_17=1
AB_HAS_DATA_Flow_18=1
AB_USERCOND_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_="$TPT_TRUNCATE_INSERT"
AB_USERCOND_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_=$(__AB_COND "${AB_USERCOND_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_}")
AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_=1
AB_HAS_DATA_Flow_14=1
AB_HAS_DATA_Flow_12=1
AB_HAS_DATA_Flow_13=1
AB_USERCOND_T2T_TPT_Mode_Load_Errors="$USE_TPT"
AB_USERCOND_T2T_TPT_Mode_Load_Errors=$(__AB_COND "${AB_USERCOND_T2T_TPT_Mode_Load_Errors}")
AB_IS_LIVE_T2T_TPT_Mode_Load_Errors=1
AB_USERCOND_T2T_TPT_Mode_Load_Log="$USE_TPT"
AB_USERCOND_T2T_TPT_Mode_Load_Log=$(__AB_COND "${AB_USERCOND_T2T_TPT_Mode_Load_Log}")
AB_IS_LIVE_T2T_TPT_Mode_Load_Log=1
AB_USERCOND_T2T_TPT_Mode_Load_Rejects="$USE_TPT"
AB_USERCOND_T2T_TPT_Mode_Load_Rejects=$(__AB_COND "${AB_USERCOND_T2T_TPT_Mode_Load_Rejects}")
AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects=1
AB_USERCOND_Utility_Load_Table_Check_KSH="$PERFORM_UTILITY_CHECK"
AB_USERCOND_Utility_Load_Table_Check_KSH=$(__AB_COND "${AB_USERCOND_Utility_Load_Table_Check_KSH}")
AB_IS_LIVE_Utility_Load_Table_Check_KSH=1
# 
# Compute condition variables by considering the conditions of neighboring components
# 
done=false
while [ $done = false ] ; do
   done=true
   Temp="${AB_IS_LIVE_F2T_API_Mode_Input_File}"
   let AB_IS_LIVE_F2T_API_Mode_Input_File="AB_USERCOND_F2T_API_Mode_Input_File"
   if [ X"${AB_IS_LIVE_F2T_API_Mode_Input_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_22}"
   let AB_HAS_DATA_Flow_22="(AB_IS_LIVE_F2T_API_Mode_Input_File) && (AB_IS_LIVE_T2T_API_Replicate)"
   if [ X"${AB_HAS_DATA_Flow_22}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_F2T_TPT_Mode_Input_File}"
   let AB_IS_LIVE_F2T_TPT_Mode_Input_File="AB_USERCOND_F2T_TPT_Mode_Input_File"
   if [ X"${AB_IS_LIVE_F2T_TPT_Mode_Input_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_23}"
   let AB_HAS_DATA_Flow_23="(AB_IS_LIVE_F2T_TPT_Mode_Input_File) && (AB_IS_LIVE_T2T_TPT_Replicate)"
   if [ X"${AB_HAS_DATA_Flow_23}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Mode_Input_Table__table_}"
   let AB_IS_LIVE_T2T_API_Mode_Input_Table__table_="(AB_HAS_DATA_Flow_1) && (AB_USERCOND_T2T_API_Mode_Input_Table__table_)"
   if [ X"${AB_IS_LIVE_T2T_API_Mode_Input_Table__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_1}"
   let AB_HAS_DATA_Flow_1="(AB_IS_LIVE_T2T_API_Mode_Input_Table__table_) && (AB_IS_LIVE_T2T_API_Replicate)"
   if [ X"${AB_HAS_DATA_Flow_1}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_2}"
   let AB_HAS_DATA_Flow_2="(AB_IS_LIVE_T2T_API_Mode_Input_Table__table_) && (AB_IS_LIVE_T2T_API_Mode_Extract_Log)"
   if [ X"${AB_HAS_DATA_Flow_2}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Mode_Extract_Log}"
   let AB_IS_LIVE_T2T_API_Mode_Extract_Log="(AB_HAS_DATA_Flow_2) && (AB_USERCOND_T2T_API_Mode_Extract_Log)"
   if [ X"${AB_IS_LIVE_T2T_API_Mode_Extract_Log}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Replicate}"
   let AB_IS_LIVE_T2T_API_Replicate="((AB_HAS_DATA_Flow_22) || (AB_HAS_DATA_Flow_1)) && (AB_USERCOND_T2T_API_Replicate)"
   if [ X"${AB_IS_LIVE_T2T_API_Replicate}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_21}"
   let AB_HAS_DATA_Flow_21="(AB_IS_LIVE_T2T_API_Replicate) && (AB_IS_LIVE_T2F_API_Mode_Output_File)"
   if [ X"${AB_HAS_DATA_Flow_21}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_7}"
   let AB_HAS_DATA_Flow_7="(AB_IS_LIVE_T2T_API_Replicate) && (AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_)"
   if [ X"${AB_HAS_DATA_Flow_7}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_6}"
   let AB_HAS_DATA_Flow_6="(AB_IS_LIVE_T2T_API_Replicate) && (AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_)"
   if [ X"${AB_HAS_DATA_Flow_6}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2F_API_Mode_Output_File}"
   let AB_IS_LIVE_T2F_API_Mode_Output_File="AB_USERCOND_T2F_API_Mode_Output_File"
   if [ X"${AB_IS_LIVE_T2F_API_Mode_Output_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_}"
   let AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_="(AB_HAS_DATA_Flow_7) && (AB_USERCOND_T2T_API_Mode_Append_Output_Table__table_)"
   if [ X"${AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_8}"
   let AB_HAS_DATA_Flow_8="(AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_) && (AB_IS_LIVE_T2T_API_Mode_Load_Rejects)"
   if [ X"${AB_HAS_DATA_Flow_8}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_9}"
   let AB_HAS_DATA_Flow_9="(AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_) && (AB_IS_LIVE_T2T_API_Mode_Load_Errors)"
   if [ X"${AB_HAS_DATA_Flow_9}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_10}"
   let AB_HAS_DATA_Flow_10="(AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_) && (AB_IS_LIVE_T2T_API_Mode_Load_Log)"
   if [ X"${AB_HAS_DATA_Flow_10}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_}"
   let AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_="(AB_HAS_DATA_Flow_6) && (AB_USERCOND_T2T_API_Mode_Trunc_Ins_Output_Table__table_)"
   if [ X"${AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_3}"
   let AB_HAS_DATA_Flow_3="(AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_) && (AB_IS_LIVE_T2T_API_Mode_Load_Rejects)"
   if [ X"${AB_HAS_DATA_Flow_3}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_4}"
   let AB_HAS_DATA_Flow_4="(AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_) && (AB_IS_LIVE_T2T_API_Mode_Load_Errors)"
   if [ X"${AB_HAS_DATA_Flow_4}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_5}"
   let AB_HAS_DATA_Flow_5="(AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_) && (AB_IS_LIVE_T2T_API_Mode_Load_Log)"
   if [ X"${AB_HAS_DATA_Flow_5}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Mode_Load_Errors}"
   let AB_IS_LIVE_T2T_API_Mode_Load_Errors="((AB_HAS_DATA_Flow_9) || (AB_HAS_DATA_Flow_4)) && (AB_USERCOND_T2T_API_Mode_Load_Errors)"
   if [ X"${AB_IS_LIVE_T2T_API_Mode_Load_Errors}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Mode_Load_Log}"
   let AB_IS_LIVE_T2T_API_Mode_Load_Log="((AB_HAS_DATA_Flow_5) || (AB_HAS_DATA_Flow_10)) && (AB_USERCOND_T2T_API_Mode_Load_Log)"
   if [ X"${AB_IS_LIVE_T2T_API_Mode_Load_Log}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_API_Mode_Load_Rejects}"
   let AB_IS_LIVE_T2T_API_Mode_Load_Rejects="((AB_HAS_DATA_Flow_3) || (AB_HAS_DATA_Flow_8)) && (AB_USERCOND_T2T_API_Mode_Load_Rejects)"
   if [ X"${AB_IS_LIVE_T2T_API_Mode_Load_Rejects}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_}"
   let AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_="(AB_HAS_DATA_Flow_19) && (AB_USERCOND_T2T_TPT_Mode_Input_Table__table_)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_19}"
   let AB_HAS_DATA_Flow_19="(AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_) && (AB_IS_LIVE_T2T_TPT_Replicate)"
   if [ X"${AB_HAS_DATA_Flow_19}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_20}"
   let AB_HAS_DATA_Flow_20="(AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_) && (AB_IS_LIVE_T2T_TPT_Mode_Extract_Log)"
   if [ X"${AB_HAS_DATA_Flow_20}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Mode_Extract_Log}"
   let AB_IS_LIVE_T2T_TPT_Mode_Extract_Log="(AB_HAS_DATA_Flow_20) && (AB_USERCOND_T2T_TPT_Mode_Extract_Log)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Extract_Log}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Replicate}"
   let AB_IS_LIVE_T2T_TPT_Replicate="((AB_HAS_DATA_Flow_23) || (AB_HAS_DATA_Flow_19)) && (AB_USERCOND_T2T_TPT_Replicate)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Replicate}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_24}"
   let AB_HAS_DATA_Flow_24="(AB_IS_LIVE_T2T_TPT_Replicate) && (AB_IS_LIVE_T2F_TPT_Mode_Output_File)"
   if [ X"${AB_HAS_DATA_Flow_24}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_15}"
   let AB_HAS_DATA_Flow_15="(AB_IS_LIVE_T2T_TPT_Replicate) && (AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_)"
   if [ X"${AB_HAS_DATA_Flow_15}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_11}"
   let AB_HAS_DATA_Flow_11="(AB_IS_LIVE_T2T_TPT_Replicate) && (AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_)"
   if [ X"${AB_HAS_DATA_Flow_11}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2F_TPT_Mode_Output_File}"
   let AB_IS_LIVE_T2F_TPT_Mode_Output_File="AB_USERCOND_T2F_TPT_Mode_Output_File"
   if [ X"${AB_IS_LIVE_T2F_TPT_Mode_Output_File}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_}"
   let AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_="(AB_HAS_DATA_Flow_15) && (AB_USERCOND_T2T_TPT_Mode_Append_Output_Table__table_)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_16}"
   let AB_HAS_DATA_Flow_16="(AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_) && (AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects)"
   if [ X"${AB_HAS_DATA_Flow_16}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_17}"
   let AB_HAS_DATA_Flow_17="(AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_) && (AB_IS_LIVE_T2T_TPT_Mode_Load_Errors)"
   if [ X"${AB_HAS_DATA_Flow_17}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_18}"
   let AB_HAS_DATA_Flow_18="(AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_) && (AB_IS_LIVE_T2T_TPT_Mode_Load_Log)"
   if [ X"${AB_HAS_DATA_Flow_18}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_}"
   let AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_="(AB_HAS_DATA_Flow_11) && (AB_USERCOND_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_14}"
   let AB_HAS_DATA_Flow_14="(AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_) && (AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects)"
   if [ X"${AB_HAS_DATA_Flow_14}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_12}"
   let AB_HAS_DATA_Flow_12="(AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_) && (AB_IS_LIVE_T2T_TPT_Mode_Load_Errors)"
   if [ X"${AB_HAS_DATA_Flow_12}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_HAS_DATA_Flow_13}"
   let AB_HAS_DATA_Flow_13="(AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_) && (AB_IS_LIVE_T2T_TPT_Mode_Load_Log)"
   if [ X"${AB_HAS_DATA_Flow_13}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Mode_Load_Errors}"
   let AB_IS_LIVE_T2T_TPT_Mode_Load_Errors="((AB_HAS_DATA_Flow_17) || (AB_HAS_DATA_Flow_12)) && (AB_USERCOND_T2T_TPT_Mode_Load_Errors)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Load_Errors}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Mode_Load_Log}"
   let AB_IS_LIVE_T2T_TPT_Mode_Load_Log="((AB_HAS_DATA_Flow_13) || (AB_HAS_DATA_Flow_18)) && (AB_USERCOND_T2T_TPT_Mode_Load_Log)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Load_Log}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects}"
   let AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects="((AB_HAS_DATA_Flow_14) || (AB_HAS_DATA_Flow_16)) && (AB_USERCOND_T2T_TPT_Mode_Load_Rejects)"
   if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects}" != X"$Temp" ]; then
      done=false
   fi
   Temp="${AB_IS_LIVE_Utility_Load_Table_Check_KSH}"
   let AB_IS_LIVE_Utility_Load_Table_Check_KSH="AB_USERCOND_Utility_Load_Table_Check_KSH"
   if [ X"${AB_IS_LIVE_Utility_Load_Table_Check_KSH}" != X"$Temp" ]; then
      done=false
   fi
done
# 
if [ X"${AB_VERBOSE_CONDITIONS}" != X"" ]; then
   # 
   # echo condition variables
   # 
   print -r -- 'AB_USERCOND_dw_infra_batch_teradata_datamover=1'
   print -r -- 'AB_IS_LIVE_dw_infra_batch_teradata_datamover=1'
   print -r -- 'AB_USERCOND_F2T_API_Mode_Input_File='"${AB_USERCOND_F2T_API_Mode_Input_File}"
   print -r -- 'AB_IS_LIVE_F2T_API_Mode_Input_File='"${AB_IS_LIVE_F2T_API_Mode_Input_File}"
   print -r -- 'AB_HAS_DATA_Flow_22='"${AB_HAS_DATA_Flow_22}"
   print -r -- 'AB_USERCOND_F2T_TPT_Mode_Input_File='"${AB_USERCOND_F2T_TPT_Mode_Input_File}"
   print -r -- 'AB_IS_LIVE_F2T_TPT_Mode_Input_File='"${AB_IS_LIVE_F2T_TPT_Mode_Input_File}"
   print -r -- 'AB_HAS_DATA_Flow_23='"${AB_HAS_DATA_Flow_23}"
   print -r -- 'AB_USERCOND_T2T_API_Mode_Input_Table__table_='"${AB_USERCOND_T2T_API_Mode_Input_Table__table_}"
   print -r -- 'AB_IS_LIVE_T2T_API_Mode_Input_Table__table_='"${AB_IS_LIVE_T2T_API_Mode_Input_Table__table_}"
   print -r -- 'AB_HAS_DATA_Flow_1='"${AB_HAS_DATA_Flow_1}"
   print -r -- 'AB_HAS_DATA_Flow_2='"${AB_HAS_DATA_Flow_2}"
   print -r -- 'AB_USERCOND_T2T_API_Mode_Extract_Log='"${AB_USERCOND_T2T_API_Mode_Extract_Log}"
   print -r -- 'AB_IS_LIVE_T2T_API_Mode_Extract_Log='"${AB_IS_LIVE_T2T_API_Mode_Extract_Log}"
   print -r -- 'AB_USERCOND_T2T_API_Replicate='"${AB_USERCOND_T2T_API_Replicate}"
   print -r -- 'AB_IS_LIVE_T2T_API_Replicate='"${AB_IS_LIVE_T2T_API_Replicate}"
   print -r -- 'AB_HAS_DATA_Flow_21='"${AB_HAS_DATA_Flow_21}"
   print -r -- 'AB_HAS_DATA_Flow_7='"${AB_HAS_DATA_Flow_7}"
   print -r -- 'AB_HAS_DATA_Flow_6='"${AB_HAS_DATA_Flow_6}"
   print -r -- 'AB_USERCOND_T2F_API_Mode_Output_File='"${AB_USERCOND_T2F_API_Mode_Output_File}"
   print -r -- 'AB_IS_LIVE_T2F_API_Mode_Output_File='"${AB_IS_LIVE_T2F_API_Mode_Output_File}"
   print -r -- 'AB_USERCOND_T2T_API_Mode_Append_Output_Table__table_='"${AB_USERCOND_T2T_API_Mode_Append_Output_Table__table_}"
   print -r -- 'AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_='"${AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_}"
   print -r -- 'AB_HAS_DATA_Flow_8='"${AB_HAS_DATA_Flow_8}"
   print -r -- 'AB_HAS_DATA_Flow_9='"${AB_HAS_DATA_Flow_9}"
   print -r -- 'AB_HAS_DATA_Flow_10='"${AB_HAS_DATA_Flow_10}"
   print -r -- 'AB_USERCOND_T2T_API_Mode_Trunc_Ins_Output_Table__table_='"${AB_USERCOND_T2T_API_Mode_Trunc_Ins_Output_Table__table_}"
   print -r -- 'AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_='"${AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_}"
   print -r -- 'AB_HAS_DATA_Flow_3='"${AB_HAS_DATA_Flow_3}"
   print -r -- 'AB_HAS_DATA_Flow_4='"${AB_HAS_DATA_Flow_4}"
   print -r -- 'AB_HAS_DATA_Flow_5='"${AB_HAS_DATA_Flow_5}"
   print -r -- 'AB_USERCOND_T2T_API_Mode_Load_Errors='"${AB_USERCOND_T2T_API_Mode_Load_Errors}"
   print -r -- 'AB_IS_LIVE_T2T_API_Mode_Load_Errors='"${AB_IS_LIVE_T2T_API_Mode_Load_Errors}"
   print -r -- 'AB_USERCOND_T2T_API_Mode_Load_Log='"${AB_USERCOND_T2T_API_Mode_Load_Log}"
   print -r -- 'AB_IS_LIVE_T2T_API_Mode_Load_Log='"${AB_IS_LIVE_T2T_API_Mode_Load_Log}"
   print -r -- 'AB_USERCOND_T2T_API_Mode_Load_Rejects='"${AB_USERCOND_T2T_API_Mode_Load_Rejects}"
   print -r -- 'AB_IS_LIVE_T2T_API_Mode_Load_Rejects='"${AB_IS_LIVE_T2T_API_Mode_Load_Rejects}"
   print -r -- 'AB_USERCOND_T2T_TPT_Mode_Input_Table__table_='"${AB_USERCOND_T2T_TPT_Mode_Input_Table__table_}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_='"${AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_}"
   print -r -- 'AB_HAS_DATA_Flow_19='"${AB_HAS_DATA_Flow_19}"
   print -r -- 'AB_HAS_DATA_Flow_20='"${AB_HAS_DATA_Flow_20}"
   print -r -- 'AB_USERCOND_T2T_TPT_Mode_Extract_Log='"${AB_USERCOND_T2T_TPT_Mode_Extract_Log}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Mode_Extract_Log='"${AB_IS_LIVE_T2T_TPT_Mode_Extract_Log}"
   print -r -- 'AB_USERCOND_T2T_TPT_Replicate='"${AB_USERCOND_T2T_TPT_Replicate}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Replicate='"${AB_IS_LIVE_T2T_TPT_Replicate}"
   print -r -- 'AB_HAS_DATA_Flow_24='"${AB_HAS_DATA_Flow_24}"
   print -r -- 'AB_HAS_DATA_Flow_15='"${AB_HAS_DATA_Flow_15}"
   print -r -- 'AB_HAS_DATA_Flow_11='"${AB_HAS_DATA_Flow_11}"
   print -r -- 'AB_USERCOND_T2F_TPT_Mode_Output_File='"${AB_USERCOND_T2F_TPT_Mode_Output_File}"
   print -r -- 'AB_IS_LIVE_T2F_TPT_Mode_Output_File='"${AB_IS_LIVE_T2F_TPT_Mode_Output_File}"
   print -r -- 'AB_USERCOND_T2T_TPT_Mode_Append_Output_Table__table_='"${AB_USERCOND_T2T_TPT_Mode_Append_Output_Table__table_}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_='"${AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_}"
   print -r -- 'AB_HAS_DATA_Flow_16='"${AB_HAS_DATA_Flow_16}"
   print -r -- 'AB_HAS_DATA_Flow_17='"${AB_HAS_DATA_Flow_17}"
   print -r -- 'AB_HAS_DATA_Flow_18='"${AB_HAS_DATA_Flow_18}"
   print -r -- 'AB_USERCOND_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_='"${AB_USERCOND_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_='"${AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_}"
   print -r -- 'AB_HAS_DATA_Flow_14='"${AB_HAS_DATA_Flow_14}"
   print -r -- 'AB_HAS_DATA_Flow_12='"${AB_HAS_DATA_Flow_12}"
   print -r -- 'AB_HAS_DATA_Flow_13='"${AB_HAS_DATA_Flow_13}"
   print -r -- 'AB_USERCOND_T2T_TPT_Mode_Load_Errors='"${AB_USERCOND_T2T_TPT_Mode_Load_Errors}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Mode_Load_Errors='"${AB_IS_LIVE_T2T_TPT_Mode_Load_Errors}"
   print -r -- 'AB_USERCOND_T2T_TPT_Mode_Load_Log='"${AB_USERCOND_T2T_TPT_Mode_Load_Log}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Mode_Load_Log='"${AB_IS_LIVE_T2T_TPT_Mode_Load_Log}"
   print -r -- 'AB_USERCOND_T2T_TPT_Mode_Load_Rejects='"${AB_USERCOND_T2T_TPT_Mode_Load_Rejects}"
   print -r -- 'AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects='"${AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects}"
   print -r -- 'AB_USERCOND_Utility_Load_Table_Check_KSH='"${AB_USERCOND_Utility_Load_Table_Check_KSH}"
   print -r -- 'AB_IS_LIVE_Utility_Load_Table_Check_KSH='"${AB_IS_LIVE_Utility_Load_Table_Check_KSH}"
fi

# Files:
if [ X"${AB_IS_LIVE_F2T_API_Mode_Input_File}" != X0 ]; then
   mp ifile F2T_API_Mode_Input_File "$OUTPUT_FILE"
   AB_PORT_F2T_API_Mode_Input_File_read=F2T_API_Mode_Input_File.read
   AB_METADATA_F2T_API_Mode_Input_File_read=' -metadata metadata1'
else
   :
fi
if [ X"${AB_IS_LIVE_F2T_TPT_Mode_Input_File}" != X0 ]; then
   mp ifile F2T_TPT_Mode_Input_File "$INPUT_FILE"
   AB_PORT_F2T_TPT_Mode_Input_File_read=F2T_TPT_Mode_Input_File.read
   AB_METADATA_F2T_TPT_Mode_Input_File_read=' -metadata metadata1'
else
   :
fi
if [ X"${AB_IS_LIVE_T2F_API_Mode_Output_File}" != X0 ]; then
   mp ofile T2F_API_Mode_Output_File "$OUTPUT_FILE" -mode 664
else
   :
fi
if [ X"${AB_IS_LIVE_T2F_TPT_Mode_Output_File}" != X0 ]; then
   mp ofile T2F_TPT_Mode_Output_File "$OUTPUT_FILE" -mode 664
else
   :
fi

# Components in phase 0:
if [ X"${AB_IS_LIVE_Utility_Load_Table_Check_KSH}" != X0 ]; then
   mp filter Utility_Load_Table_Check_KSH $DW_MASTER_EXE/dw_infra.batch_datamover_utility_load_table_check.ksh -layout layout1
else
   :
fi
mp phase 0

# Components in phase 1:
if [ X"${AB_IS_LIVE_T2T_API_Mode_Input_Table__table_}" != X0 ]; then
   mp itable T2T_API_Mode_Input_Table__table_ "${AB_IDB_SRC_DBC}" -select "${INPUT_TABLE_SEL}" -interface api -field_type_preference delimited -non_ansimode -limit 0 -ramp 0.0 -layout layout2
   AB_PORT_T2T_API_Mode_Input_Table__table__read=T2T_API_Mode_Input_Table__table_.read
   AB_METADATA_T2T_API_Mode_Input_Table__table__read=' -metadata metadata1'
   AB_PORT_T2T_API_Mode_Input_Table__table__log=T2T_API_Mode_Input_Table__table_.log
   AB_METADATA_T2T_API_Mode_Input_Table__table__log=' -metadata metadata2'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_API_Mode_Extract_Log}" != X0 ]; then
   mp logger T2T_API_Mode_Extract_Log "$INPUT_TABLE_LOG_FILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_API_Replicate}" != X0 ]; then
   mp broadcast T2T_API_Replicate -layout layout2
   AB_PORT_T2T_API_Replicate_out=T2T_API_Replicate.out
   AB_METADATA_T2T_API_Replicate_out=' -metadata metadata1'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_}" != X0 ]; then
   mp otable T2T_API_Mode_Append_Output_Table__table_ "${AB_IDB_TRGT_DBC}" -flags wronly,append -table "${TRGT_TABLE}" -interface api -field_type_preference delimited -no_actions_ok -limit 0 -ramp 0.0 -layout layout2
   AB_PORT_T2T_API_Mode_Append_Output_Table__table__reject=T2T_API_Mode_Append_Output_Table__table_.reject
   AB_METADATA_T2T_API_Mode_Append_Output_Table__table__reject=' -metadata metadata1'
   AB_PORT_T2T_API_Mode_Append_Output_Table__table__error=T2T_API_Mode_Append_Output_Table__table_.error
   AB_METADATA_T2T_API_Mode_Append_Output_Table__table__error=' -metadata metadata3'
   AB_PORT_T2T_API_Mode_Append_Output_Table__table__log=T2T_API_Mode_Append_Output_Table__table_.log
   AB_METADATA_T2T_API_Mode_Append_Output_Table__table__log=' -metadata metadata2'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_}" != X0 ]; then
   mp otable T2T_API_Mode_Trunc_Ins_Output_Table__table_ "${AB_IDB_TRGT_DBC}" -flags wronly,trunc -table "${TRGT_TABLE}" -interface api -field_type_preference delimited -no_actions_ok -limit 0 -ramp 0.0 -layout layout2
   AB_PORT_T2T_API_Mode_Trunc_Ins_Output_Table__table__reject=T2T_API_Mode_Trunc_Ins_Output_Table__table_.reject
   AB_METADATA_T2T_API_Mode_Trunc_Ins_Output_Table__table__reject=' -metadata metadata1'
   AB_PORT_T2T_API_Mode_Trunc_Ins_Output_Table__table__error=T2T_API_Mode_Trunc_Ins_Output_Table__table_.error
   AB_METADATA_T2T_API_Mode_Trunc_Ins_Output_Table__table__error=' -metadata metadata3'
   AB_PORT_T2T_API_Mode_Trunc_Ins_Output_Table__table__log=T2T_API_Mode_Trunc_Ins_Output_Table__table_.log
   AB_METADATA_T2T_API_Mode_Trunc_Ins_Output_Table__table__log=' -metadata metadata2'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_API_Mode_Load_Errors}" != X0 ]; then
   mp logger T2T_API_Mode_Load_Errors "$OUTPUT_TABLE_ERROR_FILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_API_Mode_Load_Log}" != X0 ]; then
   mp logger T2T_API_Mode_Load_Log "$OUTPUT_TABLE_LOG_FILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_API_Mode_Load_Rejects}" != X0 ]; then
   mp logger T2T_API_Mode_Load_Rejects "$OUTPUT_TABLE_REJECT_FILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Input_Table__table_}" != X0 ]; then
   mp db-ter-fast-export T2T_TPT_Mode_Input_Table__table_ "${AB_IDB_SRC_DBC}" -select "${INPUT_TABLE_SEL}" -interface PT_api_export -field_type_preference delimited -brief -sleep "$UTILITY_INTERFACE_SLEEP" -tenacity "$UTILITY_INTERFACE_TENACITY" -sessions "$UTILITY_INTERFACE_SESSIONS_MAX"' '"$UTILITY_INTERFACE_SESSIONS_MIN" -instances "$UTILITY_INTERFACE_INSTANCES" -logtab_name "$UTILITY_INTERFACE_LOG_TABLE" -logfile "$UTILITY_INTERFACE_EXTRACT_LOG_FILE" -axsmod_tracelevel None -pt_tracelevel None -limit 0 -ramp 0.0 -layout layout2
   AB_PORT_T2T_TPT_Mode_Input_Table__table__read=T2T_TPT_Mode_Input_Table__table_.read
   AB_METADATA_T2T_TPT_Mode_Input_Table__table__read=' -metadata metadata1'
   AB_PORT_T2T_TPT_Mode_Input_Table__table__log=T2T_TPT_Mode_Input_Table__table_.log
   AB_METADATA_T2T_TPT_Mode_Input_Table__table__log=' -metadata metadata2'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Extract_Log}" != X0 ]; then
   mp logger T2T_TPT_Mode_Extract_Log "$INPUT_TABLE_LOG_FILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Replicate}" != X0 ]; then
   mp broadcast T2T_TPT_Replicate -layout layout2
   AB_PORT_T2T_TPT_Replicate_out=T2T_TPT_Replicate.out
   AB_METADATA_T2T_TPT_Replicate_out=' -metadata metadata1'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_}" != X0 ]; then
   mp otable T2T_TPT_Mode_Append_Output_Table__table_ "${AB_IDB_TRGT_DBC}" -flags wronly,append -table "${TRGT_TABLE}" -interface PT_api_update -field_type_preference delimited -brief -sleep "$UTILITY_INTERFACE_SLEEP" -tenacity "$UTILITY_INTERFACE_TENACITY" -sessions "$UTILITY_INTERFACE_SESSIONS_MAX"' '"$UTILITY_INTERFACE_SESSIONS_MIN" -instances "$UTILITY_INTERFACE_INSTANCES" -logtab_name "$UTILITY_INTERFACE_LOG_TABLE" -np_axsmod_dir "$DW_TMP" -worktab_name "$UTILITY_INTERFACE_WORK_TABLE" -errtab_name "$UTILITY_INTERFACE_ERROR_TABLE" -errlimit "$UTILITY_INTERFACE_ERROR_LIMIT" -ignore_dupl_rows -logfile "$UTILITY_INTERFACE_LOAD_LOG_FILE" -axsmod_tracelevel None -pt_tracelevel None -limit 0 -ramp 0.0 -layout layout2
   AB_PORT_T2T_TPT_Mode_Append_Output_Table__table__reject=T2T_TPT_Mode_Append_Output_Table__table_.reject
   AB_METADATA_T2T_TPT_Mode_Append_Output_Table__table__reject=' -metadata metadata1'
   AB_PORT_T2T_TPT_Mode_Append_Output_Table__table__error=T2T_TPT_Mode_Append_Output_Table__table_.error
   AB_METADATA_T2T_TPT_Mode_Append_Output_Table__table__error=' -metadata metadata3'
   AB_PORT_T2T_TPT_Mode_Append_Output_Table__table__log=T2T_TPT_Mode_Append_Output_Table__table_.log
   AB_METADATA_T2T_TPT_Mode_Append_Output_Table__table__log=' -metadata metadata2'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_}" != X0 ]; then
   mp otable T2T_TPT_Mode_Trunc_Ins_Output_Table__table_ "${AB_IDB_TRGT_DBC}" -flags wronly,trunc -table "${TRGT_TABLE}" -interface PT_api_load -field_type_preference delimited -sleep "$UTILITY_INTERFACE_SLEEP" -tenacity "$UTILITY_INTERFACE_TENACITY" -sessions "$UTILITY_INTERFACE_SESSIONS_MAX"' '"$UTILITY_INTERFACE_SESSIONS_MIN" -instances "$UTILITY_INTERFACE_INSTANCES" -logtab_name "$UTILITY_INTERFACE_LOG_TABLE" -np_axsmod_dir "$DW_TMP" -worktab_name "$UTILITY_INTERFACE_WORK_TABLE" -errtab_name "$UTILITY_INTERFACE_ERROR_TABLE" -errlimit "$UTILITY_INTERFACE_ERROR_LIMIT" -logfile "$UTILITY_INTERFACE_LOAD_LOG_FILE" -axsmod_tracelevel None -pt_tracelevel None -limit 0 -ramp 0.0 -layout layout2
   AB_PORT_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__reject=T2T_TPT_Mode_Trunc_Ins_Output_Table__table_.reject
   AB_METADATA_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__reject=' -metadata metadata1'
   AB_PORT_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__error=T2T_TPT_Mode_Trunc_Ins_Output_Table__table_.error
   AB_METADATA_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__error=' -metadata metadata3'
   AB_PORT_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__log=T2T_TPT_Mode_Trunc_Ins_Output_Table__table_.log
   AB_METADATA_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__log=' -metadata metadata2'
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Load_Errors}" != X0 ]; then
   mp logger T2T_TPT_Mode_Load_Errors "$OUTPUT_TABLE_ERROR_FILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Load_Log}" != X0 ]; then
   mp logger T2T_TPT_Mode_Load_Log "$OUTPUT_TABLE_LOG_FILE" Start End -layout layout3
else
   :
fi
if [ X"${AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects}" != X0 ]; then
   mp logger T2T_TPT_Mode_Load_Rejects "$OUTPUT_TABLE_REJECT_FILE" Start End -layout layout3
else
   :
fi

# Flows for Entire Graph:
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Extract_Log) && (AB_HAS_DATA_Flow_2)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_2 "${AB_PORT_T2T_API_Mode_Input_Table__table__log}" T2T_API_Mode_Extract_Log.in${AB_METADATA_T2T_API_Mode_Input_Table__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Replicate) && (AB_HAS_DATA_Flow_22)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_22 "${AB_PORT_F2T_API_Mode_Input_File_read}" T2T_API_Replicate.in${AB_METADATA_F2T_API_Mode_Input_File_read}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Replicate) && (AB_HAS_DATA_Flow_1)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_1 "${AB_PORT_T2T_API_Mode_Input_Table__table__read}" T2T_API_Replicate.in${AB_METADATA_T2T_API_Mode_Input_Table__table__read}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2F_API_Mode_Output_File) && (AB_HAS_DATA_Flow_21)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_21 "${AB_PORT_T2T_API_Replicate_out}" T2F_API_Mode_Output_File.write${AB_METADATA_T2T_API_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Append_Output_Table__table_) && (AB_HAS_DATA_Flow_7)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_7 "${AB_PORT_T2T_API_Replicate_out}" T2T_API_Mode_Append_Output_Table__table_.write${AB_METADATA_T2T_API_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Trunc_Ins_Output_Table__table_) && (AB_HAS_DATA_Flow_6)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_6 "${AB_PORT_T2T_API_Replicate_out}" T2T_API_Mode_Trunc_Ins_Output_Table__table_.write${AB_METADATA_T2T_API_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Load_Errors) && (AB_HAS_DATA_Flow_9)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_9 "${AB_PORT_T2T_API_Mode_Append_Output_Table__table__error}" T2T_API_Mode_Load_Errors.in${AB_METADATA_T2T_API_Mode_Append_Output_Table__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Load_Errors) && (AB_HAS_DATA_Flow_4)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_4 "${AB_PORT_T2T_API_Mode_Trunc_Ins_Output_Table__table__error}" T2T_API_Mode_Load_Errors.in${AB_METADATA_T2T_API_Mode_Trunc_Ins_Output_Table__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Load_Log) && (AB_HAS_DATA_Flow_5)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_5 "${AB_PORT_T2T_API_Mode_Trunc_Ins_Output_Table__table__log}" T2T_API_Mode_Load_Log.in${AB_METADATA_T2T_API_Mode_Trunc_Ins_Output_Table__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Load_Log) && (AB_HAS_DATA_Flow_10)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_10 "${AB_PORT_T2T_API_Mode_Append_Output_Table__table__log}" T2T_API_Mode_Load_Log.in${AB_METADATA_T2T_API_Mode_Append_Output_Table__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Load_Rejects) && (AB_HAS_DATA_Flow_3)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_3 "${AB_PORT_T2T_API_Mode_Trunc_Ins_Output_Table__table__reject}" T2T_API_Mode_Load_Rejects.in${AB_METADATA_T2T_API_Mode_Trunc_Ins_Output_Table__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_API_Mode_Load_Rejects) && (AB_HAS_DATA_Flow_8)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_8 "${AB_PORT_T2T_API_Mode_Append_Output_Table__table__reject}" T2T_API_Mode_Load_Rejects.in${AB_METADATA_T2T_API_Mode_Append_Output_Table__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Extract_Log) && (AB_HAS_DATA_Flow_20)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_20 "${AB_PORT_T2T_TPT_Mode_Input_Table__table__log}" T2T_TPT_Mode_Extract_Log.in${AB_METADATA_T2T_TPT_Mode_Input_Table__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Replicate) && (AB_HAS_DATA_Flow_23)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_23 "${AB_PORT_F2T_TPT_Mode_Input_File_read}" T2T_TPT_Replicate.in${AB_METADATA_F2T_TPT_Mode_Input_File_read}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Replicate) && (AB_HAS_DATA_Flow_19)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_19 "${AB_PORT_T2T_TPT_Mode_Input_Table__table__read}" T2T_TPT_Replicate.in${AB_METADATA_T2T_TPT_Mode_Input_Table__table__read}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2F_TPT_Mode_Output_File) && (AB_HAS_DATA_Flow_24)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_24 "${AB_PORT_T2T_TPT_Replicate_out}" T2F_TPT_Mode_Output_File.write${AB_METADATA_T2T_TPT_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Append_Output_Table__table_) && (AB_HAS_DATA_Flow_15)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_15 "${AB_PORT_T2T_TPT_Replicate_out}" T2T_TPT_Mode_Append_Output_Table__table_.write${AB_METADATA_T2T_TPT_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Trunc_Ins_Output_Table__table_) && (AB_HAS_DATA_Flow_11)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp straight-flow Flow_11 "${AB_PORT_T2T_TPT_Replicate_out}" T2T_TPT_Mode_Trunc_Ins_Output_Table__table_.write${AB_METADATA_T2T_TPT_Replicate_out}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Load_Errors) && (AB_HAS_DATA_Flow_17)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_17 "${AB_PORT_T2T_TPT_Mode_Append_Output_Table__table__error}" T2T_TPT_Mode_Load_Errors.in${AB_METADATA_T2T_TPT_Mode_Append_Output_Table__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Load_Errors) && (AB_HAS_DATA_Flow_12)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_12 "${AB_PORT_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__error}" T2T_TPT_Mode_Load_Errors.in${AB_METADATA_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__error}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Load_Log) && (AB_HAS_DATA_Flow_13)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_13 "${AB_PORT_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__log}" T2T_TPT_Mode_Load_Log.in${AB_METADATA_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Load_Log) && (AB_HAS_DATA_Flow_18)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_18 "${AB_PORT_T2T_TPT_Mode_Append_Output_Table__table__log}" T2T_TPT_Mode_Load_Log.in${AB_METADATA_T2T_TPT_Mode_Append_Output_Table__table__log}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects) && (AB_HAS_DATA_Flow_14)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_14 "${AB_PORT_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__reject}" T2T_TPT_Mode_Load_Rejects.in${AB_METADATA_T2T_TPT_Mode_Trunc_Ins_Output_Table__table__reject}
fi
let AB_FLOW_CONDITION="(AB_IS_LIVE_T2T_TPT_Mode_Load_Rejects) && (AB_HAS_DATA_Flow_16)"
if [ X"${AB_FLOW_CONDITION}" != X0 ]; then
   mp fan-in-flow Flow_16 "${AB_PORT_T2T_TPT_Mode_Append_Output_Table__table__reject}" T2T_TPT_Mode_Load_Rejects.in${AB_METADATA_T2T_TPT_Mode_Append_Output_Table__table__reject}
fi

if [ X"${AB_VERBOSE_CONDITIONS}" != X"" ]; then
   print -r -- 'Generated graph:'
   mp show
fi
unset AB_COMM_WAIT
export AB_TRACKING_GRAPH_THUMBPRINT;AB_TRACKING_GRAPH_THUMBPRINT=911440
mp run
mpjret=$?
unset AB_COMM_WAIT
unset AB_TRACKING_GRAPH_THUMBPRINT
mp reset
m_rmcatalog > /dev/null 2>&1
export XX_CATALOG;XX_CATALOG="${SAVED_CATALOG}"
export AB_CATALOG;AB_CATALOG="${SAVED_CATALOG}"

#+Script End+  ==================== 
#+End Script End+  ====================

exit $mpjret
